
DE0_CV_SDRAM_Nios_Test.elf:     file format elf32-littlenios2
DE0_CV_SDRAM_Nios_Test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x200201c0

Program Header:
    LOAD off    0x00001000 vaddr 0x20020000 paddr 0x20020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x20020020 paddr 0x20020020 align 2**12
         filesz 0x00010118 memsz 0x00010118 flags r-x
    LOAD off    0x00011138 vaddr 0x20030138 paddr 0x20031c24 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013710 vaddr 0x20033710 paddr 0x20033710 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  20020000  20020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  20020020  20020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fbf8  200201c0  200201c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000380  2002fdb8  2002fdb8  00010db8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  20030138  20031c24  00011138  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  20033710  20033710  00013710  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00000000  00000000  00012c24  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  2003386c  2003386c  00012c24  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012c24  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f88  00000000  00000000  00012c48  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00025652  00000000  00000000  00013bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000982a  00000000  00000000  00039222  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000be02  00000000  00000000  00042a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000021f0  00000000  00000000  0004e850  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003627  00000000  00000000  00050a40  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017c4d  00000000  00000000  00054067  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  0006bcb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001938  00000000  00000000  0006bd18  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  000708d2  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000a  00000000  00000000  000708d5  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000708df  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000708e0  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000708e1  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000708e5  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000708e9  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  000708ed  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  000708f6  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  000708ff  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000b  00000000  00000000  00070908  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000005d  00000000  00000000  00070913  2**0
                  CONTENTS, READONLY
 30 .jdi          00004f72  00000000  00000000  00070970  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000606e6  00000000  00000000  000758e2  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
20020000 l    d  .entry	00000000 .entry
20020020 l    d  .exceptions	00000000 .exceptions
200201c0 l    d  .text	00000000 .text
2002fdb8 l    d  .rodata	00000000 .rodata
20030138 l    d  .rwdata	00000000 .rwdata
20033710 l    d  .bss	00000000 .bss
00000000 l    d  .sdram	00000000 .sdram
2003386c l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../DE0_CV_SDRAM_Nios_Test_bsp//obj/HAL/src/crt0.o
20020208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
20020094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 mem_verify.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
2002fe86 l     O .rodata	00000010 zeroes.4404
2002311c l     F .text	000000bc __sbprintf
2002fe96 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
2002332c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
20024e5c l     F .text	00000008 __fp_unlock
20024e70 l     F .text	0000019c __sinit.part.1
2002500c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
20030138 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
2003057c l     O .rwdata	00000020 lc_ctype_charset
2003055c l     O .rwdata	00000020 lc_message_charset
2003059c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
2002fec8 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
20028428 l     F .text	000000fc __sprint_r.part.0
2002fffc l     O .rodata	00000010 blanks.4348
2002ffec l     O .rodata	00000010 zeroes.4349
200299b4 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
2002d51c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
2002d670 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
2002d69c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
2002d788 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
2002d868 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
2002d954 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
2002db28 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
20031c14 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
2002df48 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
2002e07c l     F .text	00000034 alt_dev_reg
20030b84 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
2002e370 l     F .text	0000020c altera_avalon_jtag_uart_irq
2002e57c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
2002ebb4 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
2002ef2c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
2002f3a0 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
2002f4e0 l     F .text	0000003c alt_get_errno
2002f51c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
20020d08 g     F .text	00000018 putchar
20027904 g     F .text	00000074 _mprec_log10
200279f0 g     F .text	0000008c __any_on
2002a0a8 g     F .text	00000054 _isatty_r
2002fed4 g     O .rodata	00000028 __mprec_tinytens
2002da64 g     F .text	0000007c alt_main
20020d20 g     F .text	000000c0 _puts_r
2003376c g     O .bss	00000100 alt_irq
2002a0fc g     F .text	00000060 _lseek_r
20031c24 g       *ABS*	00000000 __flash_rwdata_start
2002c048 g     F .text	00000088 .hidden __eqdf2
2003386c g       *ABS*	00000000 __alt_heap_start
20020cc4 g     F .text	0000003c printf
2002a1bc g     F .text	0000009c _wcrtomb_r
200282e8 g     F .text	0000005c __sseek
200251ac g     F .text	00000010 __sinit
20029a70 g     F .text	00000140 __swbuf_r
20025c74 g     F .text	0000007c _setlocale_r
20025014 g     F .text	00000068 __sfmoreglue
2002db04 g     F .text	00000024 __malloc_unlock
200267fc g     F .text	0000015c memmove
20025194 g     F .text	00000018 _cleanup
20026a80 g     F .text	000000a8 _Balloc
2002c0d0 g     F .text	000000dc .hidden __gtdf2
2002f734 g     F .text	00000024 altera_nios2_gen2_irq_init
20020000 g     F .entry	0000001c __reset
20020020 g       *ABS*	00000000 __flash_exceptions_start
2002a04c g     F .text	0000005c _fstat_r
20033728 g     O .bss	00000004 errno
20028264 g     F .text	00000008 __seofread
20033730 g     O .bss	00000004 alt_argv
20039be4 g       *ABS*	00000000 _gp
2002df18 g     F .text	00000030 usleep
20030a04 g     O .rwdata	00000180 alt_fd_list
20020d00 g     F .text	00000008 _putchar_r
2002f758 g     F .text	00000090 alt_find_dev
20020b4c g     F .text	00000148 memcpy
20020264 g     F .text	000004f8 TMEM_Verify
20024e64 g     F .text	0000000c _cleanup_r
2002d334 g     F .text	000000dc .hidden __floatsidf
2002f464 g     F .text	0000007c alt_io_redirect
2002c1ac g     F .text	000000f4 .hidden __ltdf2
2002fdb8 g       *ABS*	00000000 __DTOR_END__
20020de0 g     F .text	00000014 puts
20028148 g     F .text	00000074 __fpclassifyd
20027860 g     F .text	000000a4 __ratio
20029998 g     F .text	0000001c __vfiprintf_internal
2002e774 g     F .text	0000021c altera_avalon_jtag_uart_read
20020c94 g     F .text	00000030 _printf_r
20020a90 g     F .text	00000064 .hidden __udivsi3
2002d7c4 g     F .text	000000a4 isatty
2002ff24 g     O .rodata	000000c8 __mprec_tens
20025cf0 g     F .text	0000000c __locale_charset
2002f994 g     F .text	00000090 alt_icache_flush
20033724 g     O .bss	00000004 __malloc_top_pad
20031bec g     O .rwdata	00000004 __mb_cur_max
20025d20 g     F .text	0000000c _localeconv_r
20026e8c g     F .text	0000003c __i2b
20025630 g     F .text	000004bc __sfvwrite_r
200281bc g     F .text	00000054 _sbrk_r
2002a15c g     F .text	00000060 _read_r
20031c0c g     O .rwdata	00000004 alt_max_fd
20029d40 g     F .text	000000f0 _fclose_r
20024e2c g     F .text	00000030 fflush
20033720 g     O .bss	00000004 __malloc_max_sbrked_mem
2002aeb4 g     F .text	000008ac .hidden __adddf3
20027608 g     F .text	0000010c __b2d
2002a97c g     F .text	00000538 .hidden __umoddi3
2002d990 g     F .text	000000d4 lseek
20031be4 g     O .rwdata	00000004 _global_impure_ptr
20027be4 g     F .text	00000564 _realloc_r
2003386c g       *ABS*	00000000 __bss_end
2002f2b0 g     F .text	000000f0 alt_iic_isr_register
2002de10 g     F .text	00000108 alt_tick
2002a404 g     F .text	00000578 .hidden __udivdi3
20029fa8 g     F .text	00000024 _fputwc_r
2002fefc g     O .rodata	00000028 __mprec_bigtens
20026c70 g     F .text	00000104 __s2b
2002d410 g     F .text	000000a8 .hidden __floatunsidf
20027348 g     F .text	00000060 __mcmp
200251cc g     F .text	00000018 __fp_lock_all
2002f264 g     F .text	0000004c alt_ic_irq_enabled
2002dd74 g     F .text	0000009c alt_alarm_stop
20033740 g     O .bss	00000004 alt_irq_active
200200ec g     F .exceptions	000000d4 alt_irq_handler
200309dc g     O .rwdata	00000028 alt_dev_null
2002d628 g     F .text	00000048 alt_dcache_flush_all
20026d74 g     F .text	00000068 __hi0bits
2002d2b4 g     F .text	00000080 .hidden __fixdfsi
20031c24 g       *ABS*	00000000 __ram_rwdata_end
20031c04 g     O .rwdata	00000008 alt_dev_list
2002df84 g     F .text	000000f8 write
20027a7c g     F .text	000000a0 _putc_r
20030138 g       *ABS*	00000000 __ram_rodata_end
2002d6d8 g     F .text	000000b0 fstat
2002c1ac g     F .text	000000f4 .hidden __ledf2
200270c0 g     F .text	00000140 __pow5mult
2002853c g     F .text	0000145c ___vfiprintf_internal_r
20033718 g     O .bss	00000004 __nlocale_changed
20020af4 g     F .text	00000058 .hidden __umodsi3
2003386c g       *ABS*	00000000 end
2002e2b0 g     F .text	000000c0 altera_avalon_jtag_uart_init
2002fdb8 g       *ABS*	00000000 __CTOR_LIST__
2003f400 g       *ABS*	00000000 __alt_stack_pointer
2002ec2c g     F .text	0000007c alt_avalon_timer_sc_init
2002d4b8 g     F .text	00000064 .hidden __clzsi2
2002e990 g     F .text	00000224 altera_avalon_jtag_uart_write
200251bc g     F .text	00000004 __sfp_lock_acquire
20026718 g     F .text	000000e4 memchr
20020f08 g     F .text	000021f8 ___vfprintf_internal_r
20025320 g     F .text	00000310 _free_r
20025cfc g     F .text	00000010 __locale_mb_cur_max
2002fc04 g     F .text	00000180 __call_exitprocs
20033714 g     O .bss	00000004 __mlocale_changed
20031bf0 g     O .rwdata	00000004 __malloc_sbrk_base
200201c0 g     F .text	0000004c _start
20033738 g     O .bss	00000004 _alt_tick_rate
20020e0c g     F .text	00000064 rand
20027200 g     F .text	00000148 __lshift
2003373c g     O .bss	00000004 _alt_nticks
2002db64 g     F .text	000000fc read
2002e0e8 g     F .text	00000064 alt_sys_init
2002faec g     F .text	00000118 __register_exitproc
20026ec8 g     F .text	000001f8 __multiply
2002e61c g     F .text	00000068 altera_avalon_jtag_uart_close
20030138 g       *ABS*	00000000 __ram_rwdata_start
2002fdb8 g       *ABS*	00000000 __ram_rodata_start
20033744 g     O .bss	00000028 __malloc_current_mallinfo
20027714 g     F .text	0000014c __d2b
2002e14c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
2002f8f0 g     F .text	000000a4 alt_get_fd
2002edd4 g     F .text	00000158 alt_busy_sleep
20029c28 g     F .text	00000054 _close_r
2002fa70 g     F .text	0000007c memcmp
2002e20c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
2003386c g       *ABS*	00000000 __alt_stack_base
2002e25c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
200231d8 g     F .text	00000154 __swsetup_r
2002b760 g     F .text	000008e8 .hidden __divdf3
2002507c g     F .text	00000118 __sfp
20027978 g     F .text	00000078 __copybits
200305d4 g     O .rwdata	00000408 __malloc_av_
200251c8 g     F .text	00000004 __sinit_lock_release
2002c2a0 g     F .text	00000718 .hidden __muldf3
20028210 g     F .text	00000054 __sread
2002f7e8 g     F .text	00000108 alt_find_file
2002ef68 g     F .text	000000a4 alt_dev_llist_insert
2002dae0 g     F .text	00000024 __malloc_lock
2002dcc4 g     F .text	000000b0 sbrk
20024dd0 g     F .text	0000005c _fflush_r
20029c7c g     F .text	000000c4 _calloc_r
20033710 g       *ABS*	00000000 __bss_start
20026958 g     F .text	00000128 memset
2002020c g     F .text	00000058 main
20033734 g     O .bss	00000004 alt_envp
2003371c g     O .bss	00000004 __malloc_max_total_mem
2002e1ac g     F .text	00000060 altera_avalon_jtag_uart_write_fd
20029bb0 g     F .text	00000018 __swbuf
20020df4 g     F .text	00000018 srand
20028344 g     F .text	00000008 __sclose
2003f400 g       *ABS*	00000000 __alt_heap_limit
20029e30 g     F .text	00000014 fclose
2002352c g     F .text	00001688 _dtoa_r
20025f0c g     F .text	0000080c _malloc_r
2002a318 g     F .text	00000030 __ascii_wctomb
20031c10 g     O .rwdata	00000004 alt_errno
20025aec g     F .text	000000c4 _fwalk
20027b1c g     F .text	000000c8 putc
20020998 g     F .text	00000084 .hidden __divsi3
200251fc g     F .text	00000124 _malloc_trim_r
2002fdb8 g       *ABS*	00000000 __CTOR_END__
2002834c g     F .text	000000dc strcmp
2002fdb8 g       *ABS*	00000000 __flash_rodata_start
2002fdb8 g       *ABS*	00000000 __DTOR_LIST__
2002c048 g     F .text	00000088 .hidden __nedf2
2002e0b0 g     F .text	00000038 alt_irq_init
2002dc60 g     F .text	00000064 alt_release_fd
2003000c g     O .rodata	00000100 .hidden __clz_tab
20033710 g     O .bss	00000004 _PathLocale
2002fa24 g     F .text	00000014 atexit
20029bc8 g     F .text	00000060 _write_r
20025d2c g     F .text	00000018 setlocale
20031be8 g     O .rwdata	00000004 _impure_ptr
2003372c g     O .bss	00000004 alt_argc
20024bb4 g     F .text	0000021c __sflush_r
2002f06c g     F .text	00000060 _do_dtors
20025d18 g     F .text	00000008 __locale_cjk_lang
20020020 g       .exceptions	00000000 alt_irq_entry
200275a4 g     F .text	00000064 __ulp
200251e4 g     F .text	00000018 __fp_unlock_all
20031bfc g     O .rwdata	00000008 alt_fs_list
20020020 g       *ABS*	00000000 __ram_exceptions_start
20025d44 g     F .text	0000000c localeconv
20020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
2002f100 g     F .text	00000050 alt_ic_isr_register
20031c24 g       *ABS*	00000000 _edata
2003386c g       *ABS*	00000000 _end
20029e44 g     F .text	00000164 __fputwc
200201c0 g       *ABS*	00000000 __ram_exceptions_end
2002e684 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
2002f1d8 g     F .text	0000008c alt_ic_irq_disable
2002826c g     F .text	0000007c __swrite
20031bf4 g     O .rwdata	00000004 __malloc_trim_threshold
20025d0c g     F .text	0000000c __locale_msgcharset
2002fa38 g     F .text	00000038 exit
20025bb0 g     F .text	000000c4 _fwalk_reent
200273a8 g     F .text	000001fc __mdiff
20020a1c g     F .text	00000074 .hidden __modsi3
2002075c g     F .text	0000023c TMEM_QuickVerify
2003f400 g       *ABS*	00000000 __alt_data_end
20020020 g     F .exceptions	00000000 alt_exception
200251c0 g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
2002fd84 g     F .text	00000034 _exit
2002eca8 g     F .text	0000012c alt_alarm_start
2002a3a4 g     F .text	00000060 .hidden __muldi3
20025d50 g     F .text	000001bc __smakebuf_r
20020e70 g     F .text	00000098 strlen
2002f5e0 g     F .text	00000154 open
2002c0d0 g     F .text	000000dc .hidden __gedf2
20031bf8 g     O .rwdata	00000004 __wctomb
20028524 g     F .text	00000018 __sprint_r
2002f0cc g     F .text	00000034 alt_icache_flush_all
20031c20 g     O .rwdata	00000004 alt_priority_mask
2002f150 g     F .text	00000088 alt_ic_irq_enable
20023100 g     F .text	0000001c __vfprintf_internal
2002a348 g     F .text	0000005c _wctomb_r
2002c9b8 g     F .text	000008fc .hidden __subdf3
20026ddc g     F .text	000000b0 __lo0bits
20031c18 g     O .rwdata	00000008 alt_alarm_list
2002f00c g     F .text	00000060 _do_ctors
2002a258 g     F .text	000000c0 wcrtomb
2002d558 g     F .text	000000d0 close
2002d8d0 g     F .text	00000084 alt_load
20029fcc g     F .text	00000080 fputwc
200251c4 g     F .text	00000004 __sinit_lock_acquire
20026b50 g     F .text	00000120 __multadd
20026b28 g     F .text	00000028 _Bfree



Disassembly of section .entry:

20020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
20020000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
20020004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
20020008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
2002000c:	00bffd16 	blt	zero,r2,20020004 <__alt_data_end+0xfffe0c04>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
20020010:	004800b4 	movhi	at,8194
    ori r1, r1, %lo(_start)
20020014:	08407014 	ori	at,at,448
    jmp r1
20020018:	0800683a 	jmp	at
2002001c:	00000000 	call	20000000 <__alt_mem_sdram+0x20000000>

Disassembly of section .exceptions:

20020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
20020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
20020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
20020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
2002002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
20020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
20020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
20020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
2002003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
20020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
20020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
20020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
2002004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
20020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
20020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
20020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
2002005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
20020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
20020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
20020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
2002006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
20020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
20020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
20020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
2002007c:	10000326 	beq	r2,zero,2002008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
20020080:	20000226 	beq	r4,zero,2002008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
20020084:	00200ec0 	call	200200ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
20020088:	00000306 	br	20020098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
2002008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
20020090:	e8bfff17 	ldw	r2,-4(ea)

20020094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
20020094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
20020098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
2002009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
200200a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
200200a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
200200a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
200200ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
200200b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
200200b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
200200b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
200200bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
200200c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
200200c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
200200c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
200200cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
200200d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
200200d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
200200d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
200200dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
200200e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
200200e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
200200e8:	ef80083a 	eret

200200ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
200200ec:	defff904 	addi	sp,sp,-28
200200f0:	dfc00615 	stw	ra,24(sp)
200200f4:	df000515 	stw	fp,20(sp)
200200f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
200200fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
20020100:	0005313a 	rdctl	r2,ipending
20020104:	e0bffe15 	stw	r2,-8(fp)

  return active;
20020108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
2002010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
20020110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
20020114:	00800044 	movi	r2,1
20020118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
2002011c:	e0fffb17 	ldw	r3,-20(fp)
20020120:	e0bffc17 	ldw	r2,-16(fp)
20020124:	1884703a 	and	r2,r3,r2
20020128:	10001426 	beq	r2,zero,2002017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
2002012c:	008800f4 	movhi	r2,8195
20020130:	108ddb04 	addi	r2,r2,14188
20020134:	e0fffd17 	ldw	r3,-12(fp)
20020138:	180690fa 	slli	r3,r3,3
2002013c:	10c5883a 	add	r2,r2,r3
20020140:	10c00017 	ldw	r3,0(r2)
20020144:	008800f4 	movhi	r2,8195
20020148:	108ddb04 	addi	r2,r2,14188
2002014c:	e13ffd17 	ldw	r4,-12(fp)
20020150:	200890fa 	slli	r4,r4,3
20020154:	1105883a 	add	r2,r2,r4
20020158:	10800104 	addi	r2,r2,4
2002015c:	10800017 	ldw	r2,0(r2)
20020160:	1009883a 	mov	r4,r2
20020164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
20020168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
2002016c:	0005313a 	rdctl	r2,ipending
20020170:	e0bfff15 	stw	r2,-4(fp)

  return active;
20020174:	e0bfff17 	ldw	r2,-4(fp)
20020178:	00000706 	br	20020198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
2002017c:	e0bffc17 	ldw	r2,-16(fp)
20020180:	1085883a 	add	r2,r2,r2
20020184:	e0bffc15 	stw	r2,-16(fp)
      i++;
20020188:	e0bffd17 	ldw	r2,-12(fp)
2002018c:	10800044 	addi	r2,r2,1
20020190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
20020194:	003fe106 	br	2002011c <__alt_data_end+0xfffe0d1c>

    active = alt_irq_pending ();
20020198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
2002019c:	e0bffb17 	ldw	r2,-20(fp)
200201a0:	103fdb1e 	bne	r2,zero,20020110 <__alt_data_end+0xfffe0d10>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
200201a4:	0001883a 	nop
}
200201a8:	0001883a 	nop
200201ac:	e037883a 	mov	sp,fp
200201b0:	dfc00117 	ldw	ra,4(sp)
200201b4:	df000017 	ldw	fp,0(sp)
200201b8:	dec00204 	addi	sp,sp,8
200201bc:	f800283a 	ret

Disassembly of section .text:

200201c0 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
200201c0:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
200201c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
200201c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
200201cc:	00bffd16 	blt	zero,r2,200201c4 <__alt_data_end+0xfffe0dc4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
200201d0:	06c800f4 	movhi	sp,8195
    ori sp, sp, %lo(__alt_stack_pointer)
200201d4:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
200201d8:	068800f4 	movhi	gp,8195
    ori gp, gp, %lo(_gp)
200201dc:	d6a6f914 	ori	gp,gp,39908
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
200201e0:	008800f4 	movhi	r2,8195
    ori r2, r2, %lo(__bss_start)
200201e4:	108dc414 	ori	r2,r2,14096

    movhi r3, %hi(__bss_end)
200201e8:	00c800f4 	movhi	r3,8195
    ori r3, r3, %lo(__bss_end)
200201ec:	18ce1b14 	ori	r3,r3,14444

    beq r2, r3, 1f
200201f0:	10c00326 	beq	r2,r3,20020200 <_start+0x40>

0:
    stw zero, (r2)
200201f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
200201f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
200201fc:	10fffd36 	bltu	r2,r3,200201f4 <__alt_data_end+0xfffe0df4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
20020200:	002d8d00 	call	2002d8d0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
20020204:	002da640 	call	2002da64 <alt_main>

20020208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
20020208:	003fff06 	br	20020208 <__alt_data_end+0xfffe0e08>

2002020c <main>:
#include "mem_verify.h"
#include "system.h"
#include "alt_types.h"

int main()
{
2002020c:	defffb04 	addi	sp,sp,-20
20020210:	dfc00415 	stw	ra,16(sp)
20020214:	df000315 	stw	fp,12(sp)
20020218:	df000304 	addi	fp,sp,12
	bool bPass, bLoop;
	int TestIndex ;
	alt_u32 InitValue = 0x01;
2002021c:	00800044 	movi	r2,1
20020220:	e0bffd15 	stw	r2,-12(fp)
	bool bShowMessage = TRUE;
20020224:	00800044 	movi	r2,1
20020228:	e0bffe15 	stw	r2,-8(fp)
	alt_u32 TimeStart, TimeElapsed;
	alt_u8 Status,ButtonStatus;
	const alt_u8 ButtonMask = 0x0F; // 4 button
2002022c:	008003c4 	movi	r2,15
20020230:	e0bfff05 	stb	r2,-4(fp)

   printf("===== SDRAM Test! Size=%dMB (CPU Clock:%d) =====\r\n", SDRAM_SPAN/1024/1024, ALT_CPU_CPU_FREQ);
20020234:	018221b4 	movhi	r6,2182
20020238:	31807004 	addi	r6,r6,448
2002023c:	01401004 	movi	r5,64
20020240:	010800f4 	movhi	r4,8195
20020244:	213f6e04 	addi	r4,r4,-584
20020248:	0020cc40 	call	20020cc4 <printf>
//            usleep(600*1000);
//        }while(bLoop && bPass);
// 	} // while(1)


    return 0;
2002024c:	0005883a 	mov	r2,zero
}
20020250:	e037883a 	mov	sp,fp
20020254:	dfc00117 	ldw	ra,4(sp)
20020258:	df000017 	ldw	fp,0(sp)
2002025c:	dec00204 	addi	sp,sp,8
20020260:	f800283a 	ret

20020264 <TMEM_Verify>:
#include "terasic_includes.h"
#include "mem_verify.h"



bool TMEM_Verify(alt_u32 BaseAddr, alt_u32 ByteLen, alt_u32 InitValue, bool bShowMessage){
20020264:	def7e504 	addi	sp,sp,-8300
20020268:	dfc81a15 	stw	ra,8296(sp)
2002026c:	df081915 	stw	fp,8292(sp)
20020270:	df081904 	addi	fp,sp,8292
20020274:	e13ffc15 	stw	r4,-16(fp)
20020278:	e17ffd15 	stw	r5,-12(fp)
2002027c:	e1bffe15 	stw	r6,-8(fp)
20020280:	e1ffff15 	stw	r7,-4(fp)
    bool bPass = TRUE;
20020284:	00800044 	movi	r2,1
20020288:	e0b7e715 	stw	r2,-8292(fp)
    alt_u32 szData[1025];
    alt_u32 szRead[1025];
    int i, nRemainedLen, nAccessLen;
    alt_u32 *pDes, *pSrc, nItemNum, nPos;

    int nProgressIndex=0;
2002028c:	e037ed15 	stw	zero,-8268(fp)
    alt_u32 szProgress[10];
    
    for(i=0;i<10;i++){
20020290:	e037e815 	stw	zero,-8288(fp)
20020294:	00001206 	br	200202e0 <TMEM_Verify+0x7c>
        szProgress[i] = ByteLen/10*(i+1);     
20020298:	e0bffd17 	ldw	r2,-12(fp)
2002029c:	01400284 	movi	r5,10
200202a0:	1009883a 	mov	r4,r2
200202a4:	0020a900 	call	20020a90 <__udivsi3>
200202a8:	1007883a 	mov	r3,r2
200202ac:	e0b7e817 	ldw	r2,-8288(fp)
200202b0:	10800044 	addi	r2,r2,1
200202b4:	1887383a 	mul	r3,r3,r2
200202b8:	e0b7e817 	ldw	r2,-8288(fp)
200202bc:	1085883a 	add	r2,r2,r2
200202c0:	1085883a 	add	r2,r2,r2
200202c4:	e137e704 	addi	r4,fp,-8292
200202c8:	2085883a 	add	r2,r4,r2
200202cc:	10880b04 	addi	r2,r2,8236
200202d0:	10c00015 	stw	r3,0(r2)
    alt_u32 *pDes, *pSrc, nItemNum, nPos;

    int nProgressIndex=0;
    alt_u32 szProgress[10];
    
    for(i=0;i<10;i++){
200202d4:	e0b7e817 	ldw	r2,-8288(fp)
200202d8:	10800044 	addi	r2,r2,1
200202dc:	e0b7e815 	stw	r2,-8288(fp)
200202e0:	e0b7e817 	ldw	r2,-8288(fp)
200202e4:	10800290 	cmplti	r2,r2,10
200202e8:	103feb1e 	bne	r2,zero,20020298 <__alt_data_end+0xfffe0e98>
        szProgress[i] = ByteLen/10*(i+1);     
    }
    
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
200202ec:	00810044 	movi	r2,1025
200202f0:	e0b7ee15 	stw	r2,-8264(fp)
    for(i=0;i<nItemNum;i++){
200202f4:	e037e815 	stw	zero,-8288(fp)
200202f8:	00001e06 	br	20020374 <TMEM_Verify+0x110>
        if (i == 0)
200202fc:	e0b7e817 	ldw	r2,-8288(fp)
20020300:	1000091e 	bne	r2,zero,20020328 <TMEM_Verify+0xc4>
            szData[i] = InitValue;
20020304:	e0b7e817 	ldw	r2,-8288(fp)
20020308:	1085883a 	add	r2,r2,r2
2002030c:	1085883a 	add	r2,r2,r2
20020310:	e0f7e704 	addi	r3,fp,-8292
20020314:	1885883a 	add	r2,r3,r2
20020318:	10800904 	addi	r2,r2,36
2002031c:	e0fffe17 	ldw	r3,-8(fp)
20020320:	10c00015 	stw	r3,0(r2)
20020324:	00001006 	br	20020368 <TMEM_Verify+0x104>
        else     
            szData[i] = szData[i-1] * 13;
20020328:	e0b7e817 	ldw	r2,-8288(fp)
2002032c:	10bfffc4 	addi	r2,r2,-1
20020330:	1085883a 	add	r2,r2,r2
20020334:	1085883a 	add	r2,r2,r2
20020338:	e137e704 	addi	r4,fp,-8292
2002033c:	2085883a 	add	r2,r4,r2
20020340:	10800904 	addi	r2,r2,36
20020344:	10800017 	ldw	r2,0(r2)
20020348:	10c00364 	muli	r3,r2,13
2002034c:	e0b7e817 	ldw	r2,-8288(fp)
20020350:	1085883a 	add	r2,r2,r2
20020354:	1085883a 	add	r2,r2,r2
20020358:	e137e704 	addi	r4,fp,-8292
2002035c:	2085883a 	add	r2,r4,r2
20020360:	10800904 	addi	r2,r2,36
20020364:	10c00015 	stw	r3,0(r2)
    }
    
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
    for(i=0;i<nItemNum;i++){
20020368:	e0b7e817 	ldw	r2,-8288(fp)
2002036c:	10800044 	addi	r2,r2,1
20020370:	e0b7e815 	stw	r2,-8288(fp)
20020374:	e0f7e817 	ldw	r3,-8288(fp)
20020378:	e0b7ee17 	ldw	r2,-8264(fp)
2002037c:	18bfdf36 	bltu	r3,r2,200202fc <__alt_data_end+0xfffe0efc>
        if (i == 0)
            szData[i] = InitValue;
        else     
            szData[i] = szData[i-1] * 13;
    }
    szData[nItemNum-1] = 0xAAAAAAAA;
20020380:	e0b7ee17 	ldw	r2,-8264(fp)
20020384:	10bfffc4 	addi	r2,r2,-1
20020388:	1085883a 	add	r2,r2,r2
2002038c:	1085883a 	add	r2,r2,r2
20020390:	e0f7e704 	addi	r3,fp,-8292
20020394:	1885883a 	add	r2,r3,r2
20020398:	10c00904 	addi	r3,r2,36
2002039c:	00aaaaf4 	movhi	r2,43691
200203a0:	10aaaa84 	addi	r2,r2,-21846
200203a4:	18800015 	stw	r2,0(r3)
    szData[nItemNum-2] = 0x55555555;
200203a8:	e0b7ee17 	ldw	r2,-8264(fp)
200203ac:	10bfff84 	addi	r2,r2,-2
200203b0:	1085883a 	add	r2,r2,r2
200203b4:	1085883a 	add	r2,r2,r2
200203b8:	e137e704 	addi	r4,fp,-8292
200203bc:	2085883a 	add	r2,r4,r2
200203c0:	10c00904 	addi	r3,r2,36
200203c4:	00955574 	movhi	r2,21845
200203c8:	10955544 	addi	r2,r2,21845
200203cc:	18800015 	stw	r2,0(r3)
    szData[nItemNum-3] = 0x00000000;
200203d0:	e0b7ee17 	ldw	r2,-8264(fp)
200203d4:	10bfff44 	addi	r2,r2,-3
200203d8:	1085883a 	add	r2,r2,r2
200203dc:	1085883a 	add	r2,r2,r2
200203e0:	e0f7e704 	addi	r3,fp,-8292
200203e4:	1885883a 	add	r2,r3,r2
200203e8:	10800904 	addi	r2,r2,36
200203ec:	10000015 	stw	zero,0(r2)
    szData[nItemNum-4] = 0xFFFFFFFF;
200203f0:	e0b7ee17 	ldw	r2,-8264(fp)
200203f4:	10bfff04 	addi	r2,r2,-4
200203f8:	1085883a 	add	r2,r2,r2
200203fc:	1085883a 	add	r2,r2,r2
20020400:	e137e704 	addi	r4,fp,-8292
20020404:	2085883a 	add	r2,r4,r2
20020408:	10800904 	addi	r2,r2,36
2002040c:	00ffffc4 	movi	r3,-1
20020410:	10c00015 	stw	r3,0(r2)
    
    if (bShowMessage)
20020414:	e0bfff17 	ldw	r2,-4(fp)
20020418:	10000326 	beq	r2,zero,20020428 <TMEM_Verify+0x1c4>
        printf("write...\n");
2002041c:	010800f4 	movhi	r4,8195
20020420:	213f7b04 	addi	r4,r4,-532
20020424:	0020de00 	call	20020de0 <puts>
    // write
    pDes = (alt_u32 *)BaseAddr;
20020428:	e0bffc17 	ldw	r2,-16(fp)
2002042c:	e0b7ea15 	stw	r2,-8280(fp)
    nAccessLen = sizeof(szData);
20020430:	00840104 	movi	r2,4100
20020434:	e0b7e915 	stw	r2,-8284(fp)
    nPos = 0;
20020438:	e037ec15 	stw	zero,-8272(fp)
    while(nPos < ByteLen){
2002043c:	00003606 	br	20020518 <TMEM_Verify+0x2b4>
        nRemainedLen = ByteLen - nPos;
20020440:	e0fffd17 	ldw	r3,-12(fp)
20020444:	e0b7ec17 	ldw	r2,-8272(fp)
20020448:	1885c83a 	sub	r2,r3,r2
2002044c:	e0b7ef15 	stw	r2,-8260(fp)
        if (nAccessLen > nRemainedLen)
20020450:	e0b7e917 	ldw	r2,-8284(fp)
20020454:	e0f7ef17 	ldw	r3,-8260(fp)
20020458:	1880020e 	bge	r3,r2,20020464 <TMEM_Verify+0x200>
            nAccessLen = nRemainedLen;
2002045c:	e0b7ef17 	ldw	r2,-8260(fp)
20020460:	e0b7e915 	stw	r2,-8284(fp)
        memcpy(pDes, szData, nAccessLen);
20020464:	e0f7e917 	ldw	r3,-8284(fp)
20020468:	e0b7f004 	addi	r2,fp,-8256
2002046c:	180d883a 	mov	r6,r3
20020470:	100b883a 	mov	r5,r2
20020474:	e137ea17 	ldw	r4,-8280(fp)
20020478:	0020b4c0 	call	20020b4c <memcpy>
        pDes += nAccessLen/4;
2002047c:	e0b7e917 	ldw	r2,-8284(fp)
20020480:	1000010e 	bge	r2,zero,20020488 <TMEM_Verify+0x224>
20020484:	108000c4 	addi	r2,r2,3
20020488:	1005d0ba 	srai	r2,r2,2
2002048c:	1085883a 	add	r2,r2,r2
20020490:	1085883a 	add	r2,r2,r2
20020494:	1007883a 	mov	r3,r2
20020498:	e0b7ea17 	ldw	r2,-8280(fp)
2002049c:	10c5883a 	add	r2,r2,r3
200204a0:	e0b7ea15 	stw	r2,-8280(fp)
        nPos += nAccessLen;
200204a4:	e0b7e917 	ldw	r2,-8284(fp)
200204a8:	e0f7ec17 	ldw	r3,-8272(fp)
200204ac:	1885883a 	add	r2,r3,r2
200204b0:	e0b7ec15 	stw	r2,-8272(fp)
        
        if (bShowMessage){
200204b4:	e0bfff17 	ldw	r2,-4(fp)
200204b8:	10001726 	beq	r2,zero,20020518 <TMEM_Verify+0x2b4>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
200204bc:	e0b7ed17 	ldw	r2,-8268(fp)
200204c0:	10800288 	cmpgei	r2,r2,10
200204c4:	1000141e 	bne	r2,zero,20020518 <TMEM_Verify+0x2b4>
200204c8:	e0b7ed17 	ldw	r2,-8268(fp)
200204cc:	1085883a 	add	r2,r2,r2
200204d0:	1085883a 	add	r2,r2,r2
200204d4:	e0f7e704 	addi	r3,fp,-8292
200204d8:	1885883a 	add	r2,r3,r2
200204dc:	10880b04 	addi	r2,r2,8236
200204e0:	10800017 	ldw	r2,0(r2)
200204e4:	e0f7ec17 	ldw	r3,-8272(fp)
200204e8:	18800b36 	bltu	r3,r2,20020518 <TMEM_Verify+0x2b4>
                nProgressIndex++;
200204ec:	e0b7ed17 	ldw	r2,-8268(fp)
200204f0:	10800044 	addi	r2,r2,1
200204f4:	e0b7ed15 	stw	r2,-8268(fp)
                printf("%02d%% ", nProgressIndex*10);
200204f8:	e0b7ed17 	ldw	r2,-8268(fp)
200204fc:	108002a4 	muli	r2,r2,10
20020500:	100b883a 	mov	r5,r2
20020504:	010800f4 	movhi	r4,8195
20020508:	213f7e04 	addi	r4,r4,-520
2002050c:	0020cc40 	call	20020cc4 <printf>
                usleep(50);
20020510:	01000c84 	movi	r4,50
20020514:	002df180 	call	2002df18 <usleep>
        printf("write...\n");
    // write
    pDes = (alt_u32 *)BaseAddr;
    nAccessLen = sizeof(szData);
    nPos = 0;
    while(nPos < ByteLen){
20020518:	e0f7ec17 	ldw	r3,-8272(fp)
2002051c:	e0bffd17 	ldw	r2,-12(fp)
20020520:	18bfc736 	bltu	r3,r2,20020440 <__alt_data_end+0xfffe1040>
                usleep(50);
            }
        }            
    } 
    
    alt_dcache_flush_all();
20020524:	002d6280 	call	2002d628 <alt_dcache_flush_all>
    
    if (bShowMessage){
20020528:	e0bfff17 	ldw	r2,-4(fp)
2002052c:	10000626 	beq	r2,zero,20020548 <TMEM_Verify+0x2e4>
        nProgressIndex = 0;
20020530:	e037ed15 	stw	zero,-8268(fp)
        printf("\nread/verify...\n");
20020534:	010800f4 	movhi	r4,8195
20020538:	213f8004 	addi	r4,r4,-512
2002053c:	0020de00 	call	20020de0 <puts>
        usleep(50);
20020540:	01000c84 	movi	r4,50
20020544:	002df180 	call	2002df18 <usleep>
    }        
    
    // read & verify
    pSrc = (alt_u32 *)BaseAddr;
20020548:	e0bffc17 	ldw	r2,-16(fp)
2002054c:	e0b7eb15 	stw	r2,-8276(fp)
    nAccessLen = sizeof(szRead);
20020550:	00840104 	movi	r2,4100
20020554:	e0b7e915 	stw	r2,-8284(fp)
    nPos = 0;
20020558:	e037ec15 	stw	zero,-8272(fp)
    while(bPass && nPos < ByteLen){
2002055c:	00007006 	br	20020720 <TMEM_Verify+0x4bc>
        nRemainedLen = ByteLen - nPos;
20020560:	e0fffd17 	ldw	r3,-12(fp)
20020564:	e0b7ec17 	ldw	r2,-8272(fp)
20020568:	1885c83a 	sub	r2,r3,r2
2002056c:	e0b7ef15 	stw	r2,-8260(fp)
        if (nAccessLen > nRemainedLen)
20020570:	e0b7e917 	ldw	r2,-8284(fp)
20020574:	e0f7ef17 	ldw	r3,-8260(fp)
20020578:	1880020e 	bge	r3,r2,20020584 <TMEM_Verify+0x320>
            nAccessLen = nRemainedLen;
2002057c:	e0b7ef17 	ldw	r2,-8260(fp)
20020580:	e0b7e915 	stw	r2,-8284(fp)
       // memset(szRead, 0xAA, nAccessLen); // reset content    
        memcpy(szRead, pSrc, nAccessLen);
20020584:	e0f7e917 	ldw	r3,-8284(fp)
20020588:	e0bbf104 	addi	r2,fp,-4156
2002058c:	180d883a 	mov	r6,r3
20020590:	e177eb17 	ldw	r5,-8276(fp)
20020594:	1009883a 	mov	r4,r2
20020598:	0020b4c0 	call	20020b4c <memcpy>
        // verify
        nItemNum = nAccessLen / 4;
2002059c:	e0b7e917 	ldw	r2,-8284(fp)
200205a0:	1000010e 	bge	r2,zero,200205a8 <TMEM_Verify+0x344>
200205a4:	108000c4 	addi	r2,r2,3
200205a8:	1005d0ba 	srai	r2,r2,2
200205ac:	e0b7ee15 	stw	r2,-8264(fp)
        for(i=0;i<nItemNum && bPass;i++){
200205b0:	e037e815 	stw	zero,-8288(fp)
200205b4:	00003106 	br	2002067c <TMEM_Verify+0x418>
            if (szRead[i] != szData[i]){
200205b8:	e0b7e817 	ldw	r2,-8288(fp)
200205bc:	1085883a 	add	r2,r2,r2
200205c0:	1085883a 	add	r2,r2,r2
200205c4:	e137e704 	addi	r4,fp,-8292
200205c8:	2085883a 	add	r2,r4,r2
200205cc:	10840a04 	addi	r2,r2,4136
200205d0:	10c00017 	ldw	r3,0(r2)
200205d4:	e0b7e817 	ldw	r2,-8288(fp)
200205d8:	1085883a 	add	r2,r2,r2
200205dc:	1085883a 	add	r2,r2,r2
200205e0:	e137e704 	addi	r4,fp,-8292
200205e4:	2085883a 	add	r2,r4,r2
200205e8:	10800904 	addi	r2,r2,36
200205ec:	10800017 	ldw	r2,0(r2)
200205f0:	18801f26 	beq	r3,r2,20020670 <TMEM_Verify+0x40c>
                if (bShowMessage){
200205f4:	e0bfff17 	ldw	r2,-4(fp)
200205f8:	10001c26 	beq	r2,zero,2002066c <TMEM_Verify+0x408>
                   printf("verify ng, read=%08Xh, expected=%08Xh, i=%Xh\n", (int)szRead[i], (int)szData[i], (int)(nPos/4+i));
200205fc:	e0b7e817 	ldw	r2,-8288(fp)
20020600:	1085883a 	add	r2,r2,r2
20020604:	1085883a 	add	r2,r2,r2
20020608:	e0f7e704 	addi	r3,fp,-8292
2002060c:	1885883a 	add	r2,r3,r2
20020610:	10840a04 	addi	r2,r2,4136
20020614:	10800017 	ldw	r2,0(r2)
20020618:	1009883a 	mov	r4,r2
2002061c:	e0b7e817 	ldw	r2,-8288(fp)
20020620:	1085883a 	add	r2,r2,r2
20020624:	1085883a 	add	r2,r2,r2
20020628:	e0f7e704 	addi	r3,fp,-8292
2002062c:	1885883a 	add	r2,r3,r2
20020630:	10800904 	addi	r2,r2,36
20020634:	10800017 	ldw	r2,0(r2)
20020638:	100b883a 	mov	r5,r2
2002063c:	e0b7ec17 	ldw	r2,-8272(fp)
20020640:	1006d0ba 	srli	r3,r2,2
20020644:	e0b7e817 	ldw	r2,-8288(fp)
20020648:	1885883a 	add	r2,r3,r2
2002064c:	100f883a 	mov	r7,r2
20020650:	280d883a 	mov	r6,r5
20020654:	200b883a 	mov	r5,r4
20020658:	010800f4 	movhi	r4,8195
2002065c:	213f8404 	addi	r4,r4,-496
20020660:	0020cc40 	call	20020cc4 <printf>
                   usleep(50);
20020664:	01000c84 	movi	r4,50
20020668:	002df180 	call	2002df18 <usleep>
                }   
                bPass = FALSE;
2002066c:	e037e715 	stw	zero,-8292(fp)
            nAccessLen = nRemainedLen;
       // memset(szRead, 0xAA, nAccessLen); // reset content    
        memcpy(szRead, pSrc, nAccessLen);
        // verify
        nItemNum = nAccessLen / 4;
        for(i=0;i<nItemNum && bPass;i++){
20020670:	e0b7e817 	ldw	r2,-8288(fp)
20020674:	10800044 	addi	r2,r2,1
20020678:	e0b7e815 	stw	r2,-8288(fp)
2002067c:	e0f7e817 	ldw	r3,-8288(fp)
20020680:	e0b7ee17 	ldw	r2,-8264(fp)
20020684:	1880022e 	bgeu	r3,r2,20020690 <TMEM_Verify+0x42c>
20020688:	e0b7e717 	ldw	r2,-8292(fp)
2002068c:	103fca1e 	bne	r2,zero,200205b8 <__alt_data_end+0xfffe11b8>
                }   
                bPass = FALSE;
            }    
        }
        //
        pSrc += nItemNum;
20020690:	e0b7ee17 	ldw	r2,-8264(fp)
20020694:	1085883a 	add	r2,r2,r2
20020698:	1085883a 	add	r2,r2,r2
2002069c:	1007883a 	mov	r3,r2
200206a0:	e0b7eb17 	ldw	r2,-8276(fp)
200206a4:	10c5883a 	add	r2,r2,r3
200206a8:	e0b7eb15 	stw	r2,-8276(fp)
        nPos += nAccessLen;
200206ac:	e0b7e917 	ldw	r2,-8284(fp)
200206b0:	e0f7ec17 	ldw	r3,-8272(fp)
200206b4:	1885883a 	add	r2,r3,r2
200206b8:	e0b7ec15 	stw	r2,-8272(fp)

        if (bShowMessage){
200206bc:	e0bfff17 	ldw	r2,-4(fp)
200206c0:	10001726 	beq	r2,zero,20020720 <TMEM_Verify+0x4bc>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
200206c4:	e0b7ed17 	ldw	r2,-8268(fp)
200206c8:	10800288 	cmpgei	r2,r2,10
200206cc:	1000141e 	bne	r2,zero,20020720 <TMEM_Verify+0x4bc>
200206d0:	e0b7ed17 	ldw	r2,-8268(fp)
200206d4:	1085883a 	add	r2,r2,r2
200206d8:	1085883a 	add	r2,r2,r2
200206dc:	e137e704 	addi	r4,fp,-8292
200206e0:	2085883a 	add	r2,r4,r2
200206e4:	10880b04 	addi	r2,r2,8236
200206e8:	10800017 	ldw	r2,0(r2)
200206ec:	e0f7ec17 	ldw	r3,-8272(fp)
200206f0:	18800b36 	bltu	r3,r2,20020720 <TMEM_Verify+0x4bc>
                nProgressIndex++;
200206f4:	e0b7ed17 	ldw	r2,-8268(fp)
200206f8:	10800044 	addi	r2,r2,1
200206fc:	e0b7ed15 	stw	r2,-8268(fp)
                printf("%02d%% ", nProgressIndex*10);
20020700:	e0b7ed17 	ldw	r2,-8268(fp)
20020704:	108002a4 	muli	r2,r2,10
20020708:	100b883a 	mov	r5,r2
2002070c:	010800f4 	movhi	r4,8195
20020710:	213f7e04 	addi	r4,r4,-520
20020714:	0020cc40 	call	20020cc4 <printf>
                usleep(50);
20020718:	01000c84 	movi	r4,50
2002071c:	002df180 	call	2002df18 <usleep>
    
    // read & verify
    pSrc = (alt_u32 *)BaseAddr;
    nAccessLen = sizeof(szRead);
    nPos = 0;
    while(bPass && nPos < ByteLen){
20020720:	e0b7e717 	ldw	r2,-8292(fp)
20020724:	10000326 	beq	r2,zero,20020734 <TMEM_Verify+0x4d0>
20020728:	e0f7ec17 	ldw	r3,-8272(fp)
2002072c:	e0bffd17 	ldw	r2,-12(fp)
20020730:	18bf8b36 	bltu	r3,r2,20020560 <__alt_data_end+0xfffe1160>
                usleep(50);
            }
        }            
    }     
    
    if (bShowMessage)
20020734:	e0bfff17 	ldw	r2,-4(fp)
20020738:	10000226 	beq	r2,zero,20020744 <TMEM_Verify+0x4e0>
        printf("\n");
2002073c:	01000284 	movi	r4,10
20020740:	0020d080 	call	20020d08 <putchar>
   
    
    return bPass;
20020744:	e0b7e717 	ldw	r2,-8292(fp)
}
20020748:	e037883a 	mov	sp,fp
2002074c:	dfc00117 	ldw	ra,4(sp)
20020750:	df000017 	ldw	fp,0(sp)
20020754:	dec00204 	addi	sp,sp,8
20020758:	f800283a 	ret

2002075c <TMEM_QuickVerify>:

bool TMEM_QuickVerify(alt_u32 BaseAddr, alt_u32 DataSize, alt_u32 DataWidth, alt_u32 AddrWidth){
2002075c:	defff104 	addi	sp,sp,-60
20020760:	dfc00e15 	stw	ra,56(sp)
20020764:	df000d15 	stw	fp,52(sp)
20020768:	df000d04 	addi	fp,sp,52
2002076c:	e13ffc15 	stw	r4,-16(fp)
20020770:	e17ffd15 	stw	r5,-12(fp)
20020774:	e1bffe15 	stw	r6,-8(fp)
20020778:	e1ffff15 	stw	r7,-4(fp)
    bool bPass = TRUE;
2002077c:	00800044 	movi	r2,1
20020780:	e0bff315 	stw	r2,-52(fp)
    const alt_u32 TestNum = 1024*512;
20020784:	00800234 	movhi	r2,8
20020788:	e0bff615 	stw	r2,-40(fp)
    const alt_u32 TestPattern = 0xAA;
2002078c:	00802a84 	movi	r2,170
20020790:	e0bff715 	stw	r2,-36(fp)
    alt_u32 mask, Read32, Addr32, TestData32, TestAddr32;
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
20020794:	00800044 	movi	r2,1
20020798:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<AddrWidth && bPass;i++){
2002079c:	e03ff515 	stw	zero,-44(fp)
200207a0:	00001b06 	br	20020810 <TMEM_QuickVerify+0xb4>
        //*(pMem + mask) = TestPattern;
        IOWR(BaseAddr, mask, TestPattern);
200207a4:	e0bff417 	ldw	r2,-48(fp)
200207a8:	1085883a 	add	r2,r2,r2
200207ac:	1085883a 	add	r2,r2,r2
200207b0:	1007883a 	mov	r3,r2
200207b4:	e0bffc17 	ldw	r2,-16(fp)
200207b8:	1885883a 	add	r2,r3,r2
200207bc:	1007883a 	mov	r3,r2
200207c0:	e0bff717 	ldw	r2,-36(fp)
200207c4:	18800035 	stwio	r2,0(r3)
        //if (*(pMem + mask) != TestPattern)
        Read32 = IORD(BaseAddr, mask);
200207c8:	e0bff417 	ldw	r2,-48(fp)
200207cc:	1085883a 	add	r2,r2,r2
200207d0:	1085883a 	add	r2,r2,r2
200207d4:	1007883a 	mov	r3,r2
200207d8:	e0bffc17 	ldw	r2,-16(fp)
200207dc:	1885883a 	add	r2,r3,r2
200207e0:	10800037 	ldwio	r2,0(r2)
200207e4:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestPattern)
200207e8:	e0fff817 	ldw	r3,-32(fp)
200207ec:	e0bff717 	ldw	r2,-36(fp)
200207f0:	18800126 	beq	r3,r2,200207f8 <TMEM_QuickVerify+0x9c>
            bPass = FALSE;
200207f4:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;    
200207f8:	e0bff417 	ldw	r2,-48(fp)
200207fc:	1085883a 	add	r2,r2,r2
20020800:	e0bff415 	stw	r2,-48(fp)
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
    for(i=0;i<AddrWidth && bPass;i++){
20020804:	e0bff517 	ldw	r2,-44(fp)
20020808:	10800044 	addi	r2,r2,1
2002080c:	e0bff515 	stw	r2,-44(fp)
20020810:	e0fff517 	ldw	r3,-44(fp)
20020814:	e0bfff17 	ldw	r2,-4(fp)
20020818:	1880022e 	bgeu	r3,r2,20020824 <TMEM_QuickVerify+0xc8>
2002081c:	e0bff317 	ldw	r2,-52(fp)
20020820:	103fe01e 	bne	r2,zero,200207a4 <__alt_data_end+0xfffe13a4>
            bPass = FALSE;
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
20020824:	00800044 	movi	r2,1
20020828:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<DataWidth && bPass;i++){
2002082c:	e03ff515 	stw	zero,-44(fp)
20020830:	00002206 	br	200208bc <TMEM_QuickVerify+0x160>
        //*(pMem+i/32) = mask;
        Addr32 = i*13;
20020834:	e0bff517 	ldw	r2,-44(fp)
20020838:	10800364 	muli	r2,r2,13
2002083c:	e0bff915 	stw	r2,-28(fp)
        IOWR(BaseAddr, Addr32, mask);
20020840:	e0bff917 	ldw	r2,-28(fp)
20020844:	1085883a 	add	r2,r2,r2
20020848:	1085883a 	add	r2,r2,r2
2002084c:	1007883a 	mov	r3,r2
20020850:	e0bffc17 	ldw	r2,-16(fp)
20020854:	1885883a 	add	r2,r3,r2
20020858:	1007883a 	mov	r3,r2
2002085c:	e0bff417 	ldw	r2,-48(fp)
20020860:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, Addr32);
20020864:	e0bff917 	ldw	r2,-28(fp)
20020868:	1085883a 	add	r2,r2,r2
2002086c:	1085883a 	add	r2,r2,r2
20020870:	1007883a 	mov	r3,r2
20020874:	e0bffc17 	ldw	r2,-16(fp)
20020878:	1885883a 	add	r2,r3,r2
2002087c:	10800037 	ldwio	r2,0(r2)
20020880:	e0bff815 	stw	r2,-32(fp)
        //if (*(pMem+i/32) != mask)
        if (Read32 != mask)
20020884:	e0fff817 	ldw	r3,-32(fp)
20020888:	e0bff417 	ldw	r2,-48(fp)
2002088c:	18800126 	beq	r3,r2,20020894 <TMEM_QuickVerify+0x138>
            bPass = FALSE;
20020890:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;
20020894:	e0bff417 	ldw	r2,-48(fp)
20020898:	1085883a 	add	r2,r2,r2
2002089c:	e0bff415 	stw	r2,-48(fp)
        if (mask == 0x00)
200208a0:	e0bff417 	ldw	r2,-48(fp)
200208a4:	1000021e 	bne	r2,zero,200208b0 <TMEM_QuickVerify+0x154>
            mask = 0x01;    
200208a8:	00800044 	movi	r2,1
200208ac:	e0bff415 	stw	r2,-48(fp)
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
    for(i=0;i<DataWidth && bPass;i++){
200208b0:	e0bff517 	ldw	r2,-44(fp)
200208b4:	10800044 	addi	r2,r2,1
200208b8:	e0bff515 	stw	r2,-44(fp)
200208bc:	e0fff517 	ldw	r3,-44(fp)
200208c0:	e0bffe17 	ldw	r2,-8(fp)
200208c4:	1880022e 	bgeu	r3,r2,200208d0 <TMEM_QuickVerify+0x174>
200208c8:	e0bff317 	ldw	r2,-52(fp)
200208cc:	103fd91e 	bne	r2,zero,20020834 <__alt_data_end+0xfffe1434>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
200208d0:	d0a6d617 	ldw	r2,-25768(gp)
        if (mask == 0x00)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
200208d4:	1009883a 	mov	r4,r2
200208d8:	0020df40 	call	20020df4 <srand>
    for(i=0;i<TestNum && bPass;i++){
200208dc:	e03ff515 	stw	zero,-44(fp)
200208e0:	00002206 	br	2002096c <TMEM_QuickVerify+0x210>
        TestAddr32 = rand()%(DataSize/4);
200208e4:	0020e0c0 	call	20020e0c <rand>
200208e8:	1007883a 	mov	r3,r2
200208ec:	e0bffd17 	ldw	r2,-12(fp)
200208f0:	1004d0ba 	srli	r2,r2,2
200208f4:	100b883a 	mov	r5,r2
200208f8:	1809883a 	mov	r4,r3
200208fc:	0020af40 	call	20020af4 <__umodsi3>
20020900:	e0bffa15 	stw	r2,-24(fp)
        TestData32 = rand();
20020904:	0020e0c0 	call	20020e0c <rand>
20020908:	e0bffb15 	stw	r2,-20(fp)
        IOWR(BaseAddr, TestAddr32, TestData32);
2002090c:	e0bffa17 	ldw	r2,-24(fp)
20020910:	1085883a 	add	r2,r2,r2
20020914:	1085883a 	add	r2,r2,r2
20020918:	1007883a 	mov	r3,r2
2002091c:	e0bffc17 	ldw	r2,-16(fp)
20020920:	1885883a 	add	r2,r3,r2
20020924:	1007883a 	mov	r3,r2
20020928:	e0bffb17 	ldw	r2,-20(fp)
2002092c:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, TestAddr32);
20020930:	e0bffa17 	ldw	r2,-24(fp)
20020934:	1085883a 	add	r2,r2,r2
20020938:	1085883a 	add	r2,r2,r2
2002093c:	1007883a 	mov	r3,r2
20020940:	e0bffc17 	ldw	r2,-16(fp)
20020944:	1885883a 	add	r2,r3,r2
20020948:	10800037 	ldwio	r2,0(r2)
2002094c:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestData32)
20020950:	e0fff817 	ldw	r3,-32(fp)
20020954:	e0bffb17 	ldw	r2,-20(fp)
20020958:	18800126 	beq	r3,r2,20020960 <TMEM_QuickVerify+0x204>
            bPass = FALSE;        
2002095c:	e03ff315 	stw	zero,-52(fp)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
    for(i=0;i<TestNum && bPass;i++){
20020960:	e0bff517 	ldw	r2,-44(fp)
20020964:	10800044 	addi	r2,r2,1
20020968:	e0bff515 	stw	r2,-44(fp)
2002096c:	e0fff517 	ldw	r3,-44(fp)
20020970:	e0bff617 	ldw	r2,-40(fp)
20020974:	1880022e 	bgeu	r3,r2,20020980 <TMEM_QuickVerify+0x224>
20020978:	e0bff317 	ldw	r2,-52(fp)
2002097c:	103fd91e 	bne	r2,zero,200208e4 <__alt_data_end+0xfffe14e4>
        if (Read32 != TestData32)
            bPass = FALSE;        
        
    }
    
    return bPass;
20020980:	e0bff317 	ldw	r2,-52(fp)
}
20020984:	e037883a 	mov	sp,fp
20020988:	dfc00117 	ldw	ra,4(sp)
2002098c:	df000017 	ldw	fp,0(sp)
20020990:	dec00204 	addi	sp,sp,8
20020994:	f800283a 	ret

20020998 <__divsi3>:
20020998:	20001b16 	blt	r4,zero,20020a08 <__divsi3+0x70>
2002099c:	000f883a 	mov	r7,zero
200209a0:	28001616 	blt	r5,zero,200209fc <__divsi3+0x64>
200209a4:	200d883a 	mov	r6,r4
200209a8:	29001a2e 	bgeu	r5,r4,20020a14 <__divsi3+0x7c>
200209ac:	00800804 	movi	r2,32
200209b0:	00c00044 	movi	r3,1
200209b4:	00000106 	br	200209bc <__divsi3+0x24>
200209b8:	10000d26 	beq	r2,zero,200209f0 <__divsi3+0x58>
200209bc:	294b883a 	add	r5,r5,r5
200209c0:	10bfffc4 	addi	r2,r2,-1
200209c4:	18c7883a 	add	r3,r3,r3
200209c8:	293ffb36 	bltu	r5,r4,200209b8 <__alt_data_end+0xfffe15b8>
200209cc:	0005883a 	mov	r2,zero
200209d0:	18000726 	beq	r3,zero,200209f0 <__divsi3+0x58>
200209d4:	0005883a 	mov	r2,zero
200209d8:	31400236 	bltu	r6,r5,200209e4 <__divsi3+0x4c>
200209dc:	314dc83a 	sub	r6,r6,r5
200209e0:	10c4b03a 	or	r2,r2,r3
200209e4:	1806d07a 	srli	r3,r3,1
200209e8:	280ad07a 	srli	r5,r5,1
200209ec:	183ffa1e 	bne	r3,zero,200209d8 <__alt_data_end+0xfffe15d8>
200209f0:	38000126 	beq	r7,zero,200209f8 <__divsi3+0x60>
200209f4:	0085c83a 	sub	r2,zero,r2
200209f8:	f800283a 	ret
200209fc:	014bc83a 	sub	r5,zero,r5
20020a00:	39c0005c 	xori	r7,r7,1
20020a04:	003fe706 	br	200209a4 <__alt_data_end+0xfffe15a4>
20020a08:	0109c83a 	sub	r4,zero,r4
20020a0c:	01c00044 	movi	r7,1
20020a10:	003fe306 	br	200209a0 <__alt_data_end+0xfffe15a0>
20020a14:	00c00044 	movi	r3,1
20020a18:	003fee06 	br	200209d4 <__alt_data_end+0xfffe15d4>

20020a1c <__modsi3>:
20020a1c:	20001716 	blt	r4,zero,20020a7c <__modsi3+0x60>
20020a20:	000f883a 	mov	r7,zero
20020a24:	2005883a 	mov	r2,r4
20020a28:	28001216 	blt	r5,zero,20020a74 <__modsi3+0x58>
20020a2c:	2900162e 	bgeu	r5,r4,20020a88 <__modsi3+0x6c>
20020a30:	01800804 	movi	r6,32
20020a34:	00c00044 	movi	r3,1
20020a38:	00000106 	br	20020a40 <__modsi3+0x24>
20020a3c:	30000a26 	beq	r6,zero,20020a68 <__modsi3+0x4c>
20020a40:	294b883a 	add	r5,r5,r5
20020a44:	31bfffc4 	addi	r6,r6,-1
20020a48:	18c7883a 	add	r3,r3,r3
20020a4c:	293ffb36 	bltu	r5,r4,20020a3c <__alt_data_end+0xfffe163c>
20020a50:	18000526 	beq	r3,zero,20020a68 <__modsi3+0x4c>
20020a54:	1806d07a 	srli	r3,r3,1
20020a58:	11400136 	bltu	r2,r5,20020a60 <__modsi3+0x44>
20020a5c:	1145c83a 	sub	r2,r2,r5
20020a60:	280ad07a 	srli	r5,r5,1
20020a64:	183ffb1e 	bne	r3,zero,20020a54 <__alt_data_end+0xfffe1654>
20020a68:	38000126 	beq	r7,zero,20020a70 <__modsi3+0x54>
20020a6c:	0085c83a 	sub	r2,zero,r2
20020a70:	f800283a 	ret
20020a74:	014bc83a 	sub	r5,zero,r5
20020a78:	003fec06 	br	20020a2c <__alt_data_end+0xfffe162c>
20020a7c:	0109c83a 	sub	r4,zero,r4
20020a80:	01c00044 	movi	r7,1
20020a84:	003fe706 	br	20020a24 <__alt_data_end+0xfffe1624>
20020a88:	00c00044 	movi	r3,1
20020a8c:	003ff106 	br	20020a54 <__alt_data_end+0xfffe1654>

20020a90 <__udivsi3>:
20020a90:	200d883a 	mov	r6,r4
20020a94:	2900152e 	bgeu	r5,r4,20020aec <__udivsi3+0x5c>
20020a98:	28001416 	blt	r5,zero,20020aec <__udivsi3+0x5c>
20020a9c:	00800804 	movi	r2,32
20020aa0:	00c00044 	movi	r3,1
20020aa4:	00000206 	br	20020ab0 <__udivsi3+0x20>
20020aa8:	10000e26 	beq	r2,zero,20020ae4 <__udivsi3+0x54>
20020aac:	28000516 	blt	r5,zero,20020ac4 <__udivsi3+0x34>
20020ab0:	294b883a 	add	r5,r5,r5
20020ab4:	10bfffc4 	addi	r2,r2,-1
20020ab8:	18c7883a 	add	r3,r3,r3
20020abc:	293ffa36 	bltu	r5,r4,20020aa8 <__alt_data_end+0xfffe16a8>
20020ac0:	18000826 	beq	r3,zero,20020ae4 <__udivsi3+0x54>
20020ac4:	0005883a 	mov	r2,zero
20020ac8:	31400236 	bltu	r6,r5,20020ad4 <__udivsi3+0x44>
20020acc:	314dc83a 	sub	r6,r6,r5
20020ad0:	10c4b03a 	or	r2,r2,r3
20020ad4:	1806d07a 	srli	r3,r3,1
20020ad8:	280ad07a 	srli	r5,r5,1
20020adc:	183ffa1e 	bne	r3,zero,20020ac8 <__alt_data_end+0xfffe16c8>
20020ae0:	f800283a 	ret
20020ae4:	0005883a 	mov	r2,zero
20020ae8:	f800283a 	ret
20020aec:	00c00044 	movi	r3,1
20020af0:	003ff406 	br	20020ac4 <__alt_data_end+0xfffe16c4>

20020af4 <__umodsi3>:
20020af4:	2005883a 	mov	r2,r4
20020af8:	2900122e 	bgeu	r5,r4,20020b44 <__umodsi3+0x50>
20020afc:	28001116 	blt	r5,zero,20020b44 <__umodsi3+0x50>
20020b00:	01800804 	movi	r6,32
20020b04:	00c00044 	movi	r3,1
20020b08:	00000206 	br	20020b14 <__umodsi3+0x20>
20020b0c:	30000c26 	beq	r6,zero,20020b40 <__umodsi3+0x4c>
20020b10:	28000516 	blt	r5,zero,20020b28 <__umodsi3+0x34>
20020b14:	294b883a 	add	r5,r5,r5
20020b18:	31bfffc4 	addi	r6,r6,-1
20020b1c:	18c7883a 	add	r3,r3,r3
20020b20:	293ffa36 	bltu	r5,r4,20020b0c <__alt_data_end+0xfffe170c>
20020b24:	18000626 	beq	r3,zero,20020b40 <__umodsi3+0x4c>
20020b28:	1806d07a 	srli	r3,r3,1
20020b2c:	11400136 	bltu	r2,r5,20020b34 <__umodsi3+0x40>
20020b30:	1145c83a 	sub	r2,r2,r5
20020b34:	280ad07a 	srli	r5,r5,1
20020b38:	183ffb1e 	bne	r3,zero,20020b28 <__alt_data_end+0xfffe1728>
20020b3c:	f800283a 	ret
20020b40:	f800283a 	ret
20020b44:	00c00044 	movi	r3,1
20020b48:	003ff706 	br	20020b28 <__alt_data_end+0xfffe1728>

20020b4c <memcpy>:
20020b4c:	defffd04 	addi	sp,sp,-12
20020b50:	dfc00215 	stw	ra,8(sp)
20020b54:	dc400115 	stw	r17,4(sp)
20020b58:	dc000015 	stw	r16,0(sp)
20020b5c:	00c003c4 	movi	r3,15
20020b60:	2005883a 	mov	r2,r4
20020b64:	1980452e 	bgeu	r3,r6,20020c7c <memcpy+0x130>
20020b68:	2906b03a 	or	r3,r5,r4
20020b6c:	18c000cc 	andi	r3,r3,3
20020b70:	1800441e 	bne	r3,zero,20020c84 <memcpy+0x138>
20020b74:	347ffc04 	addi	r17,r6,-16
20020b78:	8822d13a 	srli	r17,r17,4
20020b7c:	28c00104 	addi	r3,r5,4
20020b80:	23400104 	addi	r13,r4,4
20020b84:	8820913a 	slli	r16,r17,4
20020b88:	2b000204 	addi	r12,r5,8
20020b8c:	22c00204 	addi	r11,r4,8
20020b90:	84000504 	addi	r16,r16,20
20020b94:	2a800304 	addi	r10,r5,12
20020b98:	22400304 	addi	r9,r4,12
20020b9c:	2c21883a 	add	r16,r5,r16
20020ba0:	2811883a 	mov	r8,r5
20020ba4:	200f883a 	mov	r7,r4
20020ba8:	41000017 	ldw	r4,0(r8)
20020bac:	1fc00017 	ldw	ra,0(r3)
20020bb0:	63c00017 	ldw	r15,0(r12)
20020bb4:	39000015 	stw	r4,0(r7)
20020bb8:	53800017 	ldw	r14,0(r10)
20020bbc:	6fc00015 	stw	ra,0(r13)
20020bc0:	5bc00015 	stw	r15,0(r11)
20020bc4:	4b800015 	stw	r14,0(r9)
20020bc8:	18c00404 	addi	r3,r3,16
20020bcc:	39c00404 	addi	r7,r7,16
20020bd0:	42000404 	addi	r8,r8,16
20020bd4:	6b400404 	addi	r13,r13,16
20020bd8:	63000404 	addi	r12,r12,16
20020bdc:	5ac00404 	addi	r11,r11,16
20020be0:	52800404 	addi	r10,r10,16
20020be4:	4a400404 	addi	r9,r9,16
20020be8:	1c3fef1e 	bne	r3,r16,20020ba8 <__alt_data_end+0xfffe17a8>
20020bec:	89c00044 	addi	r7,r17,1
20020bf0:	380e913a 	slli	r7,r7,4
20020bf4:	310003cc 	andi	r4,r6,15
20020bf8:	02c000c4 	movi	r11,3
20020bfc:	11c7883a 	add	r3,r2,r7
20020c00:	29cb883a 	add	r5,r5,r7
20020c04:	5900212e 	bgeu	r11,r4,20020c8c <memcpy+0x140>
20020c08:	1813883a 	mov	r9,r3
20020c0c:	2811883a 	mov	r8,r5
20020c10:	200f883a 	mov	r7,r4
20020c14:	42800017 	ldw	r10,0(r8)
20020c18:	4a400104 	addi	r9,r9,4
20020c1c:	39ffff04 	addi	r7,r7,-4
20020c20:	4abfff15 	stw	r10,-4(r9)
20020c24:	42000104 	addi	r8,r8,4
20020c28:	59fffa36 	bltu	r11,r7,20020c14 <__alt_data_end+0xfffe1814>
20020c2c:	213fff04 	addi	r4,r4,-4
20020c30:	2008d0ba 	srli	r4,r4,2
20020c34:	318000cc 	andi	r6,r6,3
20020c38:	21000044 	addi	r4,r4,1
20020c3c:	2109883a 	add	r4,r4,r4
20020c40:	2109883a 	add	r4,r4,r4
20020c44:	1907883a 	add	r3,r3,r4
20020c48:	290b883a 	add	r5,r5,r4
20020c4c:	30000626 	beq	r6,zero,20020c68 <memcpy+0x11c>
20020c50:	198d883a 	add	r6,r3,r6
20020c54:	29c00003 	ldbu	r7,0(r5)
20020c58:	18c00044 	addi	r3,r3,1
20020c5c:	29400044 	addi	r5,r5,1
20020c60:	19ffffc5 	stb	r7,-1(r3)
20020c64:	19bffb1e 	bne	r3,r6,20020c54 <__alt_data_end+0xfffe1854>
20020c68:	dfc00217 	ldw	ra,8(sp)
20020c6c:	dc400117 	ldw	r17,4(sp)
20020c70:	dc000017 	ldw	r16,0(sp)
20020c74:	dec00304 	addi	sp,sp,12
20020c78:	f800283a 	ret
20020c7c:	2007883a 	mov	r3,r4
20020c80:	003ff206 	br	20020c4c <__alt_data_end+0xfffe184c>
20020c84:	2007883a 	mov	r3,r4
20020c88:	003ff106 	br	20020c50 <__alt_data_end+0xfffe1850>
20020c8c:	200d883a 	mov	r6,r4
20020c90:	003fee06 	br	20020c4c <__alt_data_end+0xfffe184c>

20020c94 <_printf_r>:
20020c94:	defffd04 	addi	sp,sp,-12
20020c98:	2805883a 	mov	r2,r5
20020c9c:	dfc00015 	stw	ra,0(sp)
20020ca0:	d9800115 	stw	r6,4(sp)
20020ca4:	d9c00215 	stw	r7,8(sp)
20020ca8:	21400217 	ldw	r5,8(r4)
20020cac:	d9c00104 	addi	r7,sp,4
20020cb0:	100d883a 	mov	r6,r2
20020cb4:	0020f080 	call	20020f08 <___vfprintf_internal_r>
20020cb8:	dfc00017 	ldw	ra,0(sp)
20020cbc:	dec00304 	addi	sp,sp,12
20020cc0:	f800283a 	ret

20020cc4 <printf>:
20020cc4:	defffc04 	addi	sp,sp,-16
20020cc8:	dfc00015 	stw	ra,0(sp)
20020ccc:	d9400115 	stw	r5,4(sp)
20020cd0:	d9800215 	stw	r6,8(sp)
20020cd4:	d9c00315 	stw	r7,12(sp)
20020cd8:	008800f4 	movhi	r2,8195
20020cdc:	1086fa04 	addi	r2,r2,7144
20020ce0:	10800017 	ldw	r2,0(r2)
20020ce4:	200b883a 	mov	r5,r4
20020ce8:	d9800104 	addi	r6,sp,4
20020cec:	11000217 	ldw	r4,8(r2)
20020cf0:	00231000 	call	20023100 <__vfprintf_internal>
20020cf4:	dfc00017 	ldw	ra,0(sp)
20020cf8:	dec00404 	addi	sp,sp,16
20020cfc:	f800283a 	ret

20020d00 <_putchar_r>:
20020d00:	21800217 	ldw	r6,8(r4)
20020d04:	0027a7c1 	jmpi	20027a7c <_putc_r>

20020d08 <putchar>:
20020d08:	008800f4 	movhi	r2,8195
20020d0c:	1086fa04 	addi	r2,r2,7144
20020d10:	200b883a 	mov	r5,r4
20020d14:	11000017 	ldw	r4,0(r2)
20020d18:	21800217 	ldw	r6,8(r4)
20020d1c:	0027a7c1 	jmpi	20027a7c <_putc_r>

20020d20 <_puts_r>:
20020d20:	defff604 	addi	sp,sp,-40
20020d24:	dc000715 	stw	r16,28(sp)
20020d28:	2021883a 	mov	r16,r4
20020d2c:	2809883a 	mov	r4,r5
20020d30:	dc400815 	stw	r17,32(sp)
20020d34:	dfc00915 	stw	ra,36(sp)
20020d38:	2823883a 	mov	r17,r5
20020d3c:	0020e700 	call	20020e70 <strlen>
20020d40:	10c00044 	addi	r3,r2,1
20020d44:	d8800115 	stw	r2,4(sp)
20020d48:	008800f4 	movhi	r2,8195
20020d4c:	10bf9004 	addi	r2,r2,-448
20020d50:	d8800215 	stw	r2,8(sp)
20020d54:	00800044 	movi	r2,1
20020d58:	d8800315 	stw	r2,12(sp)
20020d5c:	00800084 	movi	r2,2
20020d60:	dc400015 	stw	r17,0(sp)
20020d64:	d8c00615 	stw	r3,24(sp)
20020d68:	dec00415 	stw	sp,16(sp)
20020d6c:	d8800515 	stw	r2,20(sp)
20020d70:	80000226 	beq	r16,zero,20020d7c <_puts_r+0x5c>
20020d74:	80800e17 	ldw	r2,56(r16)
20020d78:	10001426 	beq	r2,zero,20020dcc <_puts_r+0xac>
20020d7c:	81400217 	ldw	r5,8(r16)
20020d80:	2880030b 	ldhu	r2,12(r5)
20020d84:	10c8000c 	andi	r3,r2,8192
20020d88:	1800061e 	bne	r3,zero,20020da4 <_puts_r+0x84>
20020d8c:	29001917 	ldw	r4,100(r5)
20020d90:	00f7ffc4 	movi	r3,-8193
20020d94:	10880014 	ori	r2,r2,8192
20020d98:	20c6703a 	and	r3,r4,r3
20020d9c:	2880030d 	sth	r2,12(r5)
20020da0:	28c01915 	stw	r3,100(r5)
20020da4:	d9800404 	addi	r6,sp,16
20020da8:	8009883a 	mov	r4,r16
20020dac:	00256300 	call	20025630 <__sfvwrite_r>
20020db0:	1000091e 	bne	r2,zero,20020dd8 <_puts_r+0xb8>
20020db4:	00800284 	movi	r2,10
20020db8:	dfc00917 	ldw	ra,36(sp)
20020dbc:	dc400817 	ldw	r17,32(sp)
20020dc0:	dc000717 	ldw	r16,28(sp)
20020dc4:	dec00a04 	addi	sp,sp,40
20020dc8:	f800283a 	ret
20020dcc:	8009883a 	mov	r4,r16
20020dd0:	00251ac0 	call	200251ac <__sinit>
20020dd4:	003fe906 	br	20020d7c <__alt_data_end+0xfffe197c>
20020dd8:	00bfffc4 	movi	r2,-1
20020ddc:	003ff606 	br	20020db8 <__alt_data_end+0xfffe19b8>

20020de0 <puts>:
20020de0:	008800f4 	movhi	r2,8195
20020de4:	1086fa04 	addi	r2,r2,7144
20020de8:	200b883a 	mov	r5,r4
20020dec:	11000017 	ldw	r4,0(r2)
20020df0:	0020d201 	jmpi	20020d20 <_puts_r>

20020df4 <srand>:
20020df4:	008800f4 	movhi	r2,8195
20020df8:	1086fa04 	addi	r2,r2,7144
20020dfc:	10800017 	ldw	r2,0(r2)
20020e00:	11002915 	stw	r4,164(r2)
20020e04:	10002a15 	stw	zero,168(r2)
20020e08:	f800283a 	ret

20020e0c <rand>:
20020e0c:	008800f4 	movhi	r2,8195
20020e10:	defffe04 	addi	sp,sp,-8
20020e14:	1086fa04 	addi	r2,r2,7144
20020e18:	dc000015 	stw	r16,0(sp)
20020e1c:	14000017 	ldw	r16,0(r2)
20020e20:	dfc00115 	stw	ra,4(sp)
20020e24:	01932574 	movhi	r6,19605
20020e28:	81002917 	ldw	r4,164(r16)
20020e2c:	81402a17 	ldw	r5,168(r16)
20020e30:	01d614b4 	movhi	r7,22610
20020e34:	319fcb44 	addi	r6,r6,32557
20020e38:	39fd0b44 	addi	r7,r7,-3027
20020e3c:	002a3a40 	call	2002a3a4 <__muldi3>
20020e40:	11000044 	addi	r4,r2,1
20020e44:	2085803a 	cmpltu	r2,r4,r2
20020e48:	10c7883a 	add	r3,r2,r3
20020e4c:	00a00034 	movhi	r2,32768
20020e50:	10bfffc4 	addi	r2,r2,-1
20020e54:	1884703a 	and	r2,r3,r2
20020e58:	81002915 	stw	r4,164(r16)
20020e5c:	80c02a15 	stw	r3,168(r16)
20020e60:	dfc00117 	ldw	ra,4(sp)
20020e64:	dc000017 	ldw	r16,0(sp)
20020e68:	dec00204 	addi	sp,sp,8
20020e6c:	f800283a 	ret

20020e70 <strlen>:
20020e70:	208000cc 	andi	r2,r4,3
20020e74:	10002026 	beq	r2,zero,20020ef8 <strlen+0x88>
20020e78:	20800007 	ldb	r2,0(r4)
20020e7c:	10002026 	beq	r2,zero,20020f00 <strlen+0x90>
20020e80:	2005883a 	mov	r2,r4
20020e84:	00000206 	br	20020e90 <strlen+0x20>
20020e88:	10c00007 	ldb	r3,0(r2)
20020e8c:	18001826 	beq	r3,zero,20020ef0 <strlen+0x80>
20020e90:	10800044 	addi	r2,r2,1
20020e94:	10c000cc 	andi	r3,r2,3
20020e98:	183ffb1e 	bne	r3,zero,20020e88 <__alt_data_end+0xfffe1a88>
20020e9c:	10c00017 	ldw	r3,0(r2)
20020ea0:	01ffbff4 	movhi	r7,65279
20020ea4:	39ffbfc4 	addi	r7,r7,-257
20020ea8:	00ca303a 	nor	r5,zero,r3
20020eac:	01a02074 	movhi	r6,32897
20020eb0:	19c7883a 	add	r3,r3,r7
20020eb4:	31a02004 	addi	r6,r6,-32640
20020eb8:	1946703a 	and	r3,r3,r5
20020ebc:	1986703a 	and	r3,r3,r6
20020ec0:	1800091e 	bne	r3,zero,20020ee8 <strlen+0x78>
20020ec4:	10800104 	addi	r2,r2,4
20020ec8:	10c00017 	ldw	r3,0(r2)
20020ecc:	19cb883a 	add	r5,r3,r7
20020ed0:	00c6303a 	nor	r3,zero,r3
20020ed4:	28c6703a 	and	r3,r5,r3
20020ed8:	1986703a 	and	r3,r3,r6
20020edc:	183ff926 	beq	r3,zero,20020ec4 <__alt_data_end+0xfffe1ac4>
20020ee0:	00000106 	br	20020ee8 <strlen+0x78>
20020ee4:	10800044 	addi	r2,r2,1
20020ee8:	10c00007 	ldb	r3,0(r2)
20020eec:	183ffd1e 	bne	r3,zero,20020ee4 <__alt_data_end+0xfffe1ae4>
20020ef0:	1105c83a 	sub	r2,r2,r4
20020ef4:	f800283a 	ret
20020ef8:	2005883a 	mov	r2,r4
20020efc:	003fe706 	br	20020e9c <__alt_data_end+0xfffe1a9c>
20020f00:	0005883a 	mov	r2,zero
20020f04:	f800283a 	ret

20020f08 <___vfprintf_internal_r>:
20020f08:	deffb804 	addi	sp,sp,-288
20020f0c:	dfc04715 	stw	ra,284(sp)
20020f10:	ddc04515 	stw	r23,276(sp)
20020f14:	dd404315 	stw	r21,268(sp)
20020f18:	d9002c15 	stw	r4,176(sp)
20020f1c:	282f883a 	mov	r23,r5
20020f20:	302b883a 	mov	r21,r6
20020f24:	d9c02d15 	stw	r7,180(sp)
20020f28:	df004615 	stw	fp,280(sp)
20020f2c:	dd804415 	stw	r22,272(sp)
20020f30:	dd004215 	stw	r20,264(sp)
20020f34:	dcc04115 	stw	r19,260(sp)
20020f38:	dc804015 	stw	r18,256(sp)
20020f3c:	dc403f15 	stw	r17,252(sp)
20020f40:	dc003e15 	stw	r16,248(sp)
20020f44:	0025d200 	call	20025d20 <_localeconv_r>
20020f48:	10800017 	ldw	r2,0(r2)
20020f4c:	1009883a 	mov	r4,r2
20020f50:	d8803415 	stw	r2,208(sp)
20020f54:	0020e700 	call	20020e70 <strlen>
20020f58:	d8803715 	stw	r2,220(sp)
20020f5c:	d8802c17 	ldw	r2,176(sp)
20020f60:	10000226 	beq	r2,zero,20020f6c <___vfprintf_internal_r+0x64>
20020f64:	10800e17 	ldw	r2,56(r2)
20020f68:	1000f926 	beq	r2,zero,20021350 <___vfprintf_internal_r+0x448>
20020f6c:	b880030b 	ldhu	r2,12(r23)
20020f70:	10c8000c 	andi	r3,r2,8192
20020f74:	1800061e 	bne	r3,zero,20020f90 <___vfprintf_internal_r+0x88>
20020f78:	b9001917 	ldw	r4,100(r23)
20020f7c:	00f7ffc4 	movi	r3,-8193
20020f80:	10880014 	ori	r2,r2,8192
20020f84:	20c6703a 	and	r3,r4,r3
20020f88:	b880030d 	sth	r2,12(r23)
20020f8c:	b8c01915 	stw	r3,100(r23)
20020f90:	10c0020c 	andi	r3,r2,8
20020f94:	1800c126 	beq	r3,zero,2002129c <___vfprintf_internal_r+0x394>
20020f98:	b8c00417 	ldw	r3,16(r23)
20020f9c:	1800bf26 	beq	r3,zero,2002129c <___vfprintf_internal_r+0x394>
20020fa0:	1080068c 	andi	r2,r2,26
20020fa4:	00c00284 	movi	r3,10
20020fa8:	10c0c426 	beq	r2,r3,200212bc <___vfprintf_internal_r+0x3b4>
20020fac:	d8c00404 	addi	r3,sp,16
20020fb0:	050800f4 	movhi	r20,8195
20020fb4:	d9001e04 	addi	r4,sp,120
20020fb8:	a53fa184 	addi	r20,r20,-378
20020fbc:	d8c01e15 	stw	r3,120(sp)
20020fc0:	d8002015 	stw	zero,128(sp)
20020fc4:	d8001f15 	stw	zero,124(sp)
20020fc8:	d8003315 	stw	zero,204(sp)
20020fcc:	d8003615 	stw	zero,216(sp)
20020fd0:	d8003815 	stw	zero,224(sp)
20020fd4:	1811883a 	mov	r8,r3
20020fd8:	d8003915 	stw	zero,228(sp)
20020fdc:	d8003a15 	stw	zero,232(sp)
20020fe0:	d8002f15 	stw	zero,188(sp)
20020fe4:	d9002815 	stw	r4,160(sp)
20020fe8:	a8800007 	ldb	r2,0(r21)
20020fec:	10027b26 	beq	r2,zero,200219dc <___vfprintf_internal_r+0xad4>
20020ff0:	00c00944 	movi	r3,37
20020ff4:	a821883a 	mov	r16,r21
20020ff8:	10c0021e 	bne	r2,r3,20021004 <___vfprintf_internal_r+0xfc>
20020ffc:	00001406 	br	20021050 <___vfprintf_internal_r+0x148>
20021000:	10c00326 	beq	r2,r3,20021010 <___vfprintf_internal_r+0x108>
20021004:	84000044 	addi	r16,r16,1
20021008:	80800007 	ldb	r2,0(r16)
2002100c:	103ffc1e 	bne	r2,zero,20021000 <__alt_data_end+0xfffe1c00>
20021010:	8563c83a 	sub	r17,r16,r21
20021014:	88000e26 	beq	r17,zero,20021050 <___vfprintf_internal_r+0x148>
20021018:	d8c02017 	ldw	r3,128(sp)
2002101c:	d8801f17 	ldw	r2,124(sp)
20021020:	45400015 	stw	r21,0(r8)
20021024:	1c47883a 	add	r3,r3,r17
20021028:	10800044 	addi	r2,r2,1
2002102c:	d8c02015 	stw	r3,128(sp)
20021030:	44400115 	stw	r17,4(r8)
20021034:	d8801f15 	stw	r2,124(sp)
20021038:	00c001c4 	movi	r3,7
2002103c:	1880a716 	blt	r3,r2,200212dc <___vfprintf_internal_r+0x3d4>
20021040:	42000204 	addi	r8,r8,8
20021044:	d9402f17 	ldw	r5,188(sp)
20021048:	2c4b883a 	add	r5,r5,r17
2002104c:	d9402f15 	stw	r5,188(sp)
20021050:	80800007 	ldb	r2,0(r16)
20021054:	1000a826 	beq	r2,zero,200212f8 <___vfprintf_internal_r+0x3f0>
20021058:	84400047 	ldb	r17,1(r16)
2002105c:	00bfffc4 	movi	r2,-1
20021060:	85400044 	addi	r21,r16,1
20021064:	d8002785 	stb	zero,158(sp)
20021068:	0007883a 	mov	r3,zero
2002106c:	000f883a 	mov	r7,zero
20021070:	d8802915 	stw	r2,164(sp)
20021074:	d8003115 	stw	zero,196(sp)
20021078:	0025883a 	mov	r18,zero
2002107c:	01401604 	movi	r5,88
20021080:	01800244 	movi	r6,9
20021084:	02800a84 	movi	r10,42
20021088:	02401b04 	movi	r9,108
2002108c:	ad400044 	addi	r21,r21,1
20021090:	88bff804 	addi	r2,r17,-32
20021094:	28830436 	bltu	r5,r2,20021ca8 <___vfprintf_internal_r+0xda0>
20021098:	100490ba 	slli	r2,r2,2
2002109c:	010800b4 	movhi	r4,8194
200210a0:	21042c04 	addi	r4,r4,4272
200210a4:	1105883a 	add	r2,r2,r4
200210a8:	10800017 	ldw	r2,0(r2)
200210ac:	1000683a 	jmp	r2
200210b0:	20021bc8 	cmpgei	zero,r4,2159
200210b4:	20021ca8 	cmpgeui	zero,r4,2162
200210b8:	20021ca8 	cmpgeui	zero,r4,2162
200210bc:	20021be8 	cmpgeui	zero,r4,2159
200210c0:	20021ca8 	cmpgeui	zero,r4,2162
200210c4:	20021ca8 	cmpgeui	zero,r4,2162
200210c8:	20021ca8 	cmpgeui	zero,r4,2162
200210cc:	20021ca8 	cmpgeui	zero,r4,2162
200210d0:	20021ca8 	cmpgeui	zero,r4,2162
200210d4:	20021ca8 	cmpgeui	zero,r4,2162
200210d8:	2002135c 	xori	zero,r4,2125
200210dc:	20021b04 	addi	zero,r4,2156
200210e0:	20021ca8 	cmpgeui	zero,r4,2162
200210e4:	20021224 	muli	zero,r4,2120
200210e8:	20021384 	addi	zero,r4,2126
200210ec:	20021ca8 	cmpgeui	zero,r4,2162
200210f0:	200213c4 	addi	zero,r4,2127
200210f4:	200213d0 	cmplti	zero,r4,2127
200210f8:	200213d0 	cmplti	zero,r4,2127
200210fc:	200213d0 	cmplti	zero,r4,2127
20021100:	200213d0 	cmplti	zero,r4,2127
20021104:	200213d0 	cmplti	zero,r4,2127
20021108:	200213d0 	cmplti	zero,r4,2127
2002110c:	200213d0 	cmplti	zero,r4,2127
20021110:	200213d0 	cmplti	zero,r4,2127
20021114:	200213d0 	cmplti	zero,r4,2127
20021118:	20021ca8 	cmpgeui	zero,r4,2162
2002111c:	20021ca8 	cmpgeui	zero,r4,2162
20021120:	20021ca8 	cmpgeui	zero,r4,2162
20021124:	20021ca8 	cmpgeui	zero,r4,2162
20021128:	20021ca8 	cmpgeui	zero,r4,2162
2002112c:	20021ca8 	cmpgeui	zero,r4,2162
20021130:	20021ca8 	cmpgeui	zero,r4,2162
20021134:	20021ca8 	cmpgeui	zero,r4,2162
20021138:	20021ca8 	cmpgeui	zero,r4,2162
2002113c:	20021ca8 	cmpgeui	zero,r4,2162
20021140:	20021404 	addi	zero,r4,2128
20021144:	200214c0 	call	2200214c <__alt_data_end+0x1fc2d4c>
20021148:	20021ca8 	cmpgeui	zero,r4,2162
2002114c:	200214c0 	call	2200214c <__alt_data_end+0x1fc2d4c>
20021150:	20021ca8 	cmpgeui	zero,r4,2162
20021154:	20021ca8 	cmpgeui	zero,r4,2162
20021158:	20021ca8 	cmpgeui	zero,r4,2162
2002115c:	20021ca8 	cmpgeui	zero,r4,2162
20021160:	20021560 	cmpeqi	zero,r4,2133
20021164:	20021ca8 	cmpgeui	zero,r4,2162
20021168:	20021ca8 	cmpgeui	zero,r4,2162
2002116c:	2002156c 	andhi	zero,r4,2133
20021170:	20021ca8 	cmpgeui	zero,r4,2162
20021174:	20021ca8 	cmpgeui	zero,r4,2162
20021178:	20021ca8 	cmpgeui	zero,r4,2162
2002117c:	20021ca8 	cmpgeui	zero,r4,2162
20021180:	20021ca8 	cmpgeui	zero,r4,2162
20021184:	200219e4 	muli	zero,r4,2151
20021188:	20021ca8 	cmpgeui	zero,r4,2162
2002118c:	20021ca8 	cmpgeui	zero,r4,2162
20021190:	20021a44 	addi	zero,r4,2153
20021194:	20021ca8 	cmpgeui	zero,r4,2162
20021198:	20021ca8 	cmpgeui	zero,r4,2162
2002119c:	20021ca8 	cmpgeui	zero,r4,2162
200211a0:	20021ca8 	cmpgeui	zero,r4,2162
200211a4:	20021ca8 	cmpgeui	zero,r4,2162
200211a8:	20021ca8 	cmpgeui	zero,r4,2162
200211ac:	20021ca8 	cmpgeui	zero,r4,2162
200211b0:	20021ca8 	cmpgeui	zero,r4,2162
200211b4:	20021ca8 	cmpgeui	zero,r4,2162
200211b8:	20021ca8 	cmpgeui	zero,r4,2162
200211bc:	20021c54 	ori	zero,r4,2161
200211c0:	20021bf4 	orhi	zero,r4,2159
200211c4:	200214c0 	call	2200214c <__alt_data_end+0x1fc2d4c>
200211c8:	200214c0 	call	2200214c <__alt_data_end+0x1fc2d4c>
200211cc:	200214c0 	call	2200214c <__alt_data_end+0x1fc2d4c>
200211d0:	20021c04 	addi	zero,r4,2160
200211d4:	20021bf4 	orhi	zero,r4,2159
200211d8:	20021ca8 	cmpgeui	zero,r4,2162
200211dc:	20021ca8 	cmpgeui	zero,r4,2162
200211e0:	20021c10 	cmplti	zero,r4,2160
200211e4:	20021ca8 	cmpgeui	zero,r4,2162
200211e8:	20021c20 	cmpeqi	zero,r4,2160
200211ec:	20021af4 	orhi	zero,r4,2155
200211f0:	20021230 	cmpltui	zero,r4,2120
200211f4:	20021b14 	ori	zero,r4,2156
200211f8:	20021ca8 	cmpgeui	zero,r4,2162
200211fc:	20021b20 	cmpeqi	zero,r4,2156
20021200:	20021ca8 	cmpgeui	zero,r4,2162
20021204:	20021b7c 	xorhi	zero,r4,2157
20021208:	20021ca8 	cmpgeui	zero,r4,2162
2002120c:	20021ca8 	cmpgeui	zero,r4,2162
20021210:	20021b8c 	andi	zero,r4,2158
20021214:	d9003117 	ldw	r4,196(sp)
20021218:	d8802d15 	stw	r2,180(sp)
2002121c:	0109c83a 	sub	r4,zero,r4
20021220:	d9003115 	stw	r4,196(sp)
20021224:	94800114 	ori	r18,r18,4
20021228:	ac400007 	ldb	r17,0(r21)
2002122c:	003f9706 	br	2002108c <__alt_data_end+0xfffe1c8c>
20021230:	00800c04 	movi	r2,48
20021234:	d9002d17 	ldw	r4,180(sp)
20021238:	d9402917 	ldw	r5,164(sp)
2002123c:	d8802705 	stb	r2,156(sp)
20021240:	00801e04 	movi	r2,120
20021244:	d8802745 	stb	r2,157(sp)
20021248:	d8002785 	stb	zero,158(sp)
2002124c:	20c00104 	addi	r3,r4,4
20021250:	24c00017 	ldw	r19,0(r4)
20021254:	002d883a 	mov	r22,zero
20021258:	90800094 	ori	r2,r18,2
2002125c:	28029a16 	blt	r5,zero,20021cc8 <___vfprintf_internal_r+0xdc0>
20021260:	00bfdfc4 	movi	r2,-129
20021264:	90a4703a 	and	r18,r18,r2
20021268:	d8c02d15 	stw	r3,180(sp)
2002126c:	94800094 	ori	r18,r18,2
20021270:	9802871e 	bne	r19,zero,20021c90 <___vfprintf_internal_r+0xd88>
20021274:	008800f4 	movhi	r2,8195
20021278:	10bf9a04 	addi	r2,r2,-408
2002127c:	d8803915 	stw	r2,228(sp)
20021280:	04401e04 	movi	r17,120
20021284:	d8802917 	ldw	r2,164(sp)
20021288:	0039883a 	mov	fp,zero
2002128c:	1001e926 	beq	r2,zero,20021a34 <___vfprintf_internal_r+0xb2c>
20021290:	0027883a 	mov	r19,zero
20021294:	002d883a 	mov	r22,zero
20021298:	00020506 	br	20021ab0 <___vfprintf_internal_r+0xba8>
2002129c:	d9002c17 	ldw	r4,176(sp)
200212a0:	b80b883a 	mov	r5,r23
200212a4:	00231d80 	call	200231d8 <__swsetup_r>
200212a8:	1005ac1e 	bne	r2,zero,2002295c <___vfprintf_internal_r+0x1a54>
200212ac:	b880030b 	ldhu	r2,12(r23)
200212b0:	00c00284 	movi	r3,10
200212b4:	1080068c 	andi	r2,r2,26
200212b8:	10ff3c1e 	bne	r2,r3,20020fac <__alt_data_end+0xfffe1bac>
200212bc:	b880038f 	ldh	r2,14(r23)
200212c0:	103f3a16 	blt	r2,zero,20020fac <__alt_data_end+0xfffe1bac>
200212c4:	d9c02d17 	ldw	r7,180(sp)
200212c8:	d9002c17 	ldw	r4,176(sp)
200212cc:	a80d883a 	mov	r6,r21
200212d0:	b80b883a 	mov	r5,r23
200212d4:	002311c0 	call	2002311c <__sbprintf>
200212d8:	00001106 	br	20021320 <___vfprintf_internal_r+0x418>
200212dc:	d9002c17 	ldw	r4,176(sp)
200212e0:	d9801e04 	addi	r6,sp,120
200212e4:	b80b883a 	mov	r5,r23
200212e8:	00285240 	call	20028524 <__sprint_r>
200212ec:	1000081e 	bne	r2,zero,20021310 <___vfprintf_internal_r+0x408>
200212f0:	da000404 	addi	r8,sp,16
200212f4:	003f5306 	br	20021044 <__alt_data_end+0xfffe1c44>
200212f8:	d8802017 	ldw	r2,128(sp)
200212fc:	10000426 	beq	r2,zero,20021310 <___vfprintf_internal_r+0x408>
20021300:	d9002c17 	ldw	r4,176(sp)
20021304:	d9801e04 	addi	r6,sp,120
20021308:	b80b883a 	mov	r5,r23
2002130c:	00285240 	call	20028524 <__sprint_r>
20021310:	b880030b 	ldhu	r2,12(r23)
20021314:	1080100c 	andi	r2,r2,64
20021318:	1005901e 	bne	r2,zero,2002295c <___vfprintf_internal_r+0x1a54>
2002131c:	d8802f17 	ldw	r2,188(sp)
20021320:	dfc04717 	ldw	ra,284(sp)
20021324:	df004617 	ldw	fp,280(sp)
20021328:	ddc04517 	ldw	r23,276(sp)
2002132c:	dd804417 	ldw	r22,272(sp)
20021330:	dd404317 	ldw	r21,268(sp)
20021334:	dd004217 	ldw	r20,264(sp)
20021338:	dcc04117 	ldw	r19,260(sp)
2002133c:	dc804017 	ldw	r18,256(sp)
20021340:	dc403f17 	ldw	r17,252(sp)
20021344:	dc003e17 	ldw	r16,248(sp)
20021348:	dec04804 	addi	sp,sp,288
2002134c:	f800283a 	ret
20021350:	d9002c17 	ldw	r4,176(sp)
20021354:	00251ac0 	call	200251ac <__sinit>
20021358:	003f0406 	br	20020f6c <__alt_data_end+0xfffe1b6c>
2002135c:	d8802d17 	ldw	r2,180(sp)
20021360:	d9002d17 	ldw	r4,180(sp)
20021364:	10800017 	ldw	r2,0(r2)
20021368:	d8803115 	stw	r2,196(sp)
2002136c:	20800104 	addi	r2,r4,4
20021370:	d9003117 	ldw	r4,196(sp)
20021374:	203fa716 	blt	r4,zero,20021214 <__alt_data_end+0xfffe1e14>
20021378:	d8802d15 	stw	r2,180(sp)
2002137c:	ac400007 	ldb	r17,0(r21)
20021380:	003f4206 	br	2002108c <__alt_data_end+0xfffe1c8c>
20021384:	ac400007 	ldb	r17,0(r21)
20021388:	aac00044 	addi	r11,r21,1
2002138c:	8a872826 	beq	r17,r10,20023030 <___vfprintf_internal_r+0x2128>
20021390:	88bff404 	addi	r2,r17,-48
20021394:	0009883a 	mov	r4,zero
20021398:	30867d36 	bltu	r6,r2,20022d90 <___vfprintf_internal_r+0x1e88>
2002139c:	5c400007 	ldb	r17,0(r11)
200213a0:	210002a4 	muli	r4,r4,10
200213a4:	5d400044 	addi	r21,r11,1
200213a8:	a817883a 	mov	r11,r21
200213ac:	2089883a 	add	r4,r4,r2
200213b0:	88bff404 	addi	r2,r17,-48
200213b4:	30bff92e 	bgeu	r6,r2,2002139c <__alt_data_end+0xfffe1f9c>
200213b8:	2005c916 	blt	r4,zero,20022ae0 <___vfprintf_internal_r+0x1bd8>
200213bc:	d9002915 	stw	r4,164(sp)
200213c0:	003f3306 	br	20021090 <__alt_data_end+0xfffe1c90>
200213c4:	94802014 	ori	r18,r18,128
200213c8:	ac400007 	ldb	r17,0(r21)
200213cc:	003f2f06 	br	2002108c <__alt_data_end+0xfffe1c8c>
200213d0:	a809883a 	mov	r4,r21
200213d4:	d8003115 	stw	zero,196(sp)
200213d8:	88bff404 	addi	r2,r17,-48
200213dc:	0017883a 	mov	r11,zero
200213e0:	24400007 	ldb	r17,0(r4)
200213e4:	5ac002a4 	muli	r11,r11,10
200213e8:	ad400044 	addi	r21,r21,1
200213ec:	a809883a 	mov	r4,r21
200213f0:	12d7883a 	add	r11,r2,r11
200213f4:	88bff404 	addi	r2,r17,-48
200213f8:	30bff92e 	bgeu	r6,r2,200213e0 <__alt_data_end+0xfffe1fe0>
200213fc:	dac03115 	stw	r11,196(sp)
20021400:	003f2306 	br	20021090 <__alt_data_end+0xfffe1c90>
20021404:	18c03fcc 	andi	r3,r3,255
20021408:	18072b1e 	bne	r3,zero,200230b8 <___vfprintf_internal_r+0x21b0>
2002140c:	94800414 	ori	r18,r18,16
20021410:	9080080c 	andi	r2,r18,32
20021414:	10037b26 	beq	r2,zero,20022204 <___vfprintf_internal_r+0x12fc>
20021418:	d9402d17 	ldw	r5,180(sp)
2002141c:	28800117 	ldw	r2,4(r5)
20021420:	2cc00017 	ldw	r19,0(r5)
20021424:	29400204 	addi	r5,r5,8
20021428:	d9402d15 	stw	r5,180(sp)
2002142c:	102d883a 	mov	r22,r2
20021430:	10044b16 	blt	r2,zero,20022560 <___vfprintf_internal_r+0x1658>
20021434:	d9402917 	ldw	r5,164(sp)
20021438:	df002783 	ldbu	fp,158(sp)
2002143c:	2803bc16 	blt	r5,zero,20022330 <___vfprintf_internal_r+0x1428>
20021440:	00ffdfc4 	movi	r3,-129
20021444:	9d84b03a 	or	r2,r19,r22
20021448:	90e4703a 	and	r18,r18,r3
2002144c:	10017726 	beq	r2,zero,20021a2c <___vfprintf_internal_r+0xb24>
20021450:	b0038326 	beq	r22,zero,20022260 <___vfprintf_internal_r+0x1358>
20021454:	dc402a15 	stw	r17,168(sp)
20021458:	dc001e04 	addi	r16,sp,120
2002145c:	b023883a 	mov	r17,r22
20021460:	402d883a 	mov	r22,r8
20021464:	9809883a 	mov	r4,r19
20021468:	880b883a 	mov	r5,r17
2002146c:	01800284 	movi	r6,10
20021470:	000f883a 	mov	r7,zero
20021474:	002a97c0 	call	2002a97c <__umoddi3>
20021478:	10800c04 	addi	r2,r2,48
2002147c:	843fffc4 	addi	r16,r16,-1
20021480:	9809883a 	mov	r4,r19
20021484:	880b883a 	mov	r5,r17
20021488:	80800005 	stb	r2,0(r16)
2002148c:	01800284 	movi	r6,10
20021490:	000f883a 	mov	r7,zero
20021494:	002a4040 	call	2002a404 <__udivdi3>
20021498:	1027883a 	mov	r19,r2
2002149c:	10c4b03a 	or	r2,r2,r3
200214a0:	1823883a 	mov	r17,r3
200214a4:	103fef1e 	bne	r2,zero,20021464 <__alt_data_end+0xfffe2064>
200214a8:	d8c02817 	ldw	r3,160(sp)
200214ac:	dc402a17 	ldw	r17,168(sp)
200214b0:	b011883a 	mov	r8,r22
200214b4:	1c07c83a 	sub	r3,r3,r16
200214b8:	d8c02e15 	stw	r3,184(sp)
200214bc:	00005906 	br	20021624 <___vfprintf_internal_r+0x71c>
200214c0:	18c03fcc 	andi	r3,r3,255
200214c4:	1806fa1e 	bne	r3,zero,200230b0 <___vfprintf_internal_r+0x21a8>
200214c8:	9080020c 	andi	r2,r18,8
200214cc:	10048a26 	beq	r2,zero,200226f8 <___vfprintf_internal_r+0x17f0>
200214d0:	d8c02d17 	ldw	r3,180(sp)
200214d4:	d9002d17 	ldw	r4,180(sp)
200214d8:	d9402d17 	ldw	r5,180(sp)
200214dc:	18c00017 	ldw	r3,0(r3)
200214e0:	21000117 	ldw	r4,4(r4)
200214e4:	29400204 	addi	r5,r5,8
200214e8:	d8c03615 	stw	r3,216(sp)
200214ec:	d9003815 	stw	r4,224(sp)
200214f0:	d9402d15 	stw	r5,180(sp)
200214f4:	d9003617 	ldw	r4,216(sp)
200214f8:	d9403817 	ldw	r5,224(sp)
200214fc:	da003d15 	stw	r8,244(sp)
20021500:	04000044 	movi	r16,1
20021504:	00281480 	call	20028148 <__fpclassifyd>
20021508:	da003d17 	ldw	r8,244(sp)
2002150c:	14041f1e 	bne	r2,r16,2002258c <___vfprintf_internal_r+0x1684>
20021510:	d9003617 	ldw	r4,216(sp)
20021514:	d9403817 	ldw	r5,224(sp)
20021518:	000d883a 	mov	r6,zero
2002151c:	000f883a 	mov	r7,zero
20021520:	002c1ac0 	call	2002c1ac <__ledf2>
20021524:	da003d17 	ldw	r8,244(sp)
20021528:	1005be16 	blt	r2,zero,20022c24 <___vfprintf_internal_r+0x1d1c>
2002152c:	df002783 	ldbu	fp,158(sp)
20021530:	008011c4 	movi	r2,71
20021534:	1445330e 	bge	r2,r17,20022a04 <___vfprintf_internal_r+0x1afc>
20021538:	040800f4 	movhi	r16,8195
2002153c:	843f9204 	addi	r16,r16,-440
20021540:	00c000c4 	movi	r3,3
20021544:	00bfdfc4 	movi	r2,-129
20021548:	d8c02a15 	stw	r3,168(sp)
2002154c:	90a4703a 	and	r18,r18,r2
20021550:	d8c02e15 	stw	r3,184(sp)
20021554:	d8002915 	stw	zero,164(sp)
20021558:	d8003215 	stw	zero,200(sp)
2002155c:	00003706 	br	2002163c <___vfprintf_internal_r+0x734>
20021560:	94800214 	ori	r18,r18,8
20021564:	ac400007 	ldb	r17,0(r21)
20021568:	003ec806 	br	2002108c <__alt_data_end+0xfffe1c8c>
2002156c:	18c03fcc 	andi	r3,r3,255
20021570:	1806db1e 	bne	r3,zero,200230e0 <___vfprintf_internal_r+0x21d8>
20021574:	94800414 	ori	r18,r18,16
20021578:	9080080c 	andi	r2,r18,32
2002157c:	1002d826 	beq	r2,zero,200220e0 <___vfprintf_internal_r+0x11d8>
20021580:	d9402d17 	ldw	r5,180(sp)
20021584:	d8c02917 	ldw	r3,164(sp)
20021588:	d8002785 	stb	zero,158(sp)
2002158c:	28800204 	addi	r2,r5,8
20021590:	2cc00017 	ldw	r19,0(r5)
20021594:	2d800117 	ldw	r22,4(r5)
20021598:	18048f16 	blt	r3,zero,200227d8 <___vfprintf_internal_r+0x18d0>
2002159c:	013fdfc4 	movi	r4,-129
200215a0:	9d86b03a 	or	r3,r19,r22
200215a4:	d8802d15 	stw	r2,180(sp)
200215a8:	9124703a 	and	r18,r18,r4
200215ac:	1802d91e 	bne	r3,zero,20022114 <___vfprintf_internal_r+0x120c>
200215b0:	d8c02917 	ldw	r3,164(sp)
200215b4:	0039883a 	mov	fp,zero
200215b8:	1805c326 	beq	r3,zero,20022cc8 <___vfprintf_internal_r+0x1dc0>
200215bc:	0027883a 	mov	r19,zero
200215c0:	002d883a 	mov	r22,zero
200215c4:	dc001e04 	addi	r16,sp,120
200215c8:	9806d0fa 	srli	r3,r19,3
200215cc:	b008977a 	slli	r4,r22,29
200215d0:	b02cd0fa 	srli	r22,r22,3
200215d4:	9cc001cc 	andi	r19,r19,7
200215d8:	98800c04 	addi	r2,r19,48
200215dc:	843fffc4 	addi	r16,r16,-1
200215e0:	20e6b03a 	or	r19,r4,r3
200215e4:	80800005 	stb	r2,0(r16)
200215e8:	9d86b03a 	or	r3,r19,r22
200215ec:	183ff61e 	bne	r3,zero,200215c8 <__alt_data_end+0xfffe21c8>
200215f0:	90c0004c 	andi	r3,r18,1
200215f4:	18013b26 	beq	r3,zero,20021ae4 <___vfprintf_internal_r+0xbdc>
200215f8:	10803fcc 	andi	r2,r2,255
200215fc:	1080201c 	xori	r2,r2,128
20021600:	10bfe004 	addi	r2,r2,-128
20021604:	00c00c04 	movi	r3,48
20021608:	10c13626 	beq	r2,r3,20021ae4 <___vfprintf_internal_r+0xbdc>
2002160c:	80ffffc5 	stb	r3,-1(r16)
20021610:	d8c02817 	ldw	r3,160(sp)
20021614:	80bfffc4 	addi	r2,r16,-1
20021618:	1021883a 	mov	r16,r2
2002161c:	1887c83a 	sub	r3,r3,r2
20021620:	d8c02e15 	stw	r3,184(sp)
20021624:	d8802e17 	ldw	r2,184(sp)
20021628:	d9002917 	ldw	r4,164(sp)
2002162c:	1100010e 	bge	r2,r4,20021634 <___vfprintf_internal_r+0x72c>
20021630:	2005883a 	mov	r2,r4
20021634:	d8802a15 	stw	r2,168(sp)
20021638:	d8003215 	stw	zero,200(sp)
2002163c:	e7003fcc 	andi	fp,fp,255
20021640:	e700201c 	xori	fp,fp,128
20021644:	e73fe004 	addi	fp,fp,-128
20021648:	e0000326 	beq	fp,zero,20021658 <___vfprintf_internal_r+0x750>
2002164c:	d8c02a17 	ldw	r3,168(sp)
20021650:	18c00044 	addi	r3,r3,1
20021654:	d8c02a15 	stw	r3,168(sp)
20021658:	90c0008c 	andi	r3,r18,2
2002165c:	d8c02b15 	stw	r3,172(sp)
20021660:	18000326 	beq	r3,zero,20021670 <___vfprintf_internal_r+0x768>
20021664:	d8c02a17 	ldw	r3,168(sp)
20021668:	18c00084 	addi	r3,r3,2
2002166c:	d8c02a15 	stw	r3,168(sp)
20021670:	90c0210c 	andi	r3,r18,132
20021674:	d8c03015 	stw	r3,192(sp)
20021678:	1801a31e 	bne	r3,zero,20021d08 <___vfprintf_internal_r+0xe00>
2002167c:	d9003117 	ldw	r4,196(sp)
20021680:	d8c02a17 	ldw	r3,168(sp)
20021684:	20e7c83a 	sub	r19,r4,r3
20021688:	04c19f0e 	bge	zero,r19,20021d08 <___vfprintf_internal_r+0xe00>
2002168c:	02400404 	movi	r9,16
20021690:	d8c02017 	ldw	r3,128(sp)
20021694:	d8801f17 	ldw	r2,124(sp)
20021698:	4cc50d0e 	bge	r9,r19,20022ad0 <___vfprintf_internal_r+0x1bc8>
2002169c:	014800f4 	movhi	r5,8195
200216a0:	297fa584 	addi	r5,r5,-362
200216a4:	dc403b15 	stw	r17,236(sp)
200216a8:	d9403515 	stw	r5,212(sp)
200216ac:	9823883a 	mov	r17,r19
200216b0:	482d883a 	mov	r22,r9
200216b4:	9027883a 	mov	r19,r18
200216b8:	070001c4 	movi	fp,7
200216bc:	8025883a 	mov	r18,r16
200216c0:	dc002c17 	ldw	r16,176(sp)
200216c4:	00000306 	br	200216d4 <___vfprintf_internal_r+0x7cc>
200216c8:	8c7ffc04 	addi	r17,r17,-16
200216cc:	42000204 	addi	r8,r8,8
200216d0:	b440130e 	bge	r22,r17,20021720 <___vfprintf_internal_r+0x818>
200216d4:	010800f4 	movhi	r4,8195
200216d8:	18c00404 	addi	r3,r3,16
200216dc:	10800044 	addi	r2,r2,1
200216e0:	213fa584 	addi	r4,r4,-362
200216e4:	41000015 	stw	r4,0(r8)
200216e8:	45800115 	stw	r22,4(r8)
200216ec:	d8c02015 	stw	r3,128(sp)
200216f0:	d8801f15 	stw	r2,124(sp)
200216f4:	e0bff40e 	bge	fp,r2,200216c8 <__alt_data_end+0xfffe22c8>
200216f8:	d9801e04 	addi	r6,sp,120
200216fc:	b80b883a 	mov	r5,r23
20021700:	8009883a 	mov	r4,r16
20021704:	00285240 	call	20028524 <__sprint_r>
20021708:	103f011e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
2002170c:	8c7ffc04 	addi	r17,r17,-16
20021710:	d8c02017 	ldw	r3,128(sp)
20021714:	d8801f17 	ldw	r2,124(sp)
20021718:	da000404 	addi	r8,sp,16
2002171c:	b47fed16 	blt	r22,r17,200216d4 <__alt_data_end+0xfffe22d4>
20021720:	9021883a 	mov	r16,r18
20021724:	9825883a 	mov	r18,r19
20021728:	8827883a 	mov	r19,r17
2002172c:	dc403b17 	ldw	r17,236(sp)
20021730:	d9403517 	ldw	r5,212(sp)
20021734:	98c7883a 	add	r3,r19,r3
20021738:	10800044 	addi	r2,r2,1
2002173c:	41400015 	stw	r5,0(r8)
20021740:	44c00115 	stw	r19,4(r8)
20021744:	d8c02015 	stw	r3,128(sp)
20021748:	d8801f15 	stw	r2,124(sp)
2002174c:	010001c4 	movi	r4,7
20021750:	2082a316 	blt	r4,r2,200221e0 <___vfprintf_internal_r+0x12d8>
20021754:	df002787 	ldb	fp,158(sp)
20021758:	42000204 	addi	r8,r8,8
2002175c:	e0000c26 	beq	fp,zero,20021790 <___vfprintf_internal_r+0x888>
20021760:	d8801f17 	ldw	r2,124(sp)
20021764:	d9002784 	addi	r4,sp,158
20021768:	18c00044 	addi	r3,r3,1
2002176c:	10800044 	addi	r2,r2,1
20021770:	41000015 	stw	r4,0(r8)
20021774:	01000044 	movi	r4,1
20021778:	41000115 	stw	r4,4(r8)
2002177c:	d8c02015 	stw	r3,128(sp)
20021780:	d8801f15 	stw	r2,124(sp)
20021784:	010001c4 	movi	r4,7
20021788:	20823c16 	blt	r4,r2,2002207c <___vfprintf_internal_r+0x1174>
2002178c:	42000204 	addi	r8,r8,8
20021790:	d8802b17 	ldw	r2,172(sp)
20021794:	10000c26 	beq	r2,zero,200217c8 <___vfprintf_internal_r+0x8c0>
20021798:	d8801f17 	ldw	r2,124(sp)
2002179c:	d9002704 	addi	r4,sp,156
200217a0:	18c00084 	addi	r3,r3,2
200217a4:	10800044 	addi	r2,r2,1
200217a8:	41000015 	stw	r4,0(r8)
200217ac:	01000084 	movi	r4,2
200217b0:	41000115 	stw	r4,4(r8)
200217b4:	d8c02015 	stw	r3,128(sp)
200217b8:	d8801f15 	stw	r2,124(sp)
200217bc:	010001c4 	movi	r4,7
200217c0:	20823616 	blt	r4,r2,2002209c <___vfprintf_internal_r+0x1194>
200217c4:	42000204 	addi	r8,r8,8
200217c8:	d9003017 	ldw	r4,192(sp)
200217cc:	00802004 	movi	r2,128
200217d0:	20819926 	beq	r4,r2,20021e38 <___vfprintf_internal_r+0xf30>
200217d4:	d9402917 	ldw	r5,164(sp)
200217d8:	d8802e17 	ldw	r2,184(sp)
200217dc:	28adc83a 	sub	r22,r5,r2
200217e0:	0580310e 	bge	zero,r22,200218a8 <___vfprintf_internal_r+0x9a0>
200217e4:	07000404 	movi	fp,16
200217e8:	d8801f17 	ldw	r2,124(sp)
200217ec:	e584140e 	bge	fp,r22,20022840 <___vfprintf_internal_r+0x1938>
200217f0:	014800f4 	movhi	r5,8195
200217f4:	297fa184 	addi	r5,r5,-378
200217f8:	dc402915 	stw	r17,164(sp)
200217fc:	d9402b15 	stw	r5,172(sp)
20021800:	b023883a 	mov	r17,r22
20021804:	04c001c4 	movi	r19,7
20021808:	a82d883a 	mov	r22,r21
2002180c:	902b883a 	mov	r21,r18
20021810:	8025883a 	mov	r18,r16
20021814:	dc002c17 	ldw	r16,176(sp)
20021818:	00000306 	br	20021828 <___vfprintf_internal_r+0x920>
2002181c:	8c7ffc04 	addi	r17,r17,-16
20021820:	42000204 	addi	r8,r8,8
20021824:	e440110e 	bge	fp,r17,2002186c <___vfprintf_internal_r+0x964>
20021828:	18c00404 	addi	r3,r3,16
2002182c:	10800044 	addi	r2,r2,1
20021830:	45000015 	stw	r20,0(r8)
20021834:	47000115 	stw	fp,4(r8)
20021838:	d8c02015 	stw	r3,128(sp)
2002183c:	d8801f15 	stw	r2,124(sp)
20021840:	98bff60e 	bge	r19,r2,2002181c <__alt_data_end+0xfffe241c>
20021844:	d9801e04 	addi	r6,sp,120
20021848:	b80b883a 	mov	r5,r23
2002184c:	8009883a 	mov	r4,r16
20021850:	00285240 	call	20028524 <__sprint_r>
20021854:	103eae1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20021858:	8c7ffc04 	addi	r17,r17,-16
2002185c:	d8c02017 	ldw	r3,128(sp)
20021860:	d8801f17 	ldw	r2,124(sp)
20021864:	da000404 	addi	r8,sp,16
20021868:	e47fef16 	blt	fp,r17,20021828 <__alt_data_end+0xfffe2428>
2002186c:	9021883a 	mov	r16,r18
20021870:	a825883a 	mov	r18,r21
20021874:	b02b883a 	mov	r21,r22
20021878:	882d883a 	mov	r22,r17
2002187c:	dc402917 	ldw	r17,164(sp)
20021880:	d9002b17 	ldw	r4,172(sp)
20021884:	1d87883a 	add	r3,r3,r22
20021888:	10800044 	addi	r2,r2,1
2002188c:	41000015 	stw	r4,0(r8)
20021890:	45800115 	stw	r22,4(r8)
20021894:	d8c02015 	stw	r3,128(sp)
20021898:	d8801f15 	stw	r2,124(sp)
2002189c:	010001c4 	movi	r4,7
200218a0:	2081ee16 	blt	r4,r2,2002205c <___vfprintf_internal_r+0x1154>
200218a4:	42000204 	addi	r8,r8,8
200218a8:	9080400c 	andi	r2,r18,256
200218ac:	1001181e 	bne	r2,zero,20021d10 <___vfprintf_internal_r+0xe08>
200218b0:	d9402e17 	ldw	r5,184(sp)
200218b4:	d8801f17 	ldw	r2,124(sp)
200218b8:	44000015 	stw	r16,0(r8)
200218bc:	1947883a 	add	r3,r3,r5
200218c0:	10800044 	addi	r2,r2,1
200218c4:	41400115 	stw	r5,4(r8)
200218c8:	d8c02015 	stw	r3,128(sp)
200218cc:	d8801f15 	stw	r2,124(sp)
200218d0:	010001c4 	movi	r4,7
200218d4:	2081d316 	blt	r4,r2,20022024 <___vfprintf_internal_r+0x111c>
200218d8:	42000204 	addi	r8,r8,8
200218dc:	9480010c 	andi	r18,r18,4
200218e0:	90003226 	beq	r18,zero,200219ac <___vfprintf_internal_r+0xaa4>
200218e4:	d9403117 	ldw	r5,196(sp)
200218e8:	d8802a17 	ldw	r2,168(sp)
200218ec:	28a1c83a 	sub	r16,r5,r2
200218f0:	04002e0e 	bge	zero,r16,200219ac <___vfprintf_internal_r+0xaa4>
200218f4:	04400404 	movi	r17,16
200218f8:	d8801f17 	ldw	r2,124(sp)
200218fc:	8c04a20e 	bge	r17,r16,20022b88 <___vfprintf_internal_r+0x1c80>
20021900:	014800f4 	movhi	r5,8195
20021904:	297fa584 	addi	r5,r5,-362
20021908:	d9403515 	stw	r5,212(sp)
2002190c:	048001c4 	movi	r18,7
20021910:	dcc02c17 	ldw	r19,176(sp)
20021914:	00000306 	br	20021924 <___vfprintf_internal_r+0xa1c>
20021918:	843ffc04 	addi	r16,r16,-16
2002191c:	42000204 	addi	r8,r8,8
20021920:	8c00130e 	bge	r17,r16,20021970 <___vfprintf_internal_r+0xa68>
20021924:	010800f4 	movhi	r4,8195
20021928:	18c00404 	addi	r3,r3,16
2002192c:	10800044 	addi	r2,r2,1
20021930:	213fa584 	addi	r4,r4,-362
20021934:	41000015 	stw	r4,0(r8)
20021938:	44400115 	stw	r17,4(r8)
2002193c:	d8c02015 	stw	r3,128(sp)
20021940:	d8801f15 	stw	r2,124(sp)
20021944:	90bff40e 	bge	r18,r2,20021918 <__alt_data_end+0xfffe2518>
20021948:	d9801e04 	addi	r6,sp,120
2002194c:	b80b883a 	mov	r5,r23
20021950:	9809883a 	mov	r4,r19
20021954:	00285240 	call	20028524 <__sprint_r>
20021958:	103e6d1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
2002195c:	843ffc04 	addi	r16,r16,-16
20021960:	d8c02017 	ldw	r3,128(sp)
20021964:	d8801f17 	ldw	r2,124(sp)
20021968:	da000404 	addi	r8,sp,16
2002196c:	8c3fed16 	blt	r17,r16,20021924 <__alt_data_end+0xfffe2524>
20021970:	d9403517 	ldw	r5,212(sp)
20021974:	1c07883a 	add	r3,r3,r16
20021978:	10800044 	addi	r2,r2,1
2002197c:	41400015 	stw	r5,0(r8)
20021980:	44000115 	stw	r16,4(r8)
20021984:	d8c02015 	stw	r3,128(sp)
20021988:	d8801f15 	stw	r2,124(sp)
2002198c:	010001c4 	movi	r4,7
20021990:	2080060e 	bge	r4,r2,200219ac <___vfprintf_internal_r+0xaa4>
20021994:	d9002c17 	ldw	r4,176(sp)
20021998:	d9801e04 	addi	r6,sp,120
2002199c:	b80b883a 	mov	r5,r23
200219a0:	00285240 	call	20028524 <__sprint_r>
200219a4:	103e5a1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
200219a8:	d8c02017 	ldw	r3,128(sp)
200219ac:	d8803117 	ldw	r2,196(sp)
200219b0:	d9002a17 	ldw	r4,168(sp)
200219b4:	1100010e 	bge	r2,r4,200219bc <___vfprintf_internal_r+0xab4>
200219b8:	2005883a 	mov	r2,r4
200219bc:	d9402f17 	ldw	r5,188(sp)
200219c0:	288b883a 	add	r5,r5,r2
200219c4:	d9402f15 	stw	r5,188(sp)
200219c8:	18019e1e 	bne	r3,zero,20022044 <___vfprintf_internal_r+0x113c>
200219cc:	a8800007 	ldb	r2,0(r21)
200219d0:	d8001f15 	stw	zero,124(sp)
200219d4:	da000404 	addi	r8,sp,16
200219d8:	103d851e 	bne	r2,zero,20020ff0 <__alt_data_end+0xfffe1bf0>
200219dc:	a821883a 	mov	r16,r21
200219e0:	003d9b06 	br	20021050 <__alt_data_end+0xfffe1c50>
200219e4:	18c03fcc 	andi	r3,r3,255
200219e8:	1805c11e 	bne	r3,zero,200230f0 <___vfprintf_internal_r+0x21e8>
200219ec:	94800414 	ori	r18,r18,16
200219f0:	9080080c 	andi	r2,r18,32
200219f4:	10020c26 	beq	r2,zero,20022228 <___vfprintf_internal_r+0x1320>
200219f8:	d8802d17 	ldw	r2,180(sp)
200219fc:	d9002917 	ldw	r4,164(sp)
20021a00:	d8002785 	stb	zero,158(sp)
20021a04:	10c00204 	addi	r3,r2,8
20021a08:	14c00017 	ldw	r19,0(r2)
20021a0c:	15800117 	ldw	r22,4(r2)
20021a10:	20040f16 	blt	r4,zero,20022a50 <___vfprintf_internal_r+0x1b48>
20021a14:	013fdfc4 	movi	r4,-129
20021a18:	9d84b03a 	or	r2,r19,r22
20021a1c:	d8c02d15 	stw	r3,180(sp)
20021a20:	9124703a 	and	r18,r18,r4
20021a24:	0039883a 	mov	fp,zero
20021a28:	103e891e 	bne	r2,zero,20021450 <__alt_data_end+0xfffe2050>
20021a2c:	d9002917 	ldw	r4,164(sp)
20021a30:	2002c11e 	bne	r4,zero,20022538 <___vfprintf_internal_r+0x1630>
20021a34:	d8002915 	stw	zero,164(sp)
20021a38:	d8002e15 	stw	zero,184(sp)
20021a3c:	dc001e04 	addi	r16,sp,120
20021a40:	003ef806 	br	20021624 <__alt_data_end+0xfffe2224>
20021a44:	18c03fcc 	andi	r3,r3,255
20021a48:	18059d1e 	bne	r3,zero,200230c0 <___vfprintf_internal_r+0x21b8>
20021a4c:	014800f4 	movhi	r5,8195
20021a50:	297f9504 	addi	r5,r5,-428
20021a54:	d9403915 	stw	r5,228(sp)
20021a58:	9080080c 	andi	r2,r18,32
20021a5c:	10005226 	beq	r2,zero,20021ba8 <___vfprintf_internal_r+0xca0>
20021a60:	d8802d17 	ldw	r2,180(sp)
20021a64:	14c00017 	ldw	r19,0(r2)
20021a68:	15800117 	ldw	r22,4(r2)
20021a6c:	10800204 	addi	r2,r2,8
20021a70:	d8802d15 	stw	r2,180(sp)
20021a74:	9080004c 	andi	r2,r18,1
20021a78:	10019026 	beq	r2,zero,200220bc <___vfprintf_internal_r+0x11b4>
20021a7c:	9d84b03a 	or	r2,r19,r22
20021a80:	10036926 	beq	r2,zero,20022828 <___vfprintf_internal_r+0x1920>
20021a84:	d8c02917 	ldw	r3,164(sp)
20021a88:	00800c04 	movi	r2,48
20021a8c:	d8802705 	stb	r2,156(sp)
20021a90:	dc402745 	stb	r17,157(sp)
20021a94:	d8002785 	stb	zero,158(sp)
20021a98:	90800094 	ori	r2,r18,2
20021a9c:	18045d16 	blt	r3,zero,20022c14 <___vfprintf_internal_r+0x1d0c>
20021aa0:	00bfdfc4 	movi	r2,-129
20021aa4:	90a4703a 	and	r18,r18,r2
20021aa8:	94800094 	ori	r18,r18,2
20021aac:	0039883a 	mov	fp,zero
20021ab0:	d9003917 	ldw	r4,228(sp)
20021ab4:	dc001e04 	addi	r16,sp,120
20021ab8:	988003cc 	andi	r2,r19,15
20021abc:	b006973a 	slli	r3,r22,28
20021ac0:	2085883a 	add	r2,r4,r2
20021ac4:	9826d13a 	srli	r19,r19,4
20021ac8:	10800003 	ldbu	r2,0(r2)
20021acc:	b02cd13a 	srli	r22,r22,4
20021ad0:	843fffc4 	addi	r16,r16,-1
20021ad4:	1ce6b03a 	or	r19,r3,r19
20021ad8:	80800005 	stb	r2,0(r16)
20021adc:	9d84b03a 	or	r2,r19,r22
20021ae0:	103ff51e 	bne	r2,zero,20021ab8 <__alt_data_end+0xfffe26b8>
20021ae4:	d8c02817 	ldw	r3,160(sp)
20021ae8:	1c07c83a 	sub	r3,r3,r16
20021aec:	d8c02e15 	stw	r3,184(sp)
20021af0:	003ecc06 	br	20021624 <__alt_data_end+0xfffe2224>
20021af4:	18c03fcc 	andi	r3,r3,255
20021af8:	183e9f26 	beq	r3,zero,20021578 <__alt_data_end+0xfffe2178>
20021afc:	d9c02785 	stb	r7,158(sp)
20021b00:	003e9d06 	br	20021578 <__alt_data_end+0xfffe2178>
20021b04:	00c00044 	movi	r3,1
20021b08:	01c00ac4 	movi	r7,43
20021b0c:	ac400007 	ldb	r17,0(r21)
20021b10:	003d5e06 	br	2002108c <__alt_data_end+0xfffe1c8c>
20021b14:	94800814 	ori	r18,r18,32
20021b18:	ac400007 	ldb	r17,0(r21)
20021b1c:	003d5b06 	br	2002108c <__alt_data_end+0xfffe1c8c>
20021b20:	d8c02d17 	ldw	r3,180(sp)
20021b24:	d8002785 	stb	zero,158(sp)
20021b28:	1c000017 	ldw	r16,0(r3)
20021b2c:	1cc00104 	addi	r19,r3,4
20021b30:	80041926 	beq	r16,zero,20022b98 <___vfprintf_internal_r+0x1c90>
20021b34:	d9002917 	ldw	r4,164(sp)
20021b38:	2003d016 	blt	r4,zero,20022a7c <___vfprintf_internal_r+0x1b74>
20021b3c:	200d883a 	mov	r6,r4
20021b40:	000b883a 	mov	r5,zero
20021b44:	8009883a 	mov	r4,r16
20021b48:	da003d15 	stw	r8,244(sp)
20021b4c:	00267180 	call	20026718 <memchr>
20021b50:	da003d17 	ldw	r8,244(sp)
20021b54:	10045426 	beq	r2,zero,20022ca8 <___vfprintf_internal_r+0x1da0>
20021b58:	1405c83a 	sub	r2,r2,r16
20021b5c:	d8802e15 	stw	r2,184(sp)
20021b60:	1003cc16 	blt	r2,zero,20022a94 <___vfprintf_internal_r+0x1b8c>
20021b64:	df002783 	ldbu	fp,158(sp)
20021b68:	d8802a15 	stw	r2,168(sp)
20021b6c:	dcc02d15 	stw	r19,180(sp)
20021b70:	d8002915 	stw	zero,164(sp)
20021b74:	d8003215 	stw	zero,200(sp)
20021b78:	003eb006 	br	2002163c <__alt_data_end+0xfffe223c>
20021b7c:	18c03fcc 	andi	r3,r3,255
20021b80:	183f9b26 	beq	r3,zero,200219f0 <__alt_data_end+0xfffe25f0>
20021b84:	d9c02785 	stb	r7,158(sp)
20021b88:	003f9906 	br	200219f0 <__alt_data_end+0xfffe25f0>
20021b8c:	18c03fcc 	andi	r3,r3,255
20021b90:	1805551e 	bne	r3,zero,200230e8 <___vfprintf_internal_r+0x21e0>
20021b94:	014800f4 	movhi	r5,8195
20021b98:	297f9a04 	addi	r5,r5,-408
20021b9c:	d9403915 	stw	r5,228(sp)
20021ba0:	9080080c 	andi	r2,r18,32
20021ba4:	103fae1e 	bne	r2,zero,20021a60 <__alt_data_end+0xfffe2660>
20021ba8:	9080040c 	andi	r2,r18,16
20021bac:	1002de26 	beq	r2,zero,20022728 <___vfprintf_internal_r+0x1820>
20021bb0:	d8c02d17 	ldw	r3,180(sp)
20021bb4:	002d883a 	mov	r22,zero
20021bb8:	1cc00017 	ldw	r19,0(r3)
20021bbc:	18c00104 	addi	r3,r3,4
20021bc0:	d8c02d15 	stw	r3,180(sp)
20021bc4:	003fab06 	br	20021a74 <__alt_data_end+0xfffe2674>
20021bc8:	38803fcc 	andi	r2,r7,255
20021bcc:	1080201c 	xori	r2,r2,128
20021bd0:	10bfe004 	addi	r2,r2,-128
20021bd4:	1002d21e 	bne	r2,zero,20022720 <___vfprintf_internal_r+0x1818>
20021bd8:	00c00044 	movi	r3,1
20021bdc:	01c00804 	movi	r7,32
20021be0:	ac400007 	ldb	r17,0(r21)
20021be4:	003d2906 	br	2002108c <__alt_data_end+0xfffe1c8c>
20021be8:	94800054 	ori	r18,r18,1
20021bec:	ac400007 	ldb	r17,0(r21)
20021bf0:	003d2606 	br	2002108c <__alt_data_end+0xfffe1c8c>
20021bf4:	18c03fcc 	andi	r3,r3,255
20021bf8:	183e0526 	beq	r3,zero,20021410 <__alt_data_end+0xfffe2010>
20021bfc:	d9c02785 	stb	r7,158(sp)
20021c00:	003e0306 	br	20021410 <__alt_data_end+0xfffe2010>
20021c04:	94801014 	ori	r18,r18,64
20021c08:	ac400007 	ldb	r17,0(r21)
20021c0c:	003d1f06 	br	2002108c <__alt_data_end+0xfffe1c8c>
20021c10:	ac400007 	ldb	r17,0(r21)
20021c14:	8a438726 	beq	r17,r9,20022a34 <___vfprintf_internal_r+0x1b2c>
20021c18:	94800414 	ori	r18,r18,16
20021c1c:	003d1b06 	br	2002108c <__alt_data_end+0xfffe1c8c>
20021c20:	18c03fcc 	andi	r3,r3,255
20021c24:	1805341e 	bne	r3,zero,200230f8 <___vfprintf_internal_r+0x21f0>
20021c28:	9080080c 	andi	r2,r18,32
20021c2c:	1002cd26 	beq	r2,zero,20022764 <___vfprintf_internal_r+0x185c>
20021c30:	d9402d17 	ldw	r5,180(sp)
20021c34:	d9002f17 	ldw	r4,188(sp)
20021c38:	28800017 	ldw	r2,0(r5)
20021c3c:	2007d7fa 	srai	r3,r4,31
20021c40:	29400104 	addi	r5,r5,4
20021c44:	d9402d15 	stw	r5,180(sp)
20021c48:	11000015 	stw	r4,0(r2)
20021c4c:	10c00115 	stw	r3,4(r2)
20021c50:	003ce506 	br	20020fe8 <__alt_data_end+0xfffe1be8>
20021c54:	d8c02d17 	ldw	r3,180(sp)
20021c58:	d9002d17 	ldw	r4,180(sp)
20021c5c:	d8002785 	stb	zero,158(sp)
20021c60:	18800017 	ldw	r2,0(r3)
20021c64:	21000104 	addi	r4,r4,4
20021c68:	00c00044 	movi	r3,1
20021c6c:	d8c02a15 	stw	r3,168(sp)
20021c70:	d8801405 	stb	r2,80(sp)
20021c74:	d9002d15 	stw	r4,180(sp)
20021c78:	d8c02e15 	stw	r3,184(sp)
20021c7c:	d8002915 	stw	zero,164(sp)
20021c80:	d8003215 	stw	zero,200(sp)
20021c84:	dc001404 	addi	r16,sp,80
20021c88:	0039883a 	mov	fp,zero
20021c8c:	003e7206 	br	20021658 <__alt_data_end+0xfffe2258>
20021c90:	010800f4 	movhi	r4,8195
20021c94:	213f9a04 	addi	r4,r4,-408
20021c98:	0039883a 	mov	fp,zero
20021c9c:	d9003915 	stw	r4,228(sp)
20021ca0:	04401e04 	movi	r17,120
20021ca4:	003f8206 	br	20021ab0 <__alt_data_end+0xfffe26b0>
20021ca8:	18c03fcc 	andi	r3,r3,255
20021cac:	1805061e 	bne	r3,zero,200230c8 <___vfprintf_internal_r+0x21c0>
20021cb0:	883d9126 	beq	r17,zero,200212f8 <__alt_data_end+0xfffe1ef8>
20021cb4:	00c00044 	movi	r3,1
20021cb8:	d8c02a15 	stw	r3,168(sp)
20021cbc:	dc401405 	stb	r17,80(sp)
20021cc0:	d8002785 	stb	zero,158(sp)
20021cc4:	003fec06 	br	20021c78 <__alt_data_end+0xfffe2878>
20021cc8:	014800f4 	movhi	r5,8195
20021ccc:	297f9a04 	addi	r5,r5,-408
20021cd0:	d9403915 	stw	r5,228(sp)
20021cd4:	d8c02d15 	stw	r3,180(sp)
20021cd8:	1025883a 	mov	r18,r2
20021cdc:	04401e04 	movi	r17,120
20021ce0:	9d84b03a 	or	r2,r19,r22
20021ce4:	1000fc1e 	bne	r2,zero,200220d8 <___vfprintf_internal_r+0x11d0>
20021ce8:	0039883a 	mov	fp,zero
20021cec:	00800084 	movi	r2,2
20021cf0:	10803fcc 	andi	r2,r2,255
20021cf4:	00c00044 	movi	r3,1
20021cf8:	10c20f26 	beq	r2,r3,20022538 <___vfprintf_internal_r+0x1630>
20021cfc:	00c00084 	movi	r3,2
20021d00:	10fd6326 	beq	r2,r3,20021290 <__alt_data_end+0xfffe1e90>
20021d04:	003e2d06 	br	200215bc <__alt_data_end+0xfffe21bc>
20021d08:	d8c02017 	ldw	r3,128(sp)
20021d0c:	003e9306 	br	2002175c <__alt_data_end+0xfffe235c>
20021d10:	00801944 	movi	r2,101
20021d14:	14407e0e 	bge	r2,r17,20021f10 <___vfprintf_internal_r+0x1008>
20021d18:	d9003617 	ldw	r4,216(sp)
20021d1c:	d9403817 	ldw	r5,224(sp)
20021d20:	000d883a 	mov	r6,zero
20021d24:	000f883a 	mov	r7,zero
20021d28:	d8c03c15 	stw	r3,240(sp)
20021d2c:	da003d15 	stw	r8,244(sp)
20021d30:	002c0480 	call	2002c048 <__eqdf2>
20021d34:	d8c03c17 	ldw	r3,240(sp)
20021d38:	da003d17 	ldw	r8,244(sp)
20021d3c:	1000f71e 	bne	r2,zero,2002211c <___vfprintf_internal_r+0x1214>
20021d40:	d8801f17 	ldw	r2,124(sp)
20021d44:	010800f4 	movhi	r4,8195
20021d48:	213fa104 	addi	r4,r4,-380
20021d4c:	18c00044 	addi	r3,r3,1
20021d50:	10800044 	addi	r2,r2,1
20021d54:	41000015 	stw	r4,0(r8)
20021d58:	01000044 	movi	r4,1
20021d5c:	41000115 	stw	r4,4(r8)
20021d60:	d8c02015 	stw	r3,128(sp)
20021d64:	d8801f15 	stw	r2,124(sp)
20021d68:	010001c4 	movi	r4,7
20021d6c:	2082b816 	blt	r4,r2,20022850 <___vfprintf_internal_r+0x1948>
20021d70:	42000204 	addi	r8,r8,8
20021d74:	d8802617 	ldw	r2,152(sp)
20021d78:	d9403317 	ldw	r5,204(sp)
20021d7c:	11400216 	blt	r2,r5,20021d88 <___vfprintf_internal_r+0xe80>
20021d80:	9080004c 	andi	r2,r18,1
20021d84:	103ed526 	beq	r2,zero,200218dc <__alt_data_end+0xfffe24dc>
20021d88:	d8803717 	ldw	r2,220(sp)
20021d8c:	d9003417 	ldw	r4,208(sp)
20021d90:	d9403717 	ldw	r5,220(sp)
20021d94:	1887883a 	add	r3,r3,r2
20021d98:	d8801f17 	ldw	r2,124(sp)
20021d9c:	41000015 	stw	r4,0(r8)
20021da0:	41400115 	stw	r5,4(r8)
20021da4:	10800044 	addi	r2,r2,1
20021da8:	d8c02015 	stw	r3,128(sp)
20021dac:	d8801f15 	stw	r2,124(sp)
20021db0:	010001c4 	movi	r4,7
20021db4:	20832916 	blt	r4,r2,20022a5c <___vfprintf_internal_r+0x1b54>
20021db8:	42000204 	addi	r8,r8,8
20021dbc:	d8803317 	ldw	r2,204(sp)
20021dc0:	143fffc4 	addi	r16,r2,-1
20021dc4:	043ec50e 	bge	zero,r16,200218dc <__alt_data_end+0xfffe24dc>
20021dc8:	04400404 	movi	r17,16
20021dcc:	d8801f17 	ldw	r2,124(sp)
20021dd0:	8c00880e 	bge	r17,r16,20021ff4 <___vfprintf_internal_r+0x10ec>
20021dd4:	014800f4 	movhi	r5,8195
20021dd8:	297fa184 	addi	r5,r5,-378
20021ddc:	d9402b15 	stw	r5,172(sp)
20021de0:	058001c4 	movi	r22,7
20021de4:	dcc02c17 	ldw	r19,176(sp)
20021de8:	00000306 	br	20021df8 <___vfprintf_internal_r+0xef0>
20021dec:	42000204 	addi	r8,r8,8
20021df0:	843ffc04 	addi	r16,r16,-16
20021df4:	8c00820e 	bge	r17,r16,20022000 <___vfprintf_internal_r+0x10f8>
20021df8:	18c00404 	addi	r3,r3,16
20021dfc:	10800044 	addi	r2,r2,1
20021e00:	45000015 	stw	r20,0(r8)
20021e04:	44400115 	stw	r17,4(r8)
20021e08:	d8c02015 	stw	r3,128(sp)
20021e0c:	d8801f15 	stw	r2,124(sp)
20021e10:	b0bff60e 	bge	r22,r2,20021dec <__alt_data_end+0xfffe29ec>
20021e14:	d9801e04 	addi	r6,sp,120
20021e18:	b80b883a 	mov	r5,r23
20021e1c:	9809883a 	mov	r4,r19
20021e20:	00285240 	call	20028524 <__sprint_r>
20021e24:	103d3a1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20021e28:	d8c02017 	ldw	r3,128(sp)
20021e2c:	d8801f17 	ldw	r2,124(sp)
20021e30:	da000404 	addi	r8,sp,16
20021e34:	003fee06 	br	20021df0 <__alt_data_end+0xfffe29f0>
20021e38:	d9403117 	ldw	r5,196(sp)
20021e3c:	d8802a17 	ldw	r2,168(sp)
20021e40:	28adc83a 	sub	r22,r5,r2
20021e44:	05be630e 	bge	zero,r22,200217d4 <__alt_data_end+0xfffe23d4>
20021e48:	07000404 	movi	fp,16
20021e4c:	d8801f17 	ldw	r2,124(sp)
20021e50:	e5838f0e 	bge	fp,r22,20022c90 <___vfprintf_internal_r+0x1d88>
20021e54:	014800f4 	movhi	r5,8195
20021e58:	297fa184 	addi	r5,r5,-378
20021e5c:	dc403015 	stw	r17,192(sp)
20021e60:	d9402b15 	stw	r5,172(sp)
20021e64:	b023883a 	mov	r17,r22
20021e68:	04c001c4 	movi	r19,7
20021e6c:	a82d883a 	mov	r22,r21
20021e70:	902b883a 	mov	r21,r18
20021e74:	8025883a 	mov	r18,r16
20021e78:	dc002c17 	ldw	r16,176(sp)
20021e7c:	00000306 	br	20021e8c <___vfprintf_internal_r+0xf84>
20021e80:	8c7ffc04 	addi	r17,r17,-16
20021e84:	42000204 	addi	r8,r8,8
20021e88:	e440110e 	bge	fp,r17,20021ed0 <___vfprintf_internal_r+0xfc8>
20021e8c:	18c00404 	addi	r3,r3,16
20021e90:	10800044 	addi	r2,r2,1
20021e94:	45000015 	stw	r20,0(r8)
20021e98:	47000115 	stw	fp,4(r8)
20021e9c:	d8c02015 	stw	r3,128(sp)
20021ea0:	d8801f15 	stw	r2,124(sp)
20021ea4:	98bff60e 	bge	r19,r2,20021e80 <__alt_data_end+0xfffe2a80>
20021ea8:	d9801e04 	addi	r6,sp,120
20021eac:	b80b883a 	mov	r5,r23
20021eb0:	8009883a 	mov	r4,r16
20021eb4:	00285240 	call	20028524 <__sprint_r>
20021eb8:	103d151e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20021ebc:	8c7ffc04 	addi	r17,r17,-16
20021ec0:	d8c02017 	ldw	r3,128(sp)
20021ec4:	d8801f17 	ldw	r2,124(sp)
20021ec8:	da000404 	addi	r8,sp,16
20021ecc:	e47fef16 	blt	fp,r17,20021e8c <__alt_data_end+0xfffe2a8c>
20021ed0:	9021883a 	mov	r16,r18
20021ed4:	a825883a 	mov	r18,r21
20021ed8:	b02b883a 	mov	r21,r22
20021edc:	882d883a 	mov	r22,r17
20021ee0:	dc403017 	ldw	r17,192(sp)
20021ee4:	d9002b17 	ldw	r4,172(sp)
20021ee8:	1d87883a 	add	r3,r3,r22
20021eec:	10800044 	addi	r2,r2,1
20021ef0:	41000015 	stw	r4,0(r8)
20021ef4:	45800115 	stw	r22,4(r8)
20021ef8:	d8c02015 	stw	r3,128(sp)
20021efc:	d8801f15 	stw	r2,124(sp)
20021f00:	010001c4 	movi	r4,7
20021f04:	20818e16 	blt	r4,r2,20022540 <___vfprintf_internal_r+0x1638>
20021f08:	42000204 	addi	r8,r8,8
20021f0c:	003e3106 	br	200217d4 <__alt_data_end+0xfffe23d4>
20021f10:	d9403317 	ldw	r5,204(sp)
20021f14:	00800044 	movi	r2,1
20021f18:	18c00044 	addi	r3,r3,1
20021f1c:	1141530e 	bge	r2,r5,2002246c <___vfprintf_internal_r+0x1564>
20021f20:	dc401f17 	ldw	r17,124(sp)
20021f24:	00800044 	movi	r2,1
20021f28:	40800115 	stw	r2,4(r8)
20021f2c:	8c400044 	addi	r17,r17,1
20021f30:	44000015 	stw	r16,0(r8)
20021f34:	d8c02015 	stw	r3,128(sp)
20021f38:	dc401f15 	stw	r17,124(sp)
20021f3c:	008001c4 	movi	r2,7
20021f40:	14416b16 	blt	r2,r17,200224f0 <___vfprintf_internal_r+0x15e8>
20021f44:	42000204 	addi	r8,r8,8
20021f48:	d8803717 	ldw	r2,220(sp)
20021f4c:	d9003417 	ldw	r4,208(sp)
20021f50:	8c400044 	addi	r17,r17,1
20021f54:	10c7883a 	add	r3,r2,r3
20021f58:	40800115 	stw	r2,4(r8)
20021f5c:	41000015 	stw	r4,0(r8)
20021f60:	d8c02015 	stw	r3,128(sp)
20021f64:	dc401f15 	stw	r17,124(sp)
20021f68:	008001c4 	movi	r2,7
20021f6c:	14416916 	blt	r2,r17,20022514 <___vfprintf_internal_r+0x160c>
20021f70:	45800204 	addi	r22,r8,8
20021f74:	d9003617 	ldw	r4,216(sp)
20021f78:	d9403817 	ldw	r5,224(sp)
20021f7c:	000d883a 	mov	r6,zero
20021f80:	000f883a 	mov	r7,zero
20021f84:	d8c03c15 	stw	r3,240(sp)
20021f88:	002c0480 	call	2002c048 <__eqdf2>
20021f8c:	d8c03c17 	ldw	r3,240(sp)
20021f90:	1000bc26 	beq	r2,zero,20022284 <___vfprintf_internal_r+0x137c>
20021f94:	d9403317 	ldw	r5,204(sp)
20021f98:	84000044 	addi	r16,r16,1
20021f9c:	8c400044 	addi	r17,r17,1
20021fa0:	28bfffc4 	addi	r2,r5,-1
20021fa4:	1887883a 	add	r3,r3,r2
20021fa8:	b0800115 	stw	r2,4(r22)
20021fac:	b4000015 	stw	r16,0(r22)
20021fb0:	d8c02015 	stw	r3,128(sp)
20021fb4:	dc401f15 	stw	r17,124(sp)
20021fb8:	008001c4 	movi	r2,7
20021fbc:	14414316 	blt	r2,r17,200224cc <___vfprintf_internal_r+0x15c4>
20021fc0:	b5800204 	addi	r22,r22,8
20021fc4:	d9003a17 	ldw	r4,232(sp)
20021fc8:	df0022c4 	addi	fp,sp,139
20021fcc:	8c400044 	addi	r17,r17,1
20021fd0:	20c7883a 	add	r3,r4,r3
20021fd4:	b7000015 	stw	fp,0(r22)
20021fd8:	b1000115 	stw	r4,4(r22)
20021fdc:	d8c02015 	stw	r3,128(sp)
20021fe0:	dc401f15 	stw	r17,124(sp)
20021fe4:	008001c4 	movi	r2,7
20021fe8:	14400e16 	blt	r2,r17,20022024 <___vfprintf_internal_r+0x111c>
20021fec:	b2000204 	addi	r8,r22,8
20021ff0:	003e3a06 	br	200218dc <__alt_data_end+0xfffe24dc>
20021ff4:	010800f4 	movhi	r4,8195
20021ff8:	213fa184 	addi	r4,r4,-378
20021ffc:	d9002b15 	stw	r4,172(sp)
20022000:	d9002b17 	ldw	r4,172(sp)
20022004:	1c07883a 	add	r3,r3,r16
20022008:	44000115 	stw	r16,4(r8)
2002200c:	41000015 	stw	r4,0(r8)
20022010:	10800044 	addi	r2,r2,1
20022014:	d8c02015 	stw	r3,128(sp)
20022018:	d8801f15 	stw	r2,124(sp)
2002201c:	010001c4 	movi	r4,7
20022020:	20be2d0e 	bge	r4,r2,200218d8 <__alt_data_end+0xfffe24d8>
20022024:	d9002c17 	ldw	r4,176(sp)
20022028:	d9801e04 	addi	r6,sp,120
2002202c:	b80b883a 	mov	r5,r23
20022030:	00285240 	call	20028524 <__sprint_r>
20022034:	103cb61e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022038:	d8c02017 	ldw	r3,128(sp)
2002203c:	da000404 	addi	r8,sp,16
20022040:	003e2606 	br	200218dc <__alt_data_end+0xfffe24dc>
20022044:	d9002c17 	ldw	r4,176(sp)
20022048:	d9801e04 	addi	r6,sp,120
2002204c:	b80b883a 	mov	r5,r23
20022050:	00285240 	call	20028524 <__sprint_r>
20022054:	103e5d26 	beq	r2,zero,200219cc <__alt_data_end+0xfffe25cc>
20022058:	003cad06 	br	20021310 <__alt_data_end+0xfffe1f10>
2002205c:	d9002c17 	ldw	r4,176(sp)
20022060:	d9801e04 	addi	r6,sp,120
20022064:	b80b883a 	mov	r5,r23
20022068:	00285240 	call	20028524 <__sprint_r>
2002206c:	103ca81e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022070:	d8c02017 	ldw	r3,128(sp)
20022074:	da000404 	addi	r8,sp,16
20022078:	003e0b06 	br	200218a8 <__alt_data_end+0xfffe24a8>
2002207c:	d9002c17 	ldw	r4,176(sp)
20022080:	d9801e04 	addi	r6,sp,120
20022084:	b80b883a 	mov	r5,r23
20022088:	00285240 	call	20028524 <__sprint_r>
2002208c:	103ca01e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022090:	d8c02017 	ldw	r3,128(sp)
20022094:	da000404 	addi	r8,sp,16
20022098:	003dbd06 	br	20021790 <__alt_data_end+0xfffe2390>
2002209c:	d9002c17 	ldw	r4,176(sp)
200220a0:	d9801e04 	addi	r6,sp,120
200220a4:	b80b883a 	mov	r5,r23
200220a8:	00285240 	call	20028524 <__sprint_r>
200220ac:	103c981e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
200220b0:	d8c02017 	ldw	r3,128(sp)
200220b4:	da000404 	addi	r8,sp,16
200220b8:	003dc306 	br	200217c8 <__alt_data_end+0xfffe23c8>
200220bc:	d8802917 	ldw	r2,164(sp)
200220c0:	d8002785 	stb	zero,158(sp)
200220c4:	103f0616 	blt	r2,zero,20021ce0 <__alt_data_end+0xfffe28e0>
200220c8:	00ffdfc4 	movi	r3,-129
200220cc:	9d84b03a 	or	r2,r19,r22
200220d0:	90e4703a 	and	r18,r18,r3
200220d4:	103c6b26 	beq	r2,zero,20021284 <__alt_data_end+0xfffe1e84>
200220d8:	0039883a 	mov	fp,zero
200220dc:	003e7406 	br	20021ab0 <__alt_data_end+0xfffe26b0>
200220e0:	9080040c 	andi	r2,r18,16
200220e4:	1001b326 	beq	r2,zero,200227b4 <___vfprintf_internal_r+0x18ac>
200220e8:	d9002d17 	ldw	r4,180(sp)
200220ec:	d9402917 	ldw	r5,164(sp)
200220f0:	d8002785 	stb	zero,158(sp)
200220f4:	20800104 	addi	r2,r4,4
200220f8:	24c00017 	ldw	r19,0(r4)
200220fc:	002d883a 	mov	r22,zero
20022100:	2801b516 	blt	r5,zero,200227d8 <___vfprintf_internal_r+0x18d0>
20022104:	00ffdfc4 	movi	r3,-129
20022108:	d8802d15 	stw	r2,180(sp)
2002210c:	90e4703a 	and	r18,r18,r3
20022110:	983d2726 	beq	r19,zero,200215b0 <__alt_data_end+0xfffe21b0>
20022114:	0039883a 	mov	fp,zero
20022118:	003d2a06 	br	200215c4 <__alt_data_end+0xfffe21c4>
2002211c:	dc402617 	ldw	r17,152(sp)
20022120:	0441d30e 	bge	zero,r17,20022870 <___vfprintf_internal_r+0x1968>
20022124:	dc403217 	ldw	r17,200(sp)
20022128:	d8803317 	ldw	r2,204(sp)
2002212c:	1440010e 	bge	r2,r17,20022134 <___vfprintf_internal_r+0x122c>
20022130:	1023883a 	mov	r17,r2
20022134:	04400a0e 	bge	zero,r17,20022160 <___vfprintf_internal_r+0x1258>
20022138:	d8801f17 	ldw	r2,124(sp)
2002213c:	1c47883a 	add	r3,r3,r17
20022140:	44000015 	stw	r16,0(r8)
20022144:	10800044 	addi	r2,r2,1
20022148:	44400115 	stw	r17,4(r8)
2002214c:	d8c02015 	stw	r3,128(sp)
20022150:	d8801f15 	stw	r2,124(sp)
20022154:	010001c4 	movi	r4,7
20022158:	20826516 	blt	r4,r2,20022af0 <___vfprintf_internal_r+0x1be8>
2002215c:	42000204 	addi	r8,r8,8
20022160:	88026116 	blt	r17,zero,20022ae8 <___vfprintf_internal_r+0x1be0>
20022164:	d9003217 	ldw	r4,200(sp)
20022168:	2463c83a 	sub	r17,r4,r17
2002216c:	04407b0e 	bge	zero,r17,2002235c <___vfprintf_internal_r+0x1454>
20022170:	05800404 	movi	r22,16
20022174:	d8801f17 	ldw	r2,124(sp)
20022178:	b4419d0e 	bge	r22,r17,200227f0 <___vfprintf_internal_r+0x18e8>
2002217c:	010800f4 	movhi	r4,8195
20022180:	213fa184 	addi	r4,r4,-378
20022184:	d9002b15 	stw	r4,172(sp)
20022188:	070001c4 	movi	fp,7
2002218c:	dcc02c17 	ldw	r19,176(sp)
20022190:	00000306 	br	200221a0 <___vfprintf_internal_r+0x1298>
20022194:	42000204 	addi	r8,r8,8
20022198:	8c7ffc04 	addi	r17,r17,-16
2002219c:	b441970e 	bge	r22,r17,200227fc <___vfprintf_internal_r+0x18f4>
200221a0:	18c00404 	addi	r3,r3,16
200221a4:	10800044 	addi	r2,r2,1
200221a8:	45000015 	stw	r20,0(r8)
200221ac:	45800115 	stw	r22,4(r8)
200221b0:	d8c02015 	stw	r3,128(sp)
200221b4:	d8801f15 	stw	r2,124(sp)
200221b8:	e0bff60e 	bge	fp,r2,20022194 <__alt_data_end+0xfffe2d94>
200221bc:	d9801e04 	addi	r6,sp,120
200221c0:	b80b883a 	mov	r5,r23
200221c4:	9809883a 	mov	r4,r19
200221c8:	00285240 	call	20028524 <__sprint_r>
200221cc:	103c501e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
200221d0:	d8c02017 	ldw	r3,128(sp)
200221d4:	d8801f17 	ldw	r2,124(sp)
200221d8:	da000404 	addi	r8,sp,16
200221dc:	003fee06 	br	20022198 <__alt_data_end+0xfffe2d98>
200221e0:	d9002c17 	ldw	r4,176(sp)
200221e4:	d9801e04 	addi	r6,sp,120
200221e8:	b80b883a 	mov	r5,r23
200221ec:	00285240 	call	20028524 <__sprint_r>
200221f0:	103c471e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
200221f4:	d8c02017 	ldw	r3,128(sp)
200221f8:	df002787 	ldb	fp,158(sp)
200221fc:	da000404 	addi	r8,sp,16
20022200:	003d5606 	br	2002175c <__alt_data_end+0xfffe235c>
20022204:	9080040c 	andi	r2,r18,16
20022208:	10016126 	beq	r2,zero,20022790 <___vfprintf_internal_r+0x1888>
2002220c:	d8802d17 	ldw	r2,180(sp)
20022210:	14c00017 	ldw	r19,0(r2)
20022214:	10800104 	addi	r2,r2,4
20022218:	d8802d15 	stw	r2,180(sp)
2002221c:	982dd7fa 	srai	r22,r19,31
20022220:	b005883a 	mov	r2,r22
20022224:	003c8206 	br	20021430 <__alt_data_end+0xfffe2030>
20022228:	9080040c 	andi	r2,r18,16
2002222c:	10003526 	beq	r2,zero,20022304 <___vfprintf_internal_r+0x13fc>
20022230:	d9402d17 	ldw	r5,180(sp)
20022234:	d8c02917 	ldw	r3,164(sp)
20022238:	d8002785 	stb	zero,158(sp)
2002223c:	28800104 	addi	r2,r5,4
20022240:	2cc00017 	ldw	r19,0(r5)
20022244:	002d883a 	mov	r22,zero
20022248:	18003716 	blt	r3,zero,20022328 <___vfprintf_internal_r+0x1420>
2002224c:	00ffdfc4 	movi	r3,-129
20022250:	d8802d15 	stw	r2,180(sp)
20022254:	90e4703a 	and	r18,r18,r3
20022258:	0039883a 	mov	fp,zero
2002225c:	983df326 	beq	r19,zero,20021a2c <__alt_data_end+0xfffe262c>
20022260:	00800244 	movi	r2,9
20022264:	14fc7b36 	bltu	r2,r19,20021454 <__alt_data_end+0xfffe2054>
20022268:	d8c02817 	ldw	r3,160(sp)
2002226c:	dc001dc4 	addi	r16,sp,119
20022270:	9cc00c04 	addi	r19,r19,48
20022274:	1c07c83a 	sub	r3,r3,r16
20022278:	dcc01dc5 	stb	r19,119(sp)
2002227c:	d8c02e15 	stw	r3,184(sp)
20022280:	003ce806 	br	20021624 <__alt_data_end+0xfffe2224>
20022284:	d8803317 	ldw	r2,204(sp)
20022288:	143fffc4 	addi	r16,r2,-1
2002228c:	043f4d0e 	bge	zero,r16,20021fc4 <__alt_data_end+0xfffe2bc4>
20022290:	07000404 	movi	fp,16
20022294:	e400810e 	bge	fp,r16,2002249c <___vfprintf_internal_r+0x1594>
20022298:	014800f4 	movhi	r5,8195
2002229c:	297fa184 	addi	r5,r5,-378
200222a0:	d9402b15 	stw	r5,172(sp)
200222a4:	01c001c4 	movi	r7,7
200222a8:	dcc02c17 	ldw	r19,176(sp)
200222ac:	00000306 	br	200222bc <___vfprintf_internal_r+0x13b4>
200222b0:	b5800204 	addi	r22,r22,8
200222b4:	843ffc04 	addi	r16,r16,-16
200222b8:	e4007b0e 	bge	fp,r16,200224a8 <___vfprintf_internal_r+0x15a0>
200222bc:	18c00404 	addi	r3,r3,16
200222c0:	8c400044 	addi	r17,r17,1
200222c4:	b5000015 	stw	r20,0(r22)
200222c8:	b7000115 	stw	fp,4(r22)
200222cc:	d8c02015 	stw	r3,128(sp)
200222d0:	dc401f15 	stw	r17,124(sp)
200222d4:	3c7ff60e 	bge	r7,r17,200222b0 <__alt_data_end+0xfffe2eb0>
200222d8:	d9801e04 	addi	r6,sp,120
200222dc:	b80b883a 	mov	r5,r23
200222e0:	9809883a 	mov	r4,r19
200222e4:	d9c03c15 	stw	r7,240(sp)
200222e8:	00285240 	call	20028524 <__sprint_r>
200222ec:	d9c03c17 	ldw	r7,240(sp)
200222f0:	103c071e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
200222f4:	d8c02017 	ldw	r3,128(sp)
200222f8:	dc401f17 	ldw	r17,124(sp)
200222fc:	dd800404 	addi	r22,sp,16
20022300:	003fec06 	br	200222b4 <__alt_data_end+0xfffe2eb4>
20022304:	9080100c 	andi	r2,r18,64
20022308:	d8002785 	stb	zero,158(sp)
2002230c:	10010e26 	beq	r2,zero,20022748 <___vfprintf_internal_r+0x1840>
20022310:	d9002d17 	ldw	r4,180(sp)
20022314:	d9402917 	ldw	r5,164(sp)
20022318:	002d883a 	mov	r22,zero
2002231c:	20800104 	addi	r2,r4,4
20022320:	24c0000b 	ldhu	r19,0(r4)
20022324:	283fc90e 	bge	r5,zero,2002224c <__alt_data_end+0xfffe2e4c>
20022328:	d8802d15 	stw	r2,180(sp)
2002232c:	0039883a 	mov	fp,zero
20022330:	9d84b03a 	or	r2,r19,r22
20022334:	103c461e 	bne	r2,zero,20021450 <__alt_data_end+0xfffe2050>
20022338:	00800044 	movi	r2,1
2002233c:	003e6c06 	br	20021cf0 <__alt_data_end+0xfffe28f0>
20022340:	d9002c17 	ldw	r4,176(sp)
20022344:	d9801e04 	addi	r6,sp,120
20022348:	b80b883a 	mov	r5,r23
2002234c:	00285240 	call	20028524 <__sprint_r>
20022350:	103bef1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022354:	d8c02017 	ldw	r3,128(sp)
20022358:	da000404 	addi	r8,sp,16
2002235c:	d9003217 	ldw	r4,200(sp)
20022360:	d8802617 	ldw	r2,152(sp)
20022364:	d9403317 	ldw	r5,204(sp)
20022368:	8123883a 	add	r17,r16,r4
2002236c:	11400216 	blt	r2,r5,20022378 <___vfprintf_internal_r+0x1470>
20022370:	9100004c 	andi	r4,r18,1
20022374:	20000d26 	beq	r4,zero,200223ac <___vfprintf_internal_r+0x14a4>
20022378:	d9003717 	ldw	r4,220(sp)
2002237c:	d9403417 	ldw	r5,208(sp)
20022380:	1907883a 	add	r3,r3,r4
20022384:	d9001f17 	ldw	r4,124(sp)
20022388:	41400015 	stw	r5,0(r8)
2002238c:	d9403717 	ldw	r5,220(sp)
20022390:	21000044 	addi	r4,r4,1
20022394:	d8c02015 	stw	r3,128(sp)
20022398:	41400115 	stw	r5,4(r8)
2002239c:	d9001f15 	stw	r4,124(sp)
200223a0:	014001c4 	movi	r5,7
200223a4:	2901e816 	blt	r5,r4,20022b48 <___vfprintf_internal_r+0x1c40>
200223a8:	42000204 	addi	r8,r8,8
200223ac:	d9003317 	ldw	r4,204(sp)
200223b0:	8121883a 	add	r16,r16,r4
200223b4:	2085c83a 	sub	r2,r4,r2
200223b8:	8461c83a 	sub	r16,r16,r17
200223bc:	1400010e 	bge	r2,r16,200223c4 <___vfprintf_internal_r+0x14bc>
200223c0:	1021883a 	mov	r16,r2
200223c4:	04000a0e 	bge	zero,r16,200223f0 <___vfprintf_internal_r+0x14e8>
200223c8:	d9001f17 	ldw	r4,124(sp)
200223cc:	1c07883a 	add	r3,r3,r16
200223d0:	44400015 	stw	r17,0(r8)
200223d4:	21000044 	addi	r4,r4,1
200223d8:	44000115 	stw	r16,4(r8)
200223dc:	d8c02015 	stw	r3,128(sp)
200223e0:	d9001f15 	stw	r4,124(sp)
200223e4:	014001c4 	movi	r5,7
200223e8:	2901fb16 	blt	r5,r4,20022bd8 <___vfprintf_internal_r+0x1cd0>
200223ec:	42000204 	addi	r8,r8,8
200223f0:	8001f716 	blt	r16,zero,20022bd0 <___vfprintf_internal_r+0x1cc8>
200223f4:	1421c83a 	sub	r16,r2,r16
200223f8:	043d380e 	bge	zero,r16,200218dc <__alt_data_end+0xfffe24dc>
200223fc:	04400404 	movi	r17,16
20022400:	d8801f17 	ldw	r2,124(sp)
20022404:	8c3efb0e 	bge	r17,r16,20021ff4 <__alt_data_end+0xfffe2bf4>
20022408:	014800f4 	movhi	r5,8195
2002240c:	297fa184 	addi	r5,r5,-378
20022410:	d9402b15 	stw	r5,172(sp)
20022414:	058001c4 	movi	r22,7
20022418:	dcc02c17 	ldw	r19,176(sp)
2002241c:	00000306 	br	2002242c <___vfprintf_internal_r+0x1524>
20022420:	42000204 	addi	r8,r8,8
20022424:	843ffc04 	addi	r16,r16,-16
20022428:	8c3ef50e 	bge	r17,r16,20022000 <__alt_data_end+0xfffe2c00>
2002242c:	18c00404 	addi	r3,r3,16
20022430:	10800044 	addi	r2,r2,1
20022434:	45000015 	stw	r20,0(r8)
20022438:	44400115 	stw	r17,4(r8)
2002243c:	d8c02015 	stw	r3,128(sp)
20022440:	d8801f15 	stw	r2,124(sp)
20022444:	b0bff60e 	bge	r22,r2,20022420 <__alt_data_end+0xfffe3020>
20022448:	d9801e04 	addi	r6,sp,120
2002244c:	b80b883a 	mov	r5,r23
20022450:	9809883a 	mov	r4,r19
20022454:	00285240 	call	20028524 <__sprint_r>
20022458:	103bad1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
2002245c:	d8c02017 	ldw	r3,128(sp)
20022460:	d8801f17 	ldw	r2,124(sp)
20022464:	da000404 	addi	r8,sp,16
20022468:	003fee06 	br	20022424 <__alt_data_end+0xfffe3024>
2002246c:	9088703a 	and	r4,r18,r2
20022470:	203eab1e 	bne	r4,zero,20021f20 <__alt_data_end+0xfffe2b20>
20022474:	dc401f17 	ldw	r17,124(sp)
20022478:	40800115 	stw	r2,4(r8)
2002247c:	44000015 	stw	r16,0(r8)
20022480:	8c400044 	addi	r17,r17,1
20022484:	d8c02015 	stw	r3,128(sp)
20022488:	dc401f15 	stw	r17,124(sp)
2002248c:	008001c4 	movi	r2,7
20022490:	14400e16 	blt	r2,r17,200224cc <___vfprintf_internal_r+0x15c4>
20022494:	45800204 	addi	r22,r8,8
20022498:	003eca06 	br	20021fc4 <__alt_data_end+0xfffe2bc4>
2002249c:	010800f4 	movhi	r4,8195
200224a0:	213fa184 	addi	r4,r4,-378
200224a4:	d9002b15 	stw	r4,172(sp)
200224a8:	d8802b17 	ldw	r2,172(sp)
200224ac:	1c07883a 	add	r3,r3,r16
200224b0:	8c400044 	addi	r17,r17,1
200224b4:	b0800015 	stw	r2,0(r22)
200224b8:	b4000115 	stw	r16,4(r22)
200224bc:	d8c02015 	stw	r3,128(sp)
200224c0:	dc401f15 	stw	r17,124(sp)
200224c4:	008001c4 	movi	r2,7
200224c8:	147ebd0e 	bge	r2,r17,20021fc0 <__alt_data_end+0xfffe2bc0>
200224cc:	d9002c17 	ldw	r4,176(sp)
200224d0:	d9801e04 	addi	r6,sp,120
200224d4:	b80b883a 	mov	r5,r23
200224d8:	00285240 	call	20028524 <__sprint_r>
200224dc:	103b8c1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
200224e0:	d8c02017 	ldw	r3,128(sp)
200224e4:	dc401f17 	ldw	r17,124(sp)
200224e8:	dd800404 	addi	r22,sp,16
200224ec:	003eb506 	br	20021fc4 <__alt_data_end+0xfffe2bc4>
200224f0:	d9002c17 	ldw	r4,176(sp)
200224f4:	d9801e04 	addi	r6,sp,120
200224f8:	b80b883a 	mov	r5,r23
200224fc:	00285240 	call	20028524 <__sprint_r>
20022500:	103b831e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022504:	d8c02017 	ldw	r3,128(sp)
20022508:	dc401f17 	ldw	r17,124(sp)
2002250c:	da000404 	addi	r8,sp,16
20022510:	003e8d06 	br	20021f48 <__alt_data_end+0xfffe2b48>
20022514:	d9002c17 	ldw	r4,176(sp)
20022518:	d9801e04 	addi	r6,sp,120
2002251c:	b80b883a 	mov	r5,r23
20022520:	00285240 	call	20028524 <__sprint_r>
20022524:	103b7a1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022528:	d8c02017 	ldw	r3,128(sp)
2002252c:	dc401f17 	ldw	r17,124(sp)
20022530:	dd800404 	addi	r22,sp,16
20022534:	003e8f06 	br	20021f74 <__alt_data_end+0xfffe2b74>
20022538:	0027883a 	mov	r19,zero
2002253c:	003f4a06 	br	20022268 <__alt_data_end+0xfffe2e68>
20022540:	d9002c17 	ldw	r4,176(sp)
20022544:	d9801e04 	addi	r6,sp,120
20022548:	b80b883a 	mov	r5,r23
2002254c:	00285240 	call	20028524 <__sprint_r>
20022550:	103b6f1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022554:	d8c02017 	ldw	r3,128(sp)
20022558:	da000404 	addi	r8,sp,16
2002255c:	003c9d06 	br	200217d4 <__alt_data_end+0xfffe23d4>
20022560:	04e7c83a 	sub	r19,zero,r19
20022564:	9804c03a 	cmpne	r2,r19,zero
20022568:	05adc83a 	sub	r22,zero,r22
2002256c:	b0adc83a 	sub	r22,r22,r2
20022570:	d8802917 	ldw	r2,164(sp)
20022574:	07000b44 	movi	fp,45
20022578:	df002785 	stb	fp,158(sp)
2002257c:	10017b16 	blt	r2,zero,20022b6c <___vfprintf_internal_r+0x1c64>
20022580:	00bfdfc4 	movi	r2,-129
20022584:	90a4703a 	and	r18,r18,r2
20022588:	003bb106 	br	20021450 <__alt_data_end+0xfffe2050>
2002258c:	d9003617 	ldw	r4,216(sp)
20022590:	d9403817 	ldw	r5,224(sp)
20022594:	da003d15 	stw	r8,244(sp)
20022598:	00281480 	call	20028148 <__fpclassifyd>
2002259c:	da003d17 	ldw	r8,244(sp)
200225a0:	1000f026 	beq	r2,zero,20022964 <___vfprintf_internal_r+0x1a5c>
200225a4:	d9002917 	ldw	r4,164(sp)
200225a8:	05bff7c4 	movi	r22,-33
200225ac:	00bfffc4 	movi	r2,-1
200225b0:	8dac703a 	and	r22,r17,r22
200225b4:	20820026 	beq	r4,r2,20022db8 <___vfprintf_internal_r+0x1eb0>
200225b8:	008011c4 	movi	r2,71
200225bc:	b081f726 	beq	r22,r2,20022d9c <___vfprintf_internal_r+0x1e94>
200225c0:	d9003817 	ldw	r4,224(sp)
200225c4:	90c04014 	ori	r3,r18,256
200225c8:	d8c02b15 	stw	r3,172(sp)
200225cc:	20021516 	blt	r4,zero,20022e24 <___vfprintf_internal_r+0x1f1c>
200225d0:	dcc03817 	ldw	r19,224(sp)
200225d4:	d8002a05 	stb	zero,168(sp)
200225d8:	00801984 	movi	r2,102
200225dc:	8881f926 	beq	r17,r2,20022dc4 <___vfprintf_internal_r+0x1ebc>
200225e0:	00801184 	movi	r2,70
200225e4:	88821c26 	beq	r17,r2,20022e58 <___vfprintf_internal_r+0x1f50>
200225e8:	00801144 	movi	r2,69
200225ec:	b081ef26 	beq	r22,r2,20022dac <___vfprintf_internal_r+0x1ea4>
200225f0:	d8c02917 	ldw	r3,164(sp)
200225f4:	d8802104 	addi	r2,sp,132
200225f8:	d8800315 	stw	r2,12(sp)
200225fc:	d9403617 	ldw	r5,216(sp)
20022600:	d8802504 	addi	r2,sp,148
20022604:	d9002c17 	ldw	r4,176(sp)
20022608:	d8800215 	stw	r2,8(sp)
2002260c:	d8802604 	addi	r2,sp,152
20022610:	d8c00015 	stw	r3,0(sp)
20022614:	d8800115 	stw	r2,4(sp)
20022618:	01c00084 	movi	r7,2
2002261c:	980d883a 	mov	r6,r19
20022620:	d8c03c15 	stw	r3,240(sp)
20022624:	da003d15 	stw	r8,244(sp)
20022628:	002352c0 	call	2002352c <_dtoa_r>
2002262c:	1021883a 	mov	r16,r2
20022630:	008019c4 	movi	r2,103
20022634:	d8c03c17 	ldw	r3,240(sp)
20022638:	da003d17 	ldw	r8,244(sp)
2002263c:	88817126 	beq	r17,r2,20022c04 <___vfprintf_internal_r+0x1cfc>
20022640:	008011c4 	movi	r2,71
20022644:	88829226 	beq	r17,r2,20023090 <___vfprintf_internal_r+0x2188>
20022648:	80f9883a 	add	fp,r16,r3
2002264c:	d9003617 	ldw	r4,216(sp)
20022650:	000d883a 	mov	r6,zero
20022654:	000f883a 	mov	r7,zero
20022658:	980b883a 	mov	r5,r19
2002265c:	da003d15 	stw	r8,244(sp)
20022660:	002c0480 	call	2002c048 <__eqdf2>
20022664:	da003d17 	ldw	r8,244(sp)
20022668:	10018d26 	beq	r2,zero,20022ca0 <___vfprintf_internal_r+0x1d98>
2002266c:	d8802117 	ldw	r2,132(sp)
20022670:	1700062e 	bgeu	r2,fp,2002268c <___vfprintf_internal_r+0x1784>
20022674:	01000c04 	movi	r4,48
20022678:	10c00044 	addi	r3,r2,1
2002267c:	d8c02115 	stw	r3,132(sp)
20022680:	11000005 	stb	r4,0(r2)
20022684:	d8802117 	ldw	r2,132(sp)
20022688:	173ffb36 	bltu	r2,fp,20022678 <__alt_data_end+0xfffe3278>
2002268c:	1405c83a 	sub	r2,r2,r16
20022690:	d8803315 	stw	r2,204(sp)
20022694:	008011c4 	movi	r2,71
20022698:	b0817626 	beq	r22,r2,20022c74 <___vfprintf_internal_r+0x1d6c>
2002269c:	00801944 	movi	r2,101
200226a0:	1442810e 	bge	r2,r17,200230a8 <___vfprintf_internal_r+0x21a0>
200226a4:	d8c02617 	ldw	r3,152(sp)
200226a8:	00801984 	movi	r2,102
200226ac:	d8c03215 	stw	r3,200(sp)
200226b0:	8881fe26 	beq	r17,r2,20022eac <___vfprintf_internal_r+0x1fa4>
200226b4:	d8c03217 	ldw	r3,200(sp)
200226b8:	d9003317 	ldw	r4,204(sp)
200226bc:	1901dd16 	blt	r3,r4,20022e34 <___vfprintf_internal_r+0x1f2c>
200226c0:	9480004c 	andi	r18,r18,1
200226c4:	90022b1e 	bne	r18,zero,20022f74 <___vfprintf_internal_r+0x206c>
200226c8:	1805883a 	mov	r2,r3
200226cc:	18028016 	blt	r3,zero,200230d0 <___vfprintf_internal_r+0x21c8>
200226d0:	d8c03217 	ldw	r3,200(sp)
200226d4:	044019c4 	movi	r17,103
200226d8:	d8c02e15 	stw	r3,184(sp)
200226dc:	df002a07 	ldb	fp,168(sp)
200226e0:	e001531e 	bne	fp,zero,20022c30 <___vfprintf_internal_r+0x1d28>
200226e4:	df002783 	ldbu	fp,158(sp)
200226e8:	d8802a15 	stw	r2,168(sp)
200226ec:	dc802b17 	ldw	r18,172(sp)
200226f0:	d8002915 	stw	zero,164(sp)
200226f4:	003bd106 	br	2002163c <__alt_data_end+0xfffe223c>
200226f8:	d8802d17 	ldw	r2,180(sp)
200226fc:	d8c02d17 	ldw	r3,180(sp)
20022700:	d9002d17 	ldw	r4,180(sp)
20022704:	10800017 	ldw	r2,0(r2)
20022708:	18c00117 	ldw	r3,4(r3)
2002270c:	21000204 	addi	r4,r4,8
20022710:	d8803615 	stw	r2,216(sp)
20022714:	d8c03815 	stw	r3,224(sp)
20022718:	d9002d15 	stw	r4,180(sp)
2002271c:	003b7506 	br	200214f4 <__alt_data_end+0xfffe20f4>
20022720:	ac400007 	ldb	r17,0(r21)
20022724:	003a5906 	br	2002108c <__alt_data_end+0xfffe1c8c>
20022728:	9080100c 	andi	r2,r18,64
2002272c:	1000a826 	beq	r2,zero,200229d0 <___vfprintf_internal_r+0x1ac8>
20022730:	d9002d17 	ldw	r4,180(sp)
20022734:	002d883a 	mov	r22,zero
20022738:	24c0000b 	ldhu	r19,0(r4)
2002273c:	21000104 	addi	r4,r4,4
20022740:	d9002d15 	stw	r4,180(sp)
20022744:	003ccb06 	br	20021a74 <__alt_data_end+0xfffe2674>
20022748:	d8c02d17 	ldw	r3,180(sp)
2002274c:	d9002917 	ldw	r4,164(sp)
20022750:	002d883a 	mov	r22,zero
20022754:	18800104 	addi	r2,r3,4
20022758:	1cc00017 	ldw	r19,0(r3)
2002275c:	203ebb0e 	bge	r4,zero,2002224c <__alt_data_end+0xfffe2e4c>
20022760:	003ef106 	br	20022328 <__alt_data_end+0xfffe2f28>
20022764:	9080040c 	andi	r2,r18,16
20022768:	1000921e 	bne	r2,zero,200229b4 <___vfprintf_internal_r+0x1aac>
2002276c:	9480100c 	andi	r18,r18,64
20022770:	90013926 	beq	r18,zero,20022c58 <___vfprintf_internal_r+0x1d50>
20022774:	d9002d17 	ldw	r4,180(sp)
20022778:	d9402f17 	ldw	r5,188(sp)
2002277c:	20800017 	ldw	r2,0(r4)
20022780:	21000104 	addi	r4,r4,4
20022784:	d9002d15 	stw	r4,180(sp)
20022788:	1140000d 	sth	r5,0(r2)
2002278c:	003a1606 	br	20020fe8 <__alt_data_end+0xfffe1be8>
20022790:	9080100c 	andi	r2,r18,64
20022794:	10008026 	beq	r2,zero,20022998 <___vfprintf_internal_r+0x1a90>
20022798:	d8c02d17 	ldw	r3,180(sp)
2002279c:	1cc0000f 	ldh	r19,0(r3)
200227a0:	18c00104 	addi	r3,r3,4
200227a4:	d8c02d15 	stw	r3,180(sp)
200227a8:	982dd7fa 	srai	r22,r19,31
200227ac:	b005883a 	mov	r2,r22
200227b0:	003b1f06 	br	20021430 <__alt_data_end+0xfffe2030>
200227b4:	9080100c 	andi	r2,r18,64
200227b8:	d8002785 	stb	zero,158(sp)
200227bc:	10008a1e 	bne	r2,zero,200229e8 <___vfprintf_internal_r+0x1ae0>
200227c0:	d9402d17 	ldw	r5,180(sp)
200227c4:	d8c02917 	ldw	r3,164(sp)
200227c8:	002d883a 	mov	r22,zero
200227cc:	28800104 	addi	r2,r5,4
200227d0:	2cc00017 	ldw	r19,0(r5)
200227d4:	183e4b0e 	bge	r3,zero,20022104 <__alt_data_end+0xfffe2d04>
200227d8:	9d86b03a 	or	r3,r19,r22
200227dc:	d8802d15 	stw	r2,180(sp)
200227e0:	183e4c1e 	bne	r3,zero,20022114 <__alt_data_end+0xfffe2d14>
200227e4:	0039883a 	mov	fp,zero
200227e8:	0005883a 	mov	r2,zero
200227ec:	003d4006 	br	20021cf0 <__alt_data_end+0xfffe28f0>
200227f0:	014800f4 	movhi	r5,8195
200227f4:	297fa184 	addi	r5,r5,-378
200227f8:	d9402b15 	stw	r5,172(sp)
200227fc:	d9402b17 	ldw	r5,172(sp)
20022800:	1c47883a 	add	r3,r3,r17
20022804:	10800044 	addi	r2,r2,1
20022808:	41400015 	stw	r5,0(r8)
2002280c:	44400115 	stw	r17,4(r8)
20022810:	d8c02015 	stw	r3,128(sp)
20022814:	d8801f15 	stw	r2,124(sp)
20022818:	010001c4 	movi	r4,7
2002281c:	20bec816 	blt	r4,r2,20022340 <__alt_data_end+0xfffe2f40>
20022820:	42000204 	addi	r8,r8,8
20022824:	003ecd06 	br	2002235c <__alt_data_end+0xfffe2f5c>
20022828:	d9002917 	ldw	r4,164(sp)
2002282c:	d8002785 	stb	zero,158(sp)
20022830:	203d2d16 	blt	r4,zero,20021ce8 <__alt_data_end+0xfffe28e8>
20022834:	00bfdfc4 	movi	r2,-129
20022838:	90a4703a 	and	r18,r18,r2
2002283c:	003a9106 	br	20021284 <__alt_data_end+0xfffe1e84>
20022840:	010800f4 	movhi	r4,8195
20022844:	213fa184 	addi	r4,r4,-378
20022848:	d9002b15 	stw	r4,172(sp)
2002284c:	003c0c06 	br	20021880 <__alt_data_end+0xfffe2480>
20022850:	d9002c17 	ldw	r4,176(sp)
20022854:	d9801e04 	addi	r6,sp,120
20022858:	b80b883a 	mov	r5,r23
2002285c:	00285240 	call	20028524 <__sprint_r>
20022860:	103aab1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022864:	d8c02017 	ldw	r3,128(sp)
20022868:	da000404 	addi	r8,sp,16
2002286c:	003d4106 	br	20021d74 <__alt_data_end+0xfffe2974>
20022870:	d8801f17 	ldw	r2,124(sp)
20022874:	014800f4 	movhi	r5,8195
20022878:	01000044 	movi	r4,1
2002287c:	18c00044 	addi	r3,r3,1
20022880:	10800044 	addi	r2,r2,1
20022884:	297fa104 	addi	r5,r5,-380
20022888:	41000115 	stw	r4,4(r8)
2002288c:	41400015 	stw	r5,0(r8)
20022890:	d8c02015 	stw	r3,128(sp)
20022894:	d8801f15 	stw	r2,124(sp)
20022898:	010001c4 	movi	r4,7
2002289c:	20805c16 	blt	r4,r2,20022a10 <___vfprintf_internal_r+0x1b08>
200228a0:	42000204 	addi	r8,r8,8
200228a4:	8800041e 	bne	r17,zero,200228b8 <___vfprintf_internal_r+0x19b0>
200228a8:	d8803317 	ldw	r2,204(sp)
200228ac:	1000021e 	bne	r2,zero,200228b8 <___vfprintf_internal_r+0x19b0>
200228b0:	9080004c 	andi	r2,r18,1
200228b4:	103c0926 	beq	r2,zero,200218dc <__alt_data_end+0xfffe24dc>
200228b8:	d9003717 	ldw	r4,220(sp)
200228bc:	d8801f17 	ldw	r2,124(sp)
200228c0:	d9403417 	ldw	r5,208(sp)
200228c4:	20c7883a 	add	r3,r4,r3
200228c8:	10800044 	addi	r2,r2,1
200228cc:	41000115 	stw	r4,4(r8)
200228d0:	41400015 	stw	r5,0(r8)
200228d4:	d8c02015 	stw	r3,128(sp)
200228d8:	d8801f15 	stw	r2,124(sp)
200228dc:	010001c4 	movi	r4,7
200228e0:	20812116 	blt	r4,r2,20022d68 <___vfprintf_internal_r+0x1e60>
200228e4:	42000204 	addi	r8,r8,8
200228e8:	0463c83a 	sub	r17,zero,r17
200228ec:	0440730e 	bge	zero,r17,20022abc <___vfprintf_internal_r+0x1bb4>
200228f0:	05800404 	movi	r22,16
200228f4:	b440860e 	bge	r22,r17,20022b10 <___vfprintf_internal_r+0x1c08>
200228f8:	014800f4 	movhi	r5,8195
200228fc:	297fa184 	addi	r5,r5,-378
20022900:	d9402b15 	stw	r5,172(sp)
20022904:	070001c4 	movi	fp,7
20022908:	dcc02c17 	ldw	r19,176(sp)
2002290c:	00000306 	br	2002291c <___vfprintf_internal_r+0x1a14>
20022910:	42000204 	addi	r8,r8,8
20022914:	8c7ffc04 	addi	r17,r17,-16
20022918:	b440800e 	bge	r22,r17,20022b1c <___vfprintf_internal_r+0x1c14>
2002291c:	18c00404 	addi	r3,r3,16
20022920:	10800044 	addi	r2,r2,1
20022924:	45000015 	stw	r20,0(r8)
20022928:	45800115 	stw	r22,4(r8)
2002292c:	d8c02015 	stw	r3,128(sp)
20022930:	d8801f15 	stw	r2,124(sp)
20022934:	e0bff60e 	bge	fp,r2,20022910 <__alt_data_end+0xfffe3510>
20022938:	d9801e04 	addi	r6,sp,120
2002293c:	b80b883a 	mov	r5,r23
20022940:	9809883a 	mov	r4,r19
20022944:	00285240 	call	20028524 <__sprint_r>
20022948:	103a711e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
2002294c:	d8c02017 	ldw	r3,128(sp)
20022950:	d8801f17 	ldw	r2,124(sp)
20022954:	da000404 	addi	r8,sp,16
20022958:	003fee06 	br	20022914 <__alt_data_end+0xfffe3514>
2002295c:	00bfffc4 	movi	r2,-1
20022960:	003a6f06 	br	20021320 <__alt_data_end+0xfffe1f20>
20022964:	008011c4 	movi	r2,71
20022968:	1440b816 	blt	r2,r17,20022c4c <___vfprintf_internal_r+0x1d44>
2002296c:	040800f4 	movhi	r16,8195
20022970:	843f9304 	addi	r16,r16,-436
20022974:	00c000c4 	movi	r3,3
20022978:	00bfdfc4 	movi	r2,-129
2002297c:	d8c02a15 	stw	r3,168(sp)
20022980:	90a4703a 	and	r18,r18,r2
20022984:	df002783 	ldbu	fp,158(sp)
20022988:	d8c02e15 	stw	r3,184(sp)
2002298c:	d8002915 	stw	zero,164(sp)
20022990:	d8003215 	stw	zero,200(sp)
20022994:	003b2906 	br	2002163c <__alt_data_end+0xfffe223c>
20022998:	d9002d17 	ldw	r4,180(sp)
2002299c:	24c00017 	ldw	r19,0(r4)
200229a0:	21000104 	addi	r4,r4,4
200229a4:	d9002d15 	stw	r4,180(sp)
200229a8:	982dd7fa 	srai	r22,r19,31
200229ac:	b005883a 	mov	r2,r22
200229b0:	003a9f06 	br	20021430 <__alt_data_end+0xfffe2030>
200229b4:	d9402d17 	ldw	r5,180(sp)
200229b8:	d8c02f17 	ldw	r3,188(sp)
200229bc:	28800017 	ldw	r2,0(r5)
200229c0:	29400104 	addi	r5,r5,4
200229c4:	d9402d15 	stw	r5,180(sp)
200229c8:	10c00015 	stw	r3,0(r2)
200229cc:	00398606 	br	20020fe8 <__alt_data_end+0xfffe1be8>
200229d0:	d9402d17 	ldw	r5,180(sp)
200229d4:	002d883a 	mov	r22,zero
200229d8:	2cc00017 	ldw	r19,0(r5)
200229dc:	29400104 	addi	r5,r5,4
200229e0:	d9402d15 	stw	r5,180(sp)
200229e4:	003c2306 	br	20021a74 <__alt_data_end+0xfffe2674>
200229e8:	d8c02d17 	ldw	r3,180(sp)
200229ec:	d9002917 	ldw	r4,164(sp)
200229f0:	002d883a 	mov	r22,zero
200229f4:	18800104 	addi	r2,r3,4
200229f8:	1cc0000b 	ldhu	r19,0(r3)
200229fc:	203dc10e 	bge	r4,zero,20022104 <__alt_data_end+0xfffe2d04>
20022a00:	003f7506 	br	200227d8 <__alt_data_end+0xfffe33d8>
20022a04:	040800f4 	movhi	r16,8195
20022a08:	843f9104 	addi	r16,r16,-444
20022a0c:	003acc06 	br	20021540 <__alt_data_end+0xfffe2140>
20022a10:	d9002c17 	ldw	r4,176(sp)
20022a14:	d9801e04 	addi	r6,sp,120
20022a18:	b80b883a 	mov	r5,r23
20022a1c:	00285240 	call	20028524 <__sprint_r>
20022a20:	103a3b1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022a24:	dc402617 	ldw	r17,152(sp)
20022a28:	d8c02017 	ldw	r3,128(sp)
20022a2c:	da000404 	addi	r8,sp,16
20022a30:	003f9c06 	br	200228a4 <__alt_data_end+0xfffe34a4>
20022a34:	ac400043 	ldbu	r17,1(r21)
20022a38:	94800814 	ori	r18,r18,32
20022a3c:	ad400044 	addi	r21,r21,1
20022a40:	8c403fcc 	andi	r17,r17,255
20022a44:	8c40201c 	xori	r17,r17,128
20022a48:	8c7fe004 	addi	r17,r17,-128
20022a4c:	00398f06 	br	2002108c <__alt_data_end+0xfffe1c8c>
20022a50:	d8c02d15 	stw	r3,180(sp)
20022a54:	0039883a 	mov	fp,zero
20022a58:	003e3506 	br	20022330 <__alt_data_end+0xfffe2f30>
20022a5c:	d9002c17 	ldw	r4,176(sp)
20022a60:	d9801e04 	addi	r6,sp,120
20022a64:	b80b883a 	mov	r5,r23
20022a68:	00285240 	call	20028524 <__sprint_r>
20022a6c:	103a281e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022a70:	d8c02017 	ldw	r3,128(sp)
20022a74:	da000404 	addi	r8,sp,16
20022a78:	003cd006 	br	20021dbc <__alt_data_end+0xfffe29bc>
20022a7c:	8009883a 	mov	r4,r16
20022a80:	da003d15 	stw	r8,244(sp)
20022a84:	0020e700 	call	20020e70 <strlen>
20022a88:	d8802e15 	stw	r2,184(sp)
20022a8c:	da003d17 	ldw	r8,244(sp)
20022a90:	103c340e 	bge	r2,zero,20021b64 <__alt_data_end+0xfffe2764>
20022a94:	0005883a 	mov	r2,zero
20022a98:	003c3206 	br	20021b64 <__alt_data_end+0xfffe2764>
20022a9c:	d9002c17 	ldw	r4,176(sp)
20022aa0:	d9801e04 	addi	r6,sp,120
20022aa4:	b80b883a 	mov	r5,r23
20022aa8:	00285240 	call	20028524 <__sprint_r>
20022aac:	103a181e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022ab0:	d8c02017 	ldw	r3,128(sp)
20022ab4:	d8801f17 	ldw	r2,124(sp)
20022ab8:	da000404 	addi	r8,sp,16
20022abc:	d9403317 	ldw	r5,204(sp)
20022ac0:	10800044 	addi	r2,r2,1
20022ac4:	44000015 	stw	r16,0(r8)
20022ac8:	28c7883a 	add	r3,r5,r3
20022acc:	003b7d06 	br	200218c4 <__alt_data_end+0xfffe24c4>
20022ad0:	010800f4 	movhi	r4,8195
20022ad4:	213fa584 	addi	r4,r4,-362
20022ad8:	d9003515 	stw	r4,212(sp)
20022adc:	003b1406 	br	20021730 <__alt_data_end+0xfffe2330>
20022ae0:	013fffc4 	movi	r4,-1
20022ae4:	003a3506 	br	200213bc <__alt_data_end+0xfffe1fbc>
20022ae8:	0023883a 	mov	r17,zero
20022aec:	003d9d06 	br	20022164 <__alt_data_end+0xfffe2d64>
20022af0:	d9002c17 	ldw	r4,176(sp)
20022af4:	d9801e04 	addi	r6,sp,120
20022af8:	b80b883a 	mov	r5,r23
20022afc:	00285240 	call	20028524 <__sprint_r>
20022b00:	103a031e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022b04:	d8c02017 	ldw	r3,128(sp)
20022b08:	da000404 	addi	r8,sp,16
20022b0c:	003d9406 	br	20022160 <__alt_data_end+0xfffe2d60>
20022b10:	010800f4 	movhi	r4,8195
20022b14:	213fa184 	addi	r4,r4,-378
20022b18:	d9002b15 	stw	r4,172(sp)
20022b1c:	d9002b17 	ldw	r4,172(sp)
20022b20:	1c47883a 	add	r3,r3,r17
20022b24:	10800044 	addi	r2,r2,1
20022b28:	41000015 	stw	r4,0(r8)
20022b2c:	44400115 	stw	r17,4(r8)
20022b30:	d8c02015 	stw	r3,128(sp)
20022b34:	d8801f15 	stw	r2,124(sp)
20022b38:	010001c4 	movi	r4,7
20022b3c:	20bfd716 	blt	r4,r2,20022a9c <__alt_data_end+0xfffe369c>
20022b40:	42000204 	addi	r8,r8,8
20022b44:	003fdd06 	br	20022abc <__alt_data_end+0xfffe36bc>
20022b48:	d9002c17 	ldw	r4,176(sp)
20022b4c:	d9801e04 	addi	r6,sp,120
20022b50:	b80b883a 	mov	r5,r23
20022b54:	00285240 	call	20028524 <__sprint_r>
20022b58:	1039ed1e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022b5c:	d8802617 	ldw	r2,152(sp)
20022b60:	d8c02017 	ldw	r3,128(sp)
20022b64:	da000404 	addi	r8,sp,16
20022b68:	003e1006 	br	200223ac <__alt_data_end+0xfffe2fac>
20022b6c:	00800044 	movi	r2,1
20022b70:	10803fcc 	andi	r2,r2,255
20022b74:	00c00044 	movi	r3,1
20022b78:	10fa3526 	beq	r2,r3,20021450 <__alt_data_end+0xfffe2050>
20022b7c:	00c00084 	movi	r3,2
20022b80:	10fbcb26 	beq	r2,r3,20021ab0 <__alt_data_end+0xfffe26b0>
20022b84:	003a8f06 	br	200215c4 <__alt_data_end+0xfffe21c4>
20022b88:	010800f4 	movhi	r4,8195
20022b8c:	213fa584 	addi	r4,r4,-362
20022b90:	d9003515 	stw	r4,212(sp)
20022b94:	003b7606 	br	20021970 <__alt_data_end+0xfffe2570>
20022b98:	d8802917 	ldw	r2,164(sp)
20022b9c:	00c00184 	movi	r3,6
20022ba0:	1880012e 	bgeu	r3,r2,20022ba8 <___vfprintf_internal_r+0x1ca0>
20022ba4:	1805883a 	mov	r2,r3
20022ba8:	d8802e15 	stw	r2,184(sp)
20022bac:	1000ef16 	blt	r2,zero,20022f6c <___vfprintf_internal_r+0x2064>
20022bb0:	040800f4 	movhi	r16,8195
20022bb4:	d8802a15 	stw	r2,168(sp)
20022bb8:	dcc02d15 	stw	r19,180(sp)
20022bbc:	d8002915 	stw	zero,164(sp)
20022bc0:	d8003215 	stw	zero,200(sp)
20022bc4:	843f9f04 	addi	r16,r16,-388
20022bc8:	0039883a 	mov	fp,zero
20022bcc:	003aa206 	br	20021658 <__alt_data_end+0xfffe2258>
20022bd0:	0021883a 	mov	r16,zero
20022bd4:	003e0706 	br	200223f4 <__alt_data_end+0xfffe2ff4>
20022bd8:	d9002c17 	ldw	r4,176(sp)
20022bdc:	d9801e04 	addi	r6,sp,120
20022be0:	b80b883a 	mov	r5,r23
20022be4:	00285240 	call	20028524 <__sprint_r>
20022be8:	1039c91e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022bec:	d8802617 	ldw	r2,152(sp)
20022bf0:	d9403317 	ldw	r5,204(sp)
20022bf4:	d8c02017 	ldw	r3,128(sp)
20022bf8:	da000404 	addi	r8,sp,16
20022bfc:	2885c83a 	sub	r2,r5,r2
20022c00:	003dfb06 	br	200223f0 <__alt_data_end+0xfffe2ff0>
20022c04:	9080004c 	andi	r2,r18,1
20022c08:	103e8f1e 	bne	r2,zero,20022648 <__alt_data_end+0xfffe3248>
20022c0c:	d8802117 	ldw	r2,132(sp)
20022c10:	003e9e06 	br	2002268c <__alt_data_end+0xfffe328c>
20022c14:	1025883a 	mov	r18,r2
20022c18:	0039883a 	mov	fp,zero
20022c1c:	00800084 	movi	r2,2
20022c20:	003fd306 	br	20022b70 <__alt_data_end+0xfffe3770>
20022c24:	07000b44 	movi	fp,45
20022c28:	df002785 	stb	fp,158(sp)
20022c2c:	003a4006 	br	20021530 <__alt_data_end+0xfffe2130>
20022c30:	00c00b44 	movi	r3,45
20022c34:	d8c02785 	stb	r3,158(sp)
20022c38:	d8802a15 	stw	r2,168(sp)
20022c3c:	dc802b17 	ldw	r18,172(sp)
20022c40:	d8002915 	stw	zero,164(sp)
20022c44:	07000b44 	movi	fp,45
20022c48:	003a8006 	br	2002164c <__alt_data_end+0xfffe224c>
20022c4c:	040800f4 	movhi	r16,8195
20022c50:	843f9404 	addi	r16,r16,-432
20022c54:	003f4706 	br	20022974 <__alt_data_end+0xfffe3574>
20022c58:	d8c02d17 	ldw	r3,180(sp)
20022c5c:	d9002f17 	ldw	r4,188(sp)
20022c60:	18800017 	ldw	r2,0(r3)
20022c64:	18c00104 	addi	r3,r3,4
20022c68:	d8c02d15 	stw	r3,180(sp)
20022c6c:	11000015 	stw	r4,0(r2)
20022c70:	0038dd06 	br	20020fe8 <__alt_data_end+0xfffe1be8>
20022c74:	dd802617 	ldw	r22,152(sp)
20022c78:	00bfff44 	movi	r2,-3
20022c7c:	b0801c16 	blt	r22,r2,20022cf0 <___vfprintf_internal_r+0x1de8>
20022c80:	d9402917 	ldw	r5,164(sp)
20022c84:	2d801a16 	blt	r5,r22,20022cf0 <___vfprintf_internal_r+0x1de8>
20022c88:	dd803215 	stw	r22,200(sp)
20022c8c:	003e8906 	br	200226b4 <__alt_data_end+0xfffe32b4>
20022c90:	010800f4 	movhi	r4,8195
20022c94:	213fa184 	addi	r4,r4,-378
20022c98:	d9002b15 	stw	r4,172(sp)
20022c9c:	003c9106 	br	20021ee4 <__alt_data_end+0xfffe2ae4>
20022ca0:	e005883a 	mov	r2,fp
20022ca4:	003e7906 	br	2002268c <__alt_data_end+0xfffe328c>
20022ca8:	d9402917 	ldw	r5,164(sp)
20022cac:	df002783 	ldbu	fp,158(sp)
20022cb0:	dcc02d15 	stw	r19,180(sp)
20022cb4:	d9402a15 	stw	r5,168(sp)
20022cb8:	d9402e15 	stw	r5,184(sp)
20022cbc:	d8002915 	stw	zero,164(sp)
20022cc0:	d8003215 	stw	zero,200(sp)
20022cc4:	003a5d06 	br	2002163c <__alt_data_end+0xfffe223c>
20022cc8:	9080004c 	andi	r2,r18,1
20022ccc:	0039883a 	mov	fp,zero
20022cd0:	10000426 	beq	r2,zero,20022ce4 <___vfprintf_internal_r+0x1ddc>
20022cd4:	00800c04 	movi	r2,48
20022cd8:	dc001dc4 	addi	r16,sp,119
20022cdc:	d8801dc5 	stb	r2,119(sp)
20022ce0:	003b8006 	br	20021ae4 <__alt_data_end+0xfffe26e4>
20022ce4:	d8002e15 	stw	zero,184(sp)
20022ce8:	dc001e04 	addi	r16,sp,120
20022cec:	003a4d06 	br	20021624 <__alt_data_end+0xfffe2224>
20022cf0:	8c7fff84 	addi	r17,r17,-2
20022cf4:	b5bfffc4 	addi	r22,r22,-1
20022cf8:	dd802615 	stw	r22,152(sp)
20022cfc:	dc4022c5 	stb	r17,139(sp)
20022d00:	b000bf16 	blt	r22,zero,20023000 <___vfprintf_internal_r+0x20f8>
20022d04:	00800ac4 	movi	r2,43
20022d08:	d8802305 	stb	r2,140(sp)
20022d0c:	00800244 	movi	r2,9
20022d10:	15807016 	blt	r2,r22,20022ed4 <___vfprintf_internal_r+0x1fcc>
20022d14:	00800c04 	movi	r2,48
20022d18:	b5800c04 	addi	r22,r22,48
20022d1c:	d8802345 	stb	r2,141(sp)
20022d20:	dd802385 	stb	r22,142(sp)
20022d24:	d88023c4 	addi	r2,sp,143
20022d28:	df0022c4 	addi	fp,sp,139
20022d2c:	d8c03317 	ldw	r3,204(sp)
20022d30:	1739c83a 	sub	fp,r2,fp
20022d34:	d9003317 	ldw	r4,204(sp)
20022d38:	e0c7883a 	add	r3,fp,r3
20022d3c:	df003a15 	stw	fp,232(sp)
20022d40:	d8c02e15 	stw	r3,184(sp)
20022d44:	00800044 	movi	r2,1
20022d48:	1100b30e 	bge	r2,r4,20023018 <___vfprintf_internal_r+0x2110>
20022d4c:	d8c02e17 	ldw	r3,184(sp)
20022d50:	18c00044 	addi	r3,r3,1
20022d54:	d8c02e15 	stw	r3,184(sp)
20022d58:	1805883a 	mov	r2,r3
20022d5c:	1800ac16 	blt	r3,zero,20023010 <___vfprintf_internal_r+0x2108>
20022d60:	d8003215 	stw	zero,200(sp)
20022d64:	003e5d06 	br	200226dc <__alt_data_end+0xfffe32dc>
20022d68:	d9002c17 	ldw	r4,176(sp)
20022d6c:	d9801e04 	addi	r6,sp,120
20022d70:	b80b883a 	mov	r5,r23
20022d74:	00285240 	call	20028524 <__sprint_r>
20022d78:	1039651e 	bne	r2,zero,20021310 <__alt_data_end+0xfffe1f10>
20022d7c:	dc402617 	ldw	r17,152(sp)
20022d80:	d8c02017 	ldw	r3,128(sp)
20022d84:	d8801f17 	ldw	r2,124(sp)
20022d88:	da000404 	addi	r8,sp,16
20022d8c:	003ed606 	br	200228e8 <__alt_data_end+0xfffe34e8>
20022d90:	582b883a 	mov	r21,r11
20022d94:	d8002915 	stw	zero,164(sp)
20022d98:	0038bd06 	br	20021090 <__alt_data_end+0xfffe1c90>
20022d9c:	d8802917 	ldw	r2,164(sp)
20022da0:	103e071e 	bne	r2,zero,200225c0 <__alt_data_end+0xfffe31c0>
20022da4:	dc002915 	stw	r16,164(sp)
20022da8:	003e0506 	br	200225c0 <__alt_data_end+0xfffe31c0>
20022dac:	d9002917 	ldw	r4,164(sp)
20022db0:	20c00044 	addi	r3,r4,1
20022db4:	003e0f06 	br	200225f4 <__alt_data_end+0xfffe31f4>
20022db8:	01400184 	movi	r5,6
20022dbc:	d9402915 	stw	r5,164(sp)
20022dc0:	003dff06 	br	200225c0 <__alt_data_end+0xfffe31c0>
20022dc4:	d8802104 	addi	r2,sp,132
20022dc8:	d8800315 	stw	r2,12(sp)
20022dcc:	d8802504 	addi	r2,sp,148
20022dd0:	d8800215 	stw	r2,8(sp)
20022dd4:	d8802604 	addi	r2,sp,152
20022dd8:	d8800115 	stw	r2,4(sp)
20022ddc:	d8802917 	ldw	r2,164(sp)
20022de0:	d9403617 	ldw	r5,216(sp)
20022de4:	d9002c17 	ldw	r4,176(sp)
20022de8:	d8800015 	stw	r2,0(sp)
20022dec:	01c000c4 	movi	r7,3
20022df0:	980d883a 	mov	r6,r19
20022df4:	da003d15 	stw	r8,244(sp)
20022df8:	002352c0 	call	2002352c <_dtoa_r>
20022dfc:	d8c02917 	ldw	r3,164(sp)
20022e00:	da003d17 	ldw	r8,244(sp)
20022e04:	1021883a 	mov	r16,r2
20022e08:	10f9883a 	add	fp,r2,r3
20022e0c:	81000007 	ldb	r4,0(r16)
20022e10:	00800c04 	movi	r2,48
20022e14:	20805e26 	beq	r4,r2,20022f90 <___vfprintf_internal_r+0x2088>
20022e18:	d8c02617 	ldw	r3,152(sp)
20022e1c:	e0f9883a 	add	fp,fp,r3
20022e20:	003e0a06 	br	2002264c <__alt_data_end+0xfffe324c>
20022e24:	00c00b44 	movi	r3,45
20022e28:	24e0003c 	xorhi	r19,r4,32768
20022e2c:	d8c02a05 	stb	r3,168(sp)
20022e30:	003de906 	br	200225d8 <__alt_data_end+0xfffe31d8>
20022e34:	d8c03217 	ldw	r3,200(sp)
20022e38:	00c07a0e 	bge	zero,r3,20023024 <___vfprintf_internal_r+0x211c>
20022e3c:	00800044 	movi	r2,1
20022e40:	d9003317 	ldw	r4,204(sp)
20022e44:	1105883a 	add	r2,r2,r4
20022e48:	d8802e15 	stw	r2,184(sp)
20022e4c:	10004e16 	blt	r2,zero,20022f88 <___vfprintf_internal_r+0x2080>
20022e50:	044019c4 	movi	r17,103
20022e54:	003e2106 	br	200226dc <__alt_data_end+0xfffe32dc>
20022e58:	d9002917 	ldw	r4,164(sp)
20022e5c:	d8802104 	addi	r2,sp,132
20022e60:	d8800315 	stw	r2,12(sp)
20022e64:	d9000015 	stw	r4,0(sp)
20022e68:	d8802504 	addi	r2,sp,148
20022e6c:	d9403617 	ldw	r5,216(sp)
20022e70:	d9002c17 	ldw	r4,176(sp)
20022e74:	d8800215 	stw	r2,8(sp)
20022e78:	d8802604 	addi	r2,sp,152
20022e7c:	d8800115 	stw	r2,4(sp)
20022e80:	01c000c4 	movi	r7,3
20022e84:	980d883a 	mov	r6,r19
20022e88:	da003d15 	stw	r8,244(sp)
20022e8c:	002352c0 	call	2002352c <_dtoa_r>
20022e90:	d8c02917 	ldw	r3,164(sp)
20022e94:	da003d17 	ldw	r8,244(sp)
20022e98:	1021883a 	mov	r16,r2
20022e9c:	00801184 	movi	r2,70
20022ea0:	80f9883a 	add	fp,r16,r3
20022ea4:	88bfd926 	beq	r17,r2,20022e0c <__alt_data_end+0xfffe3a0c>
20022ea8:	003de806 	br	2002264c <__alt_data_end+0xfffe324c>
20022eac:	d9002917 	ldw	r4,164(sp)
20022eb0:	00c04d0e 	bge	zero,r3,20022fe8 <___vfprintf_internal_r+0x20e0>
20022eb4:	2000441e 	bne	r4,zero,20022fc8 <___vfprintf_internal_r+0x20c0>
20022eb8:	9480004c 	andi	r18,r18,1
20022ebc:	9000421e 	bne	r18,zero,20022fc8 <___vfprintf_internal_r+0x20c0>
20022ec0:	1805883a 	mov	r2,r3
20022ec4:	18007016 	blt	r3,zero,20023088 <___vfprintf_internal_r+0x2180>
20022ec8:	d8c03217 	ldw	r3,200(sp)
20022ecc:	d8c02e15 	stw	r3,184(sp)
20022ed0:	003e0206 	br	200226dc <__alt_data_end+0xfffe32dc>
20022ed4:	df0022c4 	addi	fp,sp,139
20022ed8:	dc002915 	stw	r16,164(sp)
20022edc:	4027883a 	mov	r19,r8
20022ee0:	e021883a 	mov	r16,fp
20022ee4:	b009883a 	mov	r4,r22
20022ee8:	01400284 	movi	r5,10
20022eec:	0020a1c0 	call	20020a1c <__modsi3>
20022ef0:	10800c04 	addi	r2,r2,48
20022ef4:	843fffc4 	addi	r16,r16,-1
20022ef8:	b009883a 	mov	r4,r22
20022efc:	01400284 	movi	r5,10
20022f00:	80800005 	stb	r2,0(r16)
20022f04:	00209980 	call	20020998 <__divsi3>
20022f08:	102d883a 	mov	r22,r2
20022f0c:	00800244 	movi	r2,9
20022f10:	15bff416 	blt	r2,r22,20022ee4 <__alt_data_end+0xfffe3ae4>
20022f14:	9811883a 	mov	r8,r19
20022f18:	b0800c04 	addi	r2,r22,48
20022f1c:	8027883a 	mov	r19,r16
20022f20:	997fffc4 	addi	r5,r19,-1
20022f24:	98bfffc5 	stb	r2,-1(r19)
20022f28:	dc002917 	ldw	r16,164(sp)
20022f2c:	2f006a2e 	bgeu	r5,fp,200230d8 <___vfprintf_internal_r+0x21d0>
20022f30:	d9c02384 	addi	r7,sp,142
20022f34:	3ccfc83a 	sub	r7,r7,r19
20022f38:	d9002344 	addi	r4,sp,141
20022f3c:	e1cf883a 	add	r7,fp,r7
20022f40:	00000106 	br	20022f48 <___vfprintf_internal_r+0x2040>
20022f44:	28800003 	ldbu	r2,0(r5)
20022f48:	20800005 	stb	r2,0(r4)
20022f4c:	21000044 	addi	r4,r4,1
20022f50:	29400044 	addi	r5,r5,1
20022f54:	393ffb1e 	bne	r7,r4,20022f44 <__alt_data_end+0xfffe3b44>
20022f58:	d8802304 	addi	r2,sp,140
20022f5c:	14c5c83a 	sub	r2,r2,r19
20022f60:	d8c02344 	addi	r3,sp,141
20022f64:	1885883a 	add	r2,r3,r2
20022f68:	003f7006 	br	20022d2c <__alt_data_end+0xfffe392c>
20022f6c:	0005883a 	mov	r2,zero
20022f70:	003f0f06 	br	20022bb0 <__alt_data_end+0xfffe37b0>
20022f74:	d8c03217 	ldw	r3,200(sp)
20022f78:	18c00044 	addi	r3,r3,1
20022f7c:	d8c02e15 	stw	r3,184(sp)
20022f80:	1805883a 	mov	r2,r3
20022f84:	183fb20e 	bge	r3,zero,20022e50 <__alt_data_end+0xfffe3a50>
20022f88:	0005883a 	mov	r2,zero
20022f8c:	003fb006 	br	20022e50 <__alt_data_end+0xfffe3a50>
20022f90:	d9003617 	ldw	r4,216(sp)
20022f94:	000d883a 	mov	r6,zero
20022f98:	000f883a 	mov	r7,zero
20022f9c:	980b883a 	mov	r5,r19
20022fa0:	d8c03c15 	stw	r3,240(sp)
20022fa4:	da003d15 	stw	r8,244(sp)
20022fa8:	002c0480 	call	2002c048 <__eqdf2>
20022fac:	d8c03c17 	ldw	r3,240(sp)
20022fb0:	da003d17 	ldw	r8,244(sp)
20022fb4:	103f9826 	beq	r2,zero,20022e18 <__alt_data_end+0xfffe3a18>
20022fb8:	00800044 	movi	r2,1
20022fbc:	10c7c83a 	sub	r3,r2,r3
20022fc0:	d8c02615 	stw	r3,152(sp)
20022fc4:	003f9506 	br	20022e1c <__alt_data_end+0xfffe3a1c>
20022fc8:	d9002917 	ldw	r4,164(sp)
20022fcc:	d8c03217 	ldw	r3,200(sp)
20022fd0:	20800044 	addi	r2,r4,1
20022fd4:	1885883a 	add	r2,r3,r2
20022fd8:	d8802e15 	stw	r2,184(sp)
20022fdc:	103dbf0e 	bge	r2,zero,200226dc <__alt_data_end+0xfffe32dc>
20022fe0:	0005883a 	mov	r2,zero
20022fe4:	003dbd06 	br	200226dc <__alt_data_end+0xfffe32dc>
20022fe8:	2000211e 	bne	r4,zero,20023070 <___vfprintf_internal_r+0x2168>
20022fec:	9480004c 	andi	r18,r18,1
20022ff0:	90001f1e 	bne	r18,zero,20023070 <___vfprintf_internal_r+0x2168>
20022ff4:	00800044 	movi	r2,1
20022ff8:	d8802e15 	stw	r2,184(sp)
20022ffc:	003db706 	br	200226dc <__alt_data_end+0xfffe32dc>
20023000:	00800b44 	movi	r2,45
20023004:	05adc83a 	sub	r22,zero,r22
20023008:	d8802305 	stb	r2,140(sp)
2002300c:	003f3f06 	br	20022d0c <__alt_data_end+0xfffe390c>
20023010:	0005883a 	mov	r2,zero
20023014:	003f5206 	br	20022d60 <__alt_data_end+0xfffe3960>
20023018:	90a4703a 	and	r18,r18,r2
2002301c:	903f4e26 	beq	r18,zero,20022d58 <__alt_data_end+0xfffe3958>
20023020:	003f4a06 	br	20022d4c <__alt_data_end+0xfffe394c>
20023024:	00800084 	movi	r2,2
20023028:	10c5c83a 	sub	r2,r2,r3
2002302c:	003f8406 	br	20022e40 <__alt_data_end+0xfffe3a40>
20023030:	d8802d17 	ldw	r2,180(sp)
20023034:	d9002d17 	ldw	r4,180(sp)
20023038:	ac400043 	ldbu	r17,1(r21)
2002303c:	10800017 	ldw	r2,0(r2)
20023040:	582b883a 	mov	r21,r11
20023044:	d8802915 	stw	r2,164(sp)
20023048:	20800104 	addi	r2,r4,4
2002304c:	d9002917 	ldw	r4,164(sp)
20023050:	d8802d15 	stw	r2,180(sp)
20023054:	203e7a0e 	bge	r4,zero,20022a40 <__alt_data_end+0xfffe3640>
20023058:	8c403fcc 	andi	r17,r17,255
2002305c:	00bfffc4 	movi	r2,-1
20023060:	8c40201c 	xori	r17,r17,128
20023064:	d8802915 	stw	r2,164(sp)
20023068:	8c7fe004 	addi	r17,r17,-128
2002306c:	00380706 	br	2002108c <__alt_data_end+0xfffe1c8c>
20023070:	d8c02917 	ldw	r3,164(sp)
20023074:	18c00084 	addi	r3,r3,2
20023078:	d8c02e15 	stw	r3,184(sp)
2002307c:	1805883a 	mov	r2,r3
20023080:	183d960e 	bge	r3,zero,200226dc <__alt_data_end+0xfffe32dc>
20023084:	003fd606 	br	20022fe0 <__alt_data_end+0xfffe3be0>
20023088:	0005883a 	mov	r2,zero
2002308c:	003f8e06 	br	20022ec8 <__alt_data_end+0xfffe3ac8>
20023090:	9080004c 	andi	r2,r18,1
20023094:	103f811e 	bne	r2,zero,20022e9c <__alt_data_end+0xfffe3a9c>
20023098:	d8802117 	ldw	r2,132(sp)
2002309c:	1405c83a 	sub	r2,r2,r16
200230a0:	d8803315 	stw	r2,204(sp)
200230a4:	b47ef326 	beq	r22,r17,20022c74 <__alt_data_end+0xfffe3874>
200230a8:	dd802617 	ldw	r22,152(sp)
200230ac:	003f1106 	br	20022cf4 <__alt_data_end+0xfffe38f4>
200230b0:	d9c02785 	stb	r7,158(sp)
200230b4:	00390406 	br	200214c8 <__alt_data_end+0xfffe20c8>
200230b8:	d9c02785 	stb	r7,158(sp)
200230bc:	0038d306 	br	2002140c <__alt_data_end+0xfffe200c>
200230c0:	d9c02785 	stb	r7,158(sp)
200230c4:	003a6106 	br	20021a4c <__alt_data_end+0xfffe264c>
200230c8:	d9c02785 	stb	r7,158(sp)
200230cc:	003af806 	br	20021cb0 <__alt_data_end+0xfffe28b0>
200230d0:	0005883a 	mov	r2,zero
200230d4:	003d7e06 	br	200226d0 <__alt_data_end+0xfffe32d0>
200230d8:	d8802344 	addi	r2,sp,141
200230dc:	003f1306 	br	20022d2c <__alt_data_end+0xfffe392c>
200230e0:	d9c02785 	stb	r7,158(sp)
200230e4:	00392306 	br	20021574 <__alt_data_end+0xfffe2174>
200230e8:	d9c02785 	stb	r7,158(sp)
200230ec:	003aa906 	br	20021b94 <__alt_data_end+0xfffe2794>
200230f0:	d9c02785 	stb	r7,158(sp)
200230f4:	003a3d06 	br	200219ec <__alt_data_end+0xfffe25ec>
200230f8:	d9c02785 	stb	r7,158(sp)
200230fc:	003aca06 	br	20021c28 <__alt_data_end+0xfffe2828>

20023100 <__vfprintf_internal>:
20023100:	008800f4 	movhi	r2,8195
20023104:	1086fa04 	addi	r2,r2,7144
20023108:	300f883a 	mov	r7,r6
2002310c:	280d883a 	mov	r6,r5
20023110:	200b883a 	mov	r5,r4
20023114:	11000017 	ldw	r4,0(r2)
20023118:	0020f081 	jmpi	20020f08 <___vfprintf_internal_r>

2002311c <__sbprintf>:
2002311c:	2880030b 	ldhu	r2,12(r5)
20023120:	2ac01917 	ldw	r11,100(r5)
20023124:	2a80038b 	ldhu	r10,14(r5)
20023128:	2a400717 	ldw	r9,28(r5)
2002312c:	2a000917 	ldw	r8,36(r5)
20023130:	defee204 	addi	sp,sp,-1144
20023134:	00c10004 	movi	r3,1024
20023138:	dc011a15 	stw	r16,1128(sp)
2002313c:	10bfff4c 	andi	r2,r2,65533
20023140:	2821883a 	mov	r16,r5
20023144:	d8cb883a 	add	r5,sp,r3
20023148:	dc811c15 	stw	r18,1136(sp)
2002314c:	dc411b15 	stw	r17,1132(sp)
20023150:	dfc11d15 	stw	ra,1140(sp)
20023154:	2025883a 	mov	r18,r4
20023158:	d881030d 	sth	r2,1036(sp)
2002315c:	dac11915 	stw	r11,1124(sp)
20023160:	da81038d 	sth	r10,1038(sp)
20023164:	da410715 	stw	r9,1052(sp)
20023168:	da010915 	stw	r8,1060(sp)
2002316c:	dec10015 	stw	sp,1024(sp)
20023170:	dec10415 	stw	sp,1040(sp)
20023174:	d8c10215 	stw	r3,1032(sp)
20023178:	d8c10515 	stw	r3,1044(sp)
2002317c:	d8010615 	stw	zero,1048(sp)
20023180:	0020f080 	call	20020f08 <___vfprintf_internal_r>
20023184:	1023883a 	mov	r17,r2
20023188:	10000416 	blt	r2,zero,2002319c <__sbprintf+0x80>
2002318c:	d9410004 	addi	r5,sp,1024
20023190:	9009883a 	mov	r4,r18
20023194:	0024dd00 	call	20024dd0 <_fflush_r>
20023198:	10000d1e 	bne	r2,zero,200231d0 <__sbprintf+0xb4>
2002319c:	d881030b 	ldhu	r2,1036(sp)
200231a0:	1080100c 	andi	r2,r2,64
200231a4:	10000326 	beq	r2,zero,200231b4 <__sbprintf+0x98>
200231a8:	8080030b 	ldhu	r2,12(r16)
200231ac:	10801014 	ori	r2,r2,64
200231b0:	8080030d 	sth	r2,12(r16)
200231b4:	8805883a 	mov	r2,r17
200231b8:	dfc11d17 	ldw	ra,1140(sp)
200231bc:	dc811c17 	ldw	r18,1136(sp)
200231c0:	dc411b17 	ldw	r17,1132(sp)
200231c4:	dc011a17 	ldw	r16,1128(sp)
200231c8:	dec11e04 	addi	sp,sp,1144
200231cc:	f800283a 	ret
200231d0:	047fffc4 	movi	r17,-1
200231d4:	003ff106 	br	2002319c <__alt_data_end+0xfffe3d9c>

200231d8 <__swsetup_r>:
200231d8:	008800f4 	movhi	r2,8195
200231dc:	defffd04 	addi	sp,sp,-12
200231e0:	1086fa04 	addi	r2,r2,7144
200231e4:	dc400115 	stw	r17,4(sp)
200231e8:	2023883a 	mov	r17,r4
200231ec:	11000017 	ldw	r4,0(r2)
200231f0:	dc000015 	stw	r16,0(sp)
200231f4:	dfc00215 	stw	ra,8(sp)
200231f8:	2821883a 	mov	r16,r5
200231fc:	20000226 	beq	r4,zero,20023208 <__swsetup_r+0x30>
20023200:	20800e17 	ldw	r2,56(r4)
20023204:	10003126 	beq	r2,zero,200232cc <__swsetup_r+0xf4>
20023208:	8080030b 	ldhu	r2,12(r16)
2002320c:	10c0020c 	andi	r3,r2,8
20023210:	1009883a 	mov	r4,r2
20023214:	18000f26 	beq	r3,zero,20023254 <__swsetup_r+0x7c>
20023218:	80c00417 	ldw	r3,16(r16)
2002321c:	18001526 	beq	r3,zero,20023274 <__swsetup_r+0x9c>
20023220:	1100004c 	andi	r4,r2,1
20023224:	20001c1e 	bne	r4,zero,20023298 <__swsetup_r+0xc0>
20023228:	1080008c 	andi	r2,r2,2
2002322c:	1000291e 	bne	r2,zero,200232d4 <__swsetup_r+0xfc>
20023230:	80800517 	ldw	r2,20(r16)
20023234:	80800215 	stw	r2,8(r16)
20023238:	18001c26 	beq	r3,zero,200232ac <__swsetup_r+0xd4>
2002323c:	0005883a 	mov	r2,zero
20023240:	dfc00217 	ldw	ra,8(sp)
20023244:	dc400117 	ldw	r17,4(sp)
20023248:	dc000017 	ldw	r16,0(sp)
2002324c:	dec00304 	addi	sp,sp,12
20023250:	f800283a 	ret
20023254:	2080040c 	andi	r2,r4,16
20023258:	10002e26 	beq	r2,zero,20023314 <__swsetup_r+0x13c>
2002325c:	2080010c 	andi	r2,r4,4
20023260:	10001e1e 	bne	r2,zero,200232dc <__swsetup_r+0x104>
20023264:	80c00417 	ldw	r3,16(r16)
20023268:	20800214 	ori	r2,r4,8
2002326c:	8080030d 	sth	r2,12(r16)
20023270:	183feb1e 	bne	r3,zero,20023220 <__alt_data_end+0xfffe3e20>
20023274:	1100a00c 	andi	r4,r2,640
20023278:	01408004 	movi	r5,512
2002327c:	217fe826 	beq	r4,r5,20023220 <__alt_data_end+0xfffe3e20>
20023280:	800b883a 	mov	r5,r16
20023284:	8809883a 	mov	r4,r17
20023288:	0025d500 	call	20025d50 <__smakebuf_r>
2002328c:	8080030b 	ldhu	r2,12(r16)
20023290:	80c00417 	ldw	r3,16(r16)
20023294:	003fe206 	br	20023220 <__alt_data_end+0xfffe3e20>
20023298:	80800517 	ldw	r2,20(r16)
2002329c:	80000215 	stw	zero,8(r16)
200232a0:	0085c83a 	sub	r2,zero,r2
200232a4:	80800615 	stw	r2,24(r16)
200232a8:	183fe41e 	bne	r3,zero,2002323c <__alt_data_end+0xfffe3e3c>
200232ac:	80c0030b 	ldhu	r3,12(r16)
200232b0:	0005883a 	mov	r2,zero
200232b4:	1900200c 	andi	r4,r3,128
200232b8:	203fe126 	beq	r4,zero,20023240 <__alt_data_end+0xfffe3e40>
200232bc:	18c01014 	ori	r3,r3,64
200232c0:	80c0030d 	sth	r3,12(r16)
200232c4:	00bfffc4 	movi	r2,-1
200232c8:	003fdd06 	br	20023240 <__alt_data_end+0xfffe3e40>
200232cc:	00251ac0 	call	200251ac <__sinit>
200232d0:	003fcd06 	br	20023208 <__alt_data_end+0xfffe3e08>
200232d4:	0005883a 	mov	r2,zero
200232d8:	003fd606 	br	20023234 <__alt_data_end+0xfffe3e34>
200232dc:	81400c17 	ldw	r5,48(r16)
200232e0:	28000626 	beq	r5,zero,200232fc <__swsetup_r+0x124>
200232e4:	80801004 	addi	r2,r16,64
200232e8:	28800326 	beq	r5,r2,200232f8 <__swsetup_r+0x120>
200232ec:	8809883a 	mov	r4,r17
200232f0:	00253200 	call	20025320 <_free_r>
200232f4:	8100030b 	ldhu	r4,12(r16)
200232f8:	80000c15 	stw	zero,48(r16)
200232fc:	80c00417 	ldw	r3,16(r16)
20023300:	00bff6c4 	movi	r2,-37
20023304:	1108703a 	and	r4,r2,r4
20023308:	80000115 	stw	zero,4(r16)
2002330c:	80c00015 	stw	r3,0(r16)
20023310:	003fd506 	br	20023268 <__alt_data_end+0xfffe3e68>
20023314:	00800244 	movi	r2,9
20023318:	88800015 	stw	r2,0(r17)
2002331c:	20801014 	ori	r2,r4,64
20023320:	8080030d 	sth	r2,12(r16)
20023324:	00bfffc4 	movi	r2,-1
20023328:	003fc506 	br	20023240 <__alt_data_end+0xfffe3e40>

2002332c <quorem>:
2002332c:	defff704 	addi	sp,sp,-36
20023330:	dc800215 	stw	r18,8(sp)
20023334:	20800417 	ldw	r2,16(r4)
20023338:	2c800417 	ldw	r18,16(r5)
2002333c:	dfc00815 	stw	ra,32(sp)
20023340:	ddc00715 	stw	r23,28(sp)
20023344:	dd800615 	stw	r22,24(sp)
20023348:	dd400515 	stw	r21,20(sp)
2002334c:	dd000415 	stw	r20,16(sp)
20023350:	dcc00315 	stw	r19,12(sp)
20023354:	dc400115 	stw	r17,4(sp)
20023358:	dc000015 	stw	r16,0(sp)
2002335c:	14807116 	blt	r2,r18,20023524 <quorem+0x1f8>
20023360:	94bfffc4 	addi	r18,r18,-1
20023364:	94ad883a 	add	r22,r18,r18
20023368:	b5ad883a 	add	r22,r22,r22
2002336c:	2c400504 	addi	r17,r5,20
20023370:	8da9883a 	add	r20,r17,r22
20023374:	25400504 	addi	r21,r4,20
20023378:	282f883a 	mov	r23,r5
2002337c:	adad883a 	add	r22,r21,r22
20023380:	a1400017 	ldw	r5,0(r20)
20023384:	2021883a 	mov	r16,r4
20023388:	b1000017 	ldw	r4,0(r22)
2002338c:	29400044 	addi	r5,r5,1
20023390:	0020a900 	call	20020a90 <__udivsi3>
20023394:	1027883a 	mov	r19,r2
20023398:	10002c26 	beq	r2,zero,2002344c <quorem+0x120>
2002339c:	a813883a 	mov	r9,r21
200233a0:	880b883a 	mov	r5,r17
200233a4:	0009883a 	mov	r4,zero
200233a8:	000d883a 	mov	r6,zero
200233ac:	2a000017 	ldw	r8,0(r5)
200233b0:	49c00017 	ldw	r7,0(r9)
200233b4:	29400104 	addi	r5,r5,4
200233b8:	40bfffcc 	andi	r2,r8,65535
200233bc:	14c5383a 	mul	r2,r2,r19
200233c0:	4010d43a 	srli	r8,r8,16
200233c4:	38ffffcc 	andi	r3,r7,65535
200233c8:	1105883a 	add	r2,r2,r4
200233cc:	1008d43a 	srli	r4,r2,16
200233d0:	44d1383a 	mul	r8,r8,r19
200233d4:	198d883a 	add	r6,r3,r6
200233d8:	10ffffcc 	andi	r3,r2,65535
200233dc:	30c7c83a 	sub	r3,r6,r3
200233e0:	380ed43a 	srli	r7,r7,16
200233e4:	4105883a 	add	r2,r8,r4
200233e8:	180dd43a 	srai	r6,r3,16
200233ec:	113fffcc 	andi	r4,r2,65535
200233f0:	390fc83a 	sub	r7,r7,r4
200233f4:	398d883a 	add	r6,r7,r6
200233f8:	300e943a 	slli	r7,r6,16
200233fc:	18ffffcc 	andi	r3,r3,65535
20023400:	1008d43a 	srli	r4,r2,16
20023404:	38ceb03a 	or	r7,r7,r3
20023408:	49c00015 	stw	r7,0(r9)
2002340c:	300dd43a 	srai	r6,r6,16
20023410:	4a400104 	addi	r9,r9,4
20023414:	a17fe52e 	bgeu	r20,r5,200233ac <__alt_data_end+0xfffe3fac>
20023418:	b0800017 	ldw	r2,0(r22)
2002341c:	10000b1e 	bne	r2,zero,2002344c <quorem+0x120>
20023420:	b0bfff04 	addi	r2,r22,-4
20023424:	a880082e 	bgeu	r21,r2,20023448 <quorem+0x11c>
20023428:	b0ffff17 	ldw	r3,-4(r22)
2002342c:	18000326 	beq	r3,zero,2002343c <quorem+0x110>
20023430:	00000506 	br	20023448 <quorem+0x11c>
20023434:	10c00017 	ldw	r3,0(r2)
20023438:	1800031e 	bne	r3,zero,20023448 <quorem+0x11c>
2002343c:	10bfff04 	addi	r2,r2,-4
20023440:	94bfffc4 	addi	r18,r18,-1
20023444:	a8bffb36 	bltu	r21,r2,20023434 <__alt_data_end+0xfffe4034>
20023448:	84800415 	stw	r18,16(r16)
2002344c:	b80b883a 	mov	r5,r23
20023450:	8009883a 	mov	r4,r16
20023454:	00273480 	call	20027348 <__mcmp>
20023458:	10002616 	blt	r2,zero,200234f4 <quorem+0x1c8>
2002345c:	9cc00044 	addi	r19,r19,1
20023460:	a805883a 	mov	r2,r21
20023464:	000b883a 	mov	r5,zero
20023468:	11000017 	ldw	r4,0(r2)
2002346c:	89800017 	ldw	r6,0(r17)
20023470:	10800104 	addi	r2,r2,4
20023474:	20ffffcc 	andi	r3,r4,65535
20023478:	194b883a 	add	r5,r3,r5
2002347c:	30ffffcc 	andi	r3,r6,65535
20023480:	28c7c83a 	sub	r3,r5,r3
20023484:	300cd43a 	srli	r6,r6,16
20023488:	2008d43a 	srli	r4,r4,16
2002348c:	180bd43a 	srai	r5,r3,16
20023490:	18ffffcc 	andi	r3,r3,65535
20023494:	2189c83a 	sub	r4,r4,r6
20023498:	2149883a 	add	r4,r4,r5
2002349c:	200c943a 	slli	r6,r4,16
200234a0:	8c400104 	addi	r17,r17,4
200234a4:	200bd43a 	srai	r5,r4,16
200234a8:	30c6b03a 	or	r3,r6,r3
200234ac:	10ffff15 	stw	r3,-4(r2)
200234b0:	a47fed2e 	bgeu	r20,r17,20023468 <__alt_data_end+0xfffe4068>
200234b4:	9485883a 	add	r2,r18,r18
200234b8:	1085883a 	add	r2,r2,r2
200234bc:	a887883a 	add	r3,r21,r2
200234c0:	18800017 	ldw	r2,0(r3)
200234c4:	10000b1e 	bne	r2,zero,200234f4 <quorem+0x1c8>
200234c8:	18bfff04 	addi	r2,r3,-4
200234cc:	a880082e 	bgeu	r21,r2,200234f0 <quorem+0x1c4>
200234d0:	18ffff17 	ldw	r3,-4(r3)
200234d4:	18000326 	beq	r3,zero,200234e4 <quorem+0x1b8>
200234d8:	00000506 	br	200234f0 <quorem+0x1c4>
200234dc:	10c00017 	ldw	r3,0(r2)
200234e0:	1800031e 	bne	r3,zero,200234f0 <quorem+0x1c4>
200234e4:	10bfff04 	addi	r2,r2,-4
200234e8:	94bfffc4 	addi	r18,r18,-1
200234ec:	a8bffb36 	bltu	r21,r2,200234dc <__alt_data_end+0xfffe40dc>
200234f0:	84800415 	stw	r18,16(r16)
200234f4:	9805883a 	mov	r2,r19
200234f8:	dfc00817 	ldw	ra,32(sp)
200234fc:	ddc00717 	ldw	r23,28(sp)
20023500:	dd800617 	ldw	r22,24(sp)
20023504:	dd400517 	ldw	r21,20(sp)
20023508:	dd000417 	ldw	r20,16(sp)
2002350c:	dcc00317 	ldw	r19,12(sp)
20023510:	dc800217 	ldw	r18,8(sp)
20023514:	dc400117 	ldw	r17,4(sp)
20023518:	dc000017 	ldw	r16,0(sp)
2002351c:	dec00904 	addi	sp,sp,36
20023520:	f800283a 	ret
20023524:	0005883a 	mov	r2,zero
20023528:	003ff306 	br	200234f8 <__alt_data_end+0xfffe40f8>

2002352c <_dtoa_r>:
2002352c:	20801017 	ldw	r2,64(r4)
20023530:	deffde04 	addi	sp,sp,-136
20023534:	df002015 	stw	fp,128(sp)
20023538:	dcc01b15 	stw	r19,108(sp)
2002353c:	dc801a15 	stw	r18,104(sp)
20023540:	dc401915 	stw	r17,100(sp)
20023544:	dc001815 	stw	r16,96(sp)
20023548:	dfc02115 	stw	ra,132(sp)
2002354c:	ddc01f15 	stw	r23,124(sp)
20023550:	dd801e15 	stw	r22,120(sp)
20023554:	dd401d15 	stw	r21,116(sp)
20023558:	dd001c15 	stw	r20,112(sp)
2002355c:	d9c00315 	stw	r7,12(sp)
20023560:	2039883a 	mov	fp,r4
20023564:	3023883a 	mov	r17,r6
20023568:	2825883a 	mov	r18,r5
2002356c:	dc002417 	ldw	r16,144(sp)
20023570:	3027883a 	mov	r19,r6
20023574:	10000826 	beq	r2,zero,20023598 <_dtoa_r+0x6c>
20023578:	21801117 	ldw	r6,68(r4)
2002357c:	00c00044 	movi	r3,1
20023580:	100b883a 	mov	r5,r2
20023584:	1986983a 	sll	r3,r3,r6
20023588:	11800115 	stw	r6,4(r2)
2002358c:	10c00215 	stw	r3,8(r2)
20023590:	0026b280 	call	20026b28 <_Bfree>
20023594:	e0001015 	stw	zero,64(fp)
20023598:	88002e16 	blt	r17,zero,20023654 <_dtoa_r+0x128>
2002359c:	80000015 	stw	zero,0(r16)
200235a0:	889ffc2c 	andhi	r2,r17,32752
200235a4:	00dffc34 	movhi	r3,32752
200235a8:	10c01c26 	beq	r2,r3,2002361c <_dtoa_r+0xf0>
200235ac:	000d883a 	mov	r6,zero
200235b0:	000f883a 	mov	r7,zero
200235b4:	9009883a 	mov	r4,r18
200235b8:	980b883a 	mov	r5,r19
200235bc:	002c0480 	call	2002c048 <__eqdf2>
200235c0:	10002b1e 	bne	r2,zero,20023670 <_dtoa_r+0x144>
200235c4:	d9c02317 	ldw	r7,140(sp)
200235c8:	00800044 	movi	r2,1
200235cc:	38800015 	stw	r2,0(r7)
200235d0:	d8802517 	ldw	r2,148(sp)
200235d4:	10019e26 	beq	r2,zero,20023c50 <_dtoa_r+0x724>
200235d8:	d8c02517 	ldw	r3,148(sp)
200235dc:	008800f4 	movhi	r2,8195
200235e0:	10bfa144 	addi	r2,r2,-379
200235e4:	18800015 	stw	r2,0(r3)
200235e8:	10bfffc4 	addi	r2,r2,-1
200235ec:	dfc02117 	ldw	ra,132(sp)
200235f0:	df002017 	ldw	fp,128(sp)
200235f4:	ddc01f17 	ldw	r23,124(sp)
200235f8:	dd801e17 	ldw	r22,120(sp)
200235fc:	dd401d17 	ldw	r21,116(sp)
20023600:	dd001c17 	ldw	r20,112(sp)
20023604:	dcc01b17 	ldw	r19,108(sp)
20023608:	dc801a17 	ldw	r18,104(sp)
2002360c:	dc401917 	ldw	r17,100(sp)
20023610:	dc001817 	ldw	r16,96(sp)
20023614:	dec02204 	addi	sp,sp,136
20023618:	f800283a 	ret
2002361c:	d8c02317 	ldw	r3,140(sp)
20023620:	0089c3c4 	movi	r2,9999
20023624:	18800015 	stw	r2,0(r3)
20023628:	90017726 	beq	r18,zero,20023c08 <_dtoa_r+0x6dc>
2002362c:	008800f4 	movhi	r2,8195
20023630:	10bfad04 	addi	r2,r2,-332
20023634:	d9002517 	ldw	r4,148(sp)
20023638:	203fec26 	beq	r4,zero,200235ec <__alt_data_end+0xfffe41ec>
2002363c:	10c000c7 	ldb	r3,3(r2)
20023640:	1801781e 	bne	r3,zero,20023c24 <_dtoa_r+0x6f8>
20023644:	10c000c4 	addi	r3,r2,3
20023648:	d9802517 	ldw	r6,148(sp)
2002364c:	30c00015 	stw	r3,0(r6)
20023650:	003fe606 	br	200235ec <__alt_data_end+0xfffe41ec>
20023654:	04e00034 	movhi	r19,32768
20023658:	9cffffc4 	addi	r19,r19,-1
2002365c:	00800044 	movi	r2,1
20023660:	8ce6703a 	and	r19,r17,r19
20023664:	80800015 	stw	r2,0(r16)
20023668:	9823883a 	mov	r17,r19
2002366c:	003fcc06 	br	200235a0 <__alt_data_end+0xfffe41a0>
20023670:	d8800204 	addi	r2,sp,8
20023674:	d8800015 	stw	r2,0(sp)
20023678:	d9c00104 	addi	r7,sp,4
2002367c:	900b883a 	mov	r5,r18
20023680:	980d883a 	mov	r6,r19
20023684:	e009883a 	mov	r4,fp
20023688:	8820d53a 	srli	r16,r17,20
2002368c:	00277140 	call	20027714 <__d2b>
20023690:	d8800915 	stw	r2,36(sp)
20023694:	8001651e 	bne	r16,zero,20023c2c <_dtoa_r+0x700>
20023698:	dd800217 	ldw	r22,8(sp)
2002369c:	dc000117 	ldw	r16,4(sp)
200236a0:	00800804 	movi	r2,32
200236a4:	b421883a 	add	r16,r22,r16
200236a8:	80c10c84 	addi	r3,r16,1074
200236ac:	10c2d10e 	bge	r2,r3,200241f4 <_dtoa_r+0xcc8>
200236b0:	00801004 	movi	r2,64
200236b4:	81010484 	addi	r4,r16,1042
200236b8:	10c7c83a 	sub	r3,r2,r3
200236bc:	9108d83a 	srl	r4,r18,r4
200236c0:	88e2983a 	sll	r17,r17,r3
200236c4:	2448b03a 	or	r4,r4,r17
200236c8:	002d4100 	call	2002d410 <__floatunsidf>
200236cc:	017f8434 	movhi	r5,65040
200236d0:	01800044 	movi	r6,1
200236d4:	1009883a 	mov	r4,r2
200236d8:	194b883a 	add	r5,r3,r5
200236dc:	843fffc4 	addi	r16,r16,-1
200236e0:	d9801115 	stw	r6,68(sp)
200236e4:	000d883a 	mov	r6,zero
200236e8:	01cffe34 	movhi	r7,16376
200236ec:	002c9b80 	call	2002c9b8 <__subdf3>
200236f0:	0198dbf4 	movhi	r6,25455
200236f4:	01cff4f4 	movhi	r7,16339
200236f8:	3190d844 	addi	r6,r6,17249
200236fc:	39e1e9c4 	addi	r7,r7,-30809
20023700:	1009883a 	mov	r4,r2
20023704:	180b883a 	mov	r5,r3
20023708:	002c2a00 	call	2002c2a0 <__muldf3>
2002370c:	01a2d874 	movhi	r6,35681
20023710:	01cff1f4 	movhi	r7,16327
20023714:	31b22cc4 	addi	r6,r6,-14157
20023718:	39e28a04 	addi	r7,r7,-30168
2002371c:	180b883a 	mov	r5,r3
20023720:	1009883a 	mov	r4,r2
20023724:	002aeb40 	call	2002aeb4 <__adddf3>
20023728:	8009883a 	mov	r4,r16
2002372c:	1029883a 	mov	r20,r2
20023730:	1823883a 	mov	r17,r3
20023734:	002d3340 	call	2002d334 <__floatsidf>
20023738:	019427f4 	movhi	r6,20639
2002373c:	01cff4f4 	movhi	r7,16339
20023740:	319e7ec4 	addi	r6,r6,31227
20023744:	39d104c4 	addi	r7,r7,17427
20023748:	1009883a 	mov	r4,r2
2002374c:	180b883a 	mov	r5,r3
20023750:	002c2a00 	call	2002c2a0 <__muldf3>
20023754:	100d883a 	mov	r6,r2
20023758:	180f883a 	mov	r7,r3
2002375c:	a009883a 	mov	r4,r20
20023760:	880b883a 	mov	r5,r17
20023764:	002aeb40 	call	2002aeb4 <__adddf3>
20023768:	1009883a 	mov	r4,r2
2002376c:	180b883a 	mov	r5,r3
20023770:	1029883a 	mov	r20,r2
20023774:	1823883a 	mov	r17,r3
20023778:	002d2b40 	call	2002d2b4 <__fixdfsi>
2002377c:	000d883a 	mov	r6,zero
20023780:	000f883a 	mov	r7,zero
20023784:	a009883a 	mov	r4,r20
20023788:	880b883a 	mov	r5,r17
2002378c:	d8800515 	stw	r2,20(sp)
20023790:	002c1ac0 	call	2002c1ac <__ledf2>
20023794:	10028716 	blt	r2,zero,200241b4 <_dtoa_r+0xc88>
20023798:	d8c00517 	ldw	r3,20(sp)
2002379c:	00800584 	movi	r2,22
200237a0:	10c27536 	bltu	r2,r3,20024178 <_dtoa_r+0xc4c>
200237a4:	180490fa 	slli	r2,r3,3
200237a8:	00c800f4 	movhi	r3,8195
200237ac:	18ffc904 	addi	r3,r3,-220
200237b0:	1885883a 	add	r2,r3,r2
200237b4:	11000017 	ldw	r4,0(r2)
200237b8:	11400117 	ldw	r5,4(r2)
200237bc:	900d883a 	mov	r6,r18
200237c0:	980f883a 	mov	r7,r19
200237c4:	002c0d00 	call	2002c0d0 <__gedf2>
200237c8:	00828d0e 	bge	zero,r2,20024200 <_dtoa_r+0xcd4>
200237cc:	d9000517 	ldw	r4,20(sp)
200237d0:	d8000e15 	stw	zero,56(sp)
200237d4:	213fffc4 	addi	r4,r4,-1
200237d8:	d9000515 	stw	r4,20(sp)
200237dc:	b42dc83a 	sub	r22,r22,r16
200237e0:	b5bfffc4 	addi	r22,r22,-1
200237e4:	b0026f16 	blt	r22,zero,200241a4 <_dtoa_r+0xc78>
200237e8:	d8000815 	stw	zero,32(sp)
200237ec:	d9c00517 	ldw	r7,20(sp)
200237f0:	38026416 	blt	r7,zero,20024184 <_dtoa_r+0xc58>
200237f4:	b1ed883a 	add	r22,r22,r7
200237f8:	d9c00d15 	stw	r7,52(sp)
200237fc:	d8000a15 	stw	zero,40(sp)
20023800:	d9800317 	ldw	r6,12(sp)
20023804:	00800244 	movi	r2,9
20023808:	11811436 	bltu	r2,r6,20023c5c <_dtoa_r+0x730>
2002380c:	00800144 	movi	r2,5
20023810:	1184e10e 	bge	r2,r6,20024b98 <_dtoa_r+0x166c>
20023814:	31bfff04 	addi	r6,r6,-4
20023818:	d9800315 	stw	r6,12(sp)
2002381c:	0023883a 	mov	r17,zero
20023820:	d9800317 	ldw	r6,12(sp)
20023824:	008000c4 	movi	r2,3
20023828:	30836726 	beq	r6,r2,200245c8 <_dtoa_r+0x109c>
2002382c:	1183410e 	bge	r2,r6,20024534 <_dtoa_r+0x1008>
20023830:	d9c00317 	ldw	r7,12(sp)
20023834:	00800104 	movi	r2,4
20023838:	38827c26 	beq	r7,r2,2002422c <_dtoa_r+0xd00>
2002383c:	00800144 	movi	r2,5
20023840:	3884c41e 	bne	r7,r2,20024b54 <_dtoa_r+0x1628>
20023844:	00800044 	movi	r2,1
20023848:	d8800b15 	stw	r2,44(sp)
2002384c:	d8c00517 	ldw	r3,20(sp)
20023850:	d9002217 	ldw	r4,136(sp)
20023854:	1907883a 	add	r3,r3,r4
20023858:	19800044 	addi	r6,r3,1
2002385c:	d8c00c15 	stw	r3,48(sp)
20023860:	d9800615 	stw	r6,24(sp)
20023864:	0183a40e 	bge	zero,r6,200246f8 <_dtoa_r+0x11cc>
20023868:	d9800617 	ldw	r6,24(sp)
2002386c:	3021883a 	mov	r16,r6
20023870:	e0001115 	stw	zero,68(fp)
20023874:	008005c4 	movi	r2,23
20023878:	1184c92e 	bgeu	r2,r6,20024ba0 <_dtoa_r+0x1674>
2002387c:	00c00044 	movi	r3,1
20023880:	00800104 	movi	r2,4
20023884:	1085883a 	add	r2,r2,r2
20023888:	11000504 	addi	r4,r2,20
2002388c:	180b883a 	mov	r5,r3
20023890:	18c00044 	addi	r3,r3,1
20023894:	313ffb2e 	bgeu	r6,r4,20023884 <__alt_data_end+0xfffe4484>
20023898:	e1401115 	stw	r5,68(fp)
2002389c:	e009883a 	mov	r4,fp
200238a0:	0026a800 	call	20026a80 <_Balloc>
200238a4:	d8800715 	stw	r2,28(sp)
200238a8:	e0801015 	stw	r2,64(fp)
200238ac:	00800384 	movi	r2,14
200238b0:	1400f736 	bltu	r2,r16,20023c90 <_dtoa_r+0x764>
200238b4:	8800f626 	beq	r17,zero,20023c90 <_dtoa_r+0x764>
200238b8:	d9c00517 	ldw	r7,20(sp)
200238bc:	01c39a0e 	bge	zero,r7,20024728 <_dtoa_r+0x11fc>
200238c0:	388003cc 	andi	r2,r7,15
200238c4:	100490fa 	slli	r2,r2,3
200238c8:	382bd13a 	srai	r21,r7,4
200238cc:	00c800f4 	movhi	r3,8195
200238d0:	18ffc904 	addi	r3,r3,-220
200238d4:	1885883a 	add	r2,r3,r2
200238d8:	a8c0040c 	andi	r3,r21,16
200238dc:	12400017 	ldw	r9,0(r2)
200238e0:	12000117 	ldw	r8,4(r2)
200238e4:	18037926 	beq	r3,zero,200246cc <_dtoa_r+0x11a0>
200238e8:	008800f4 	movhi	r2,8195
200238ec:	10bfbf04 	addi	r2,r2,-260
200238f0:	11800817 	ldw	r6,32(r2)
200238f4:	11c00917 	ldw	r7,36(r2)
200238f8:	9009883a 	mov	r4,r18
200238fc:	980b883a 	mov	r5,r19
20023900:	da001715 	stw	r8,92(sp)
20023904:	da401615 	stw	r9,88(sp)
20023908:	002b7600 	call	2002b760 <__divdf3>
2002390c:	da001717 	ldw	r8,92(sp)
20023910:	da401617 	ldw	r9,88(sp)
20023914:	ad4003cc 	andi	r21,r21,15
20023918:	040000c4 	movi	r16,3
2002391c:	1023883a 	mov	r17,r2
20023920:	1829883a 	mov	r20,r3
20023924:	a8001126 	beq	r21,zero,2002396c <_dtoa_r+0x440>
20023928:	05c800f4 	movhi	r23,8195
2002392c:	bdffbf04 	addi	r23,r23,-260
20023930:	4805883a 	mov	r2,r9
20023934:	4007883a 	mov	r3,r8
20023938:	a980004c 	andi	r6,r21,1
2002393c:	1009883a 	mov	r4,r2
20023940:	a82bd07a 	srai	r21,r21,1
20023944:	180b883a 	mov	r5,r3
20023948:	30000426 	beq	r6,zero,2002395c <_dtoa_r+0x430>
2002394c:	b9800017 	ldw	r6,0(r23)
20023950:	b9c00117 	ldw	r7,4(r23)
20023954:	84000044 	addi	r16,r16,1
20023958:	002c2a00 	call	2002c2a0 <__muldf3>
2002395c:	bdc00204 	addi	r23,r23,8
20023960:	a83ff51e 	bne	r21,zero,20023938 <__alt_data_end+0xfffe4538>
20023964:	1013883a 	mov	r9,r2
20023968:	1811883a 	mov	r8,r3
2002396c:	480d883a 	mov	r6,r9
20023970:	400f883a 	mov	r7,r8
20023974:	8809883a 	mov	r4,r17
20023978:	a00b883a 	mov	r5,r20
2002397c:	002b7600 	call	2002b760 <__divdf3>
20023980:	d8800f15 	stw	r2,60(sp)
20023984:	d8c01015 	stw	r3,64(sp)
20023988:	d8c00e17 	ldw	r3,56(sp)
2002398c:	18000626 	beq	r3,zero,200239a8 <_dtoa_r+0x47c>
20023990:	d9000f17 	ldw	r4,60(sp)
20023994:	d9401017 	ldw	r5,64(sp)
20023998:	000d883a 	mov	r6,zero
2002399c:	01cffc34 	movhi	r7,16368
200239a0:	002c1ac0 	call	2002c1ac <__ledf2>
200239a4:	10040b16 	blt	r2,zero,200249d4 <_dtoa_r+0x14a8>
200239a8:	8009883a 	mov	r4,r16
200239ac:	002d3340 	call	2002d334 <__floatsidf>
200239b0:	d9800f17 	ldw	r6,60(sp)
200239b4:	d9c01017 	ldw	r7,64(sp)
200239b8:	1009883a 	mov	r4,r2
200239bc:	180b883a 	mov	r5,r3
200239c0:	002c2a00 	call	2002c2a0 <__muldf3>
200239c4:	000d883a 	mov	r6,zero
200239c8:	01d00734 	movhi	r7,16412
200239cc:	1009883a 	mov	r4,r2
200239d0:	180b883a 	mov	r5,r3
200239d4:	002aeb40 	call	2002aeb4 <__adddf3>
200239d8:	1021883a 	mov	r16,r2
200239dc:	d8800617 	ldw	r2,24(sp)
200239e0:	047f3034 	movhi	r17,64704
200239e4:	1c63883a 	add	r17,r3,r17
200239e8:	10031826 	beq	r2,zero,2002464c <_dtoa_r+0x1120>
200239ec:	d8c00517 	ldw	r3,20(sp)
200239f0:	db000617 	ldw	r12,24(sp)
200239f4:	d8c01315 	stw	r3,76(sp)
200239f8:	d9000b17 	ldw	r4,44(sp)
200239fc:	20038f26 	beq	r4,zero,2002483c <_dtoa_r+0x1310>
20023a00:	60bfffc4 	addi	r2,r12,-1
20023a04:	100490fa 	slli	r2,r2,3
20023a08:	00c800f4 	movhi	r3,8195
20023a0c:	18ffc904 	addi	r3,r3,-220
20023a10:	1885883a 	add	r2,r3,r2
20023a14:	11800017 	ldw	r6,0(r2)
20023a18:	11c00117 	ldw	r7,4(r2)
20023a1c:	d8800717 	ldw	r2,28(sp)
20023a20:	0009883a 	mov	r4,zero
20023a24:	014ff834 	movhi	r5,16352
20023a28:	db001615 	stw	r12,88(sp)
20023a2c:	15c00044 	addi	r23,r2,1
20023a30:	002b7600 	call	2002b760 <__divdf3>
20023a34:	800d883a 	mov	r6,r16
20023a38:	880f883a 	mov	r7,r17
20023a3c:	1009883a 	mov	r4,r2
20023a40:	180b883a 	mov	r5,r3
20023a44:	002c9b80 	call	2002c9b8 <__subdf3>
20023a48:	d9401017 	ldw	r5,64(sp)
20023a4c:	d9000f17 	ldw	r4,60(sp)
20023a50:	102b883a 	mov	r21,r2
20023a54:	d8c01215 	stw	r3,72(sp)
20023a58:	002d2b40 	call	2002d2b4 <__fixdfsi>
20023a5c:	1009883a 	mov	r4,r2
20023a60:	1029883a 	mov	r20,r2
20023a64:	002d3340 	call	2002d334 <__floatsidf>
20023a68:	d9000f17 	ldw	r4,60(sp)
20023a6c:	d9401017 	ldw	r5,64(sp)
20023a70:	100d883a 	mov	r6,r2
20023a74:	180f883a 	mov	r7,r3
20023a78:	002c9b80 	call	2002c9b8 <__subdf3>
20023a7c:	1823883a 	mov	r17,r3
20023a80:	d8c00717 	ldw	r3,28(sp)
20023a84:	d9401217 	ldw	r5,72(sp)
20023a88:	a2000c04 	addi	r8,r20,48
20023a8c:	1021883a 	mov	r16,r2
20023a90:	1a000005 	stb	r8,0(r3)
20023a94:	800d883a 	mov	r6,r16
20023a98:	880f883a 	mov	r7,r17
20023a9c:	a809883a 	mov	r4,r21
20023aa0:	4029883a 	mov	r20,r8
20023aa4:	002c0d00 	call	2002c0d0 <__gedf2>
20023aa8:	00841d16 	blt	zero,r2,20024b20 <_dtoa_r+0x15f4>
20023aac:	800d883a 	mov	r6,r16
20023ab0:	880f883a 	mov	r7,r17
20023ab4:	0009883a 	mov	r4,zero
20023ab8:	014ffc34 	movhi	r5,16368
20023abc:	002c9b80 	call	2002c9b8 <__subdf3>
20023ac0:	d9401217 	ldw	r5,72(sp)
20023ac4:	100d883a 	mov	r6,r2
20023ac8:	180f883a 	mov	r7,r3
20023acc:	a809883a 	mov	r4,r21
20023ad0:	002c0d00 	call	2002c0d0 <__gedf2>
20023ad4:	db001617 	ldw	r12,88(sp)
20023ad8:	00840e16 	blt	zero,r2,20024b14 <_dtoa_r+0x15e8>
20023adc:	00800044 	movi	r2,1
20023ae0:	13006b0e 	bge	r2,r12,20023c90 <_dtoa_r+0x764>
20023ae4:	d9000717 	ldw	r4,28(sp)
20023ae8:	dd800f15 	stw	r22,60(sp)
20023aec:	dcc01015 	stw	r19,64(sp)
20023af0:	2319883a 	add	r12,r4,r12
20023af4:	dcc01217 	ldw	r19,72(sp)
20023af8:	602d883a 	mov	r22,r12
20023afc:	dc801215 	stw	r18,72(sp)
20023b00:	b825883a 	mov	r18,r23
20023b04:	00000906 	br	20023b2c <_dtoa_r+0x600>
20023b08:	002c9b80 	call	2002c9b8 <__subdf3>
20023b0c:	a80d883a 	mov	r6,r21
20023b10:	980f883a 	mov	r7,r19
20023b14:	1009883a 	mov	r4,r2
20023b18:	180b883a 	mov	r5,r3
20023b1c:	002c1ac0 	call	2002c1ac <__ledf2>
20023b20:	1003e816 	blt	r2,zero,20024ac4 <_dtoa_r+0x1598>
20023b24:	b825883a 	mov	r18,r23
20023b28:	bd83e926 	beq	r23,r22,20024ad0 <_dtoa_r+0x15a4>
20023b2c:	a809883a 	mov	r4,r21
20023b30:	980b883a 	mov	r5,r19
20023b34:	000d883a 	mov	r6,zero
20023b38:	01d00934 	movhi	r7,16420
20023b3c:	002c2a00 	call	2002c2a0 <__muldf3>
20023b40:	000d883a 	mov	r6,zero
20023b44:	01d00934 	movhi	r7,16420
20023b48:	8009883a 	mov	r4,r16
20023b4c:	880b883a 	mov	r5,r17
20023b50:	102b883a 	mov	r21,r2
20023b54:	1827883a 	mov	r19,r3
20023b58:	002c2a00 	call	2002c2a0 <__muldf3>
20023b5c:	180b883a 	mov	r5,r3
20023b60:	1009883a 	mov	r4,r2
20023b64:	1821883a 	mov	r16,r3
20023b68:	1023883a 	mov	r17,r2
20023b6c:	002d2b40 	call	2002d2b4 <__fixdfsi>
20023b70:	1009883a 	mov	r4,r2
20023b74:	1029883a 	mov	r20,r2
20023b78:	002d3340 	call	2002d334 <__floatsidf>
20023b7c:	8809883a 	mov	r4,r17
20023b80:	800b883a 	mov	r5,r16
20023b84:	100d883a 	mov	r6,r2
20023b88:	180f883a 	mov	r7,r3
20023b8c:	002c9b80 	call	2002c9b8 <__subdf3>
20023b90:	a5000c04 	addi	r20,r20,48
20023b94:	a80d883a 	mov	r6,r21
20023b98:	980f883a 	mov	r7,r19
20023b9c:	1009883a 	mov	r4,r2
20023ba0:	180b883a 	mov	r5,r3
20023ba4:	95000005 	stb	r20,0(r18)
20023ba8:	1021883a 	mov	r16,r2
20023bac:	1823883a 	mov	r17,r3
20023bb0:	002c1ac0 	call	2002c1ac <__ledf2>
20023bb4:	bdc00044 	addi	r23,r23,1
20023bb8:	800d883a 	mov	r6,r16
20023bbc:	880f883a 	mov	r7,r17
20023bc0:	0009883a 	mov	r4,zero
20023bc4:	014ffc34 	movhi	r5,16368
20023bc8:	103fcf0e 	bge	r2,zero,20023b08 <__alt_data_end+0xfffe4708>
20023bcc:	d8c01317 	ldw	r3,76(sp)
20023bd0:	d8c00515 	stw	r3,20(sp)
20023bd4:	d9400917 	ldw	r5,36(sp)
20023bd8:	e009883a 	mov	r4,fp
20023bdc:	0026b280 	call	20026b28 <_Bfree>
20023be0:	d9000517 	ldw	r4,20(sp)
20023be4:	d9802317 	ldw	r6,140(sp)
20023be8:	d9c02517 	ldw	r7,148(sp)
20023bec:	b8000005 	stb	zero,0(r23)
20023bf0:	20800044 	addi	r2,r4,1
20023bf4:	30800015 	stw	r2,0(r6)
20023bf8:	3802aa26 	beq	r7,zero,200246a4 <_dtoa_r+0x1178>
20023bfc:	3dc00015 	stw	r23,0(r7)
20023c00:	d8800717 	ldw	r2,28(sp)
20023c04:	003e7906 	br	200235ec <__alt_data_end+0xfffe41ec>
20023c08:	00800434 	movhi	r2,16
20023c0c:	10bfffc4 	addi	r2,r2,-1
20023c10:	88a2703a 	and	r17,r17,r2
20023c14:	883e851e 	bne	r17,zero,2002362c <__alt_data_end+0xfffe422c>
20023c18:	008800f4 	movhi	r2,8195
20023c1c:	10bfaa04 	addi	r2,r2,-344
20023c20:	003e8406 	br	20023634 <__alt_data_end+0xfffe4234>
20023c24:	10c00204 	addi	r3,r2,8
20023c28:	003e8706 	br	20023648 <__alt_data_end+0xfffe4248>
20023c2c:	01400434 	movhi	r5,16
20023c30:	297fffc4 	addi	r5,r5,-1
20023c34:	994a703a 	and	r5,r19,r5
20023c38:	9009883a 	mov	r4,r18
20023c3c:	843f0044 	addi	r16,r16,-1023
20023c40:	294ffc34 	orhi	r5,r5,16368
20023c44:	dd800217 	ldw	r22,8(sp)
20023c48:	d8001115 	stw	zero,68(sp)
20023c4c:	003ea506 	br	200236e4 <__alt_data_end+0xfffe42e4>
20023c50:	008800f4 	movhi	r2,8195
20023c54:	10bfa104 	addi	r2,r2,-380
20023c58:	003e6406 	br	200235ec <__alt_data_end+0xfffe41ec>
20023c5c:	e0001115 	stw	zero,68(fp)
20023c60:	000b883a 	mov	r5,zero
20023c64:	e009883a 	mov	r4,fp
20023c68:	0026a800 	call	20026a80 <_Balloc>
20023c6c:	01bfffc4 	movi	r6,-1
20023c70:	01c00044 	movi	r7,1
20023c74:	d8800715 	stw	r2,28(sp)
20023c78:	d9800c15 	stw	r6,48(sp)
20023c7c:	e0801015 	stw	r2,64(fp)
20023c80:	d8000315 	stw	zero,12(sp)
20023c84:	d9c00b15 	stw	r7,44(sp)
20023c88:	d9800615 	stw	r6,24(sp)
20023c8c:	d8002215 	stw	zero,136(sp)
20023c90:	d8800117 	ldw	r2,4(sp)
20023c94:	10008916 	blt	r2,zero,20023ebc <_dtoa_r+0x990>
20023c98:	d9000517 	ldw	r4,20(sp)
20023c9c:	00c00384 	movi	r3,14
20023ca0:	19008616 	blt	r3,r4,20023ebc <_dtoa_r+0x990>
20023ca4:	200490fa 	slli	r2,r4,3
20023ca8:	00c800f4 	movhi	r3,8195
20023cac:	d9802217 	ldw	r6,136(sp)
20023cb0:	18ffc904 	addi	r3,r3,-220
20023cb4:	1885883a 	add	r2,r3,r2
20023cb8:	14000017 	ldw	r16,0(r2)
20023cbc:	14400117 	ldw	r17,4(r2)
20023cc0:	30016316 	blt	r6,zero,20024250 <_dtoa_r+0xd24>
20023cc4:	800d883a 	mov	r6,r16
20023cc8:	880f883a 	mov	r7,r17
20023ccc:	9009883a 	mov	r4,r18
20023cd0:	980b883a 	mov	r5,r19
20023cd4:	002b7600 	call	2002b760 <__divdf3>
20023cd8:	180b883a 	mov	r5,r3
20023cdc:	1009883a 	mov	r4,r2
20023ce0:	002d2b40 	call	2002d2b4 <__fixdfsi>
20023ce4:	1009883a 	mov	r4,r2
20023ce8:	102b883a 	mov	r21,r2
20023cec:	002d3340 	call	2002d334 <__floatsidf>
20023cf0:	800d883a 	mov	r6,r16
20023cf4:	880f883a 	mov	r7,r17
20023cf8:	1009883a 	mov	r4,r2
20023cfc:	180b883a 	mov	r5,r3
20023d00:	002c2a00 	call	2002c2a0 <__muldf3>
20023d04:	100d883a 	mov	r6,r2
20023d08:	180f883a 	mov	r7,r3
20023d0c:	9009883a 	mov	r4,r18
20023d10:	980b883a 	mov	r5,r19
20023d14:	002c9b80 	call	2002c9b8 <__subdf3>
20023d18:	d9c00717 	ldw	r7,28(sp)
20023d1c:	1009883a 	mov	r4,r2
20023d20:	a8800c04 	addi	r2,r21,48
20023d24:	38800005 	stb	r2,0(r7)
20023d28:	3dc00044 	addi	r23,r7,1
20023d2c:	d9c00617 	ldw	r7,24(sp)
20023d30:	01800044 	movi	r6,1
20023d34:	180b883a 	mov	r5,r3
20023d38:	2005883a 	mov	r2,r4
20023d3c:	39803826 	beq	r7,r6,20023e20 <_dtoa_r+0x8f4>
20023d40:	000d883a 	mov	r6,zero
20023d44:	01d00934 	movhi	r7,16420
20023d48:	002c2a00 	call	2002c2a0 <__muldf3>
20023d4c:	000d883a 	mov	r6,zero
20023d50:	000f883a 	mov	r7,zero
20023d54:	1009883a 	mov	r4,r2
20023d58:	180b883a 	mov	r5,r3
20023d5c:	1025883a 	mov	r18,r2
20023d60:	1827883a 	mov	r19,r3
20023d64:	002c0480 	call	2002c048 <__eqdf2>
20023d68:	103f9a26 	beq	r2,zero,20023bd4 <__alt_data_end+0xfffe47d4>
20023d6c:	d9c00617 	ldw	r7,24(sp)
20023d70:	d8c00717 	ldw	r3,28(sp)
20023d74:	b829883a 	mov	r20,r23
20023d78:	38bfffc4 	addi	r2,r7,-1
20023d7c:	18ad883a 	add	r22,r3,r2
20023d80:	00000a06 	br	20023dac <_dtoa_r+0x880>
20023d84:	002c2a00 	call	2002c2a0 <__muldf3>
20023d88:	000d883a 	mov	r6,zero
20023d8c:	000f883a 	mov	r7,zero
20023d90:	1009883a 	mov	r4,r2
20023d94:	180b883a 	mov	r5,r3
20023d98:	1025883a 	mov	r18,r2
20023d9c:	1827883a 	mov	r19,r3
20023da0:	b829883a 	mov	r20,r23
20023da4:	002c0480 	call	2002c048 <__eqdf2>
20023da8:	103f8a26 	beq	r2,zero,20023bd4 <__alt_data_end+0xfffe47d4>
20023dac:	800d883a 	mov	r6,r16
20023db0:	880f883a 	mov	r7,r17
20023db4:	9009883a 	mov	r4,r18
20023db8:	980b883a 	mov	r5,r19
20023dbc:	002b7600 	call	2002b760 <__divdf3>
20023dc0:	180b883a 	mov	r5,r3
20023dc4:	1009883a 	mov	r4,r2
20023dc8:	002d2b40 	call	2002d2b4 <__fixdfsi>
20023dcc:	1009883a 	mov	r4,r2
20023dd0:	102b883a 	mov	r21,r2
20023dd4:	002d3340 	call	2002d334 <__floatsidf>
20023dd8:	800d883a 	mov	r6,r16
20023ddc:	880f883a 	mov	r7,r17
20023de0:	1009883a 	mov	r4,r2
20023de4:	180b883a 	mov	r5,r3
20023de8:	002c2a00 	call	2002c2a0 <__muldf3>
20023dec:	100d883a 	mov	r6,r2
20023df0:	180f883a 	mov	r7,r3
20023df4:	9009883a 	mov	r4,r18
20023df8:	980b883a 	mov	r5,r19
20023dfc:	002c9b80 	call	2002c9b8 <__subdf3>
20023e00:	aa000c04 	addi	r8,r21,48
20023e04:	a2000005 	stb	r8,0(r20)
20023e08:	000d883a 	mov	r6,zero
20023e0c:	01d00934 	movhi	r7,16420
20023e10:	1009883a 	mov	r4,r2
20023e14:	180b883a 	mov	r5,r3
20023e18:	a5c00044 	addi	r23,r20,1
20023e1c:	b53fd91e 	bne	r22,r20,20023d84 <__alt_data_end+0xfffe4984>
20023e20:	100d883a 	mov	r6,r2
20023e24:	180f883a 	mov	r7,r3
20023e28:	1009883a 	mov	r4,r2
20023e2c:	180b883a 	mov	r5,r3
20023e30:	002aeb40 	call	2002aeb4 <__adddf3>
20023e34:	100d883a 	mov	r6,r2
20023e38:	180f883a 	mov	r7,r3
20023e3c:	8009883a 	mov	r4,r16
20023e40:	880b883a 	mov	r5,r17
20023e44:	1027883a 	mov	r19,r2
20023e48:	1825883a 	mov	r18,r3
20023e4c:	002c1ac0 	call	2002c1ac <__ledf2>
20023e50:	10000816 	blt	r2,zero,20023e74 <_dtoa_r+0x948>
20023e54:	980d883a 	mov	r6,r19
20023e58:	900f883a 	mov	r7,r18
20023e5c:	8009883a 	mov	r4,r16
20023e60:	880b883a 	mov	r5,r17
20023e64:	002c0480 	call	2002c048 <__eqdf2>
20023e68:	103f5a1e 	bne	r2,zero,20023bd4 <__alt_data_end+0xfffe47d4>
20023e6c:	ad40004c 	andi	r21,r21,1
20023e70:	a83f5826 	beq	r21,zero,20023bd4 <__alt_data_end+0xfffe47d4>
20023e74:	bd3fffc3 	ldbu	r20,-1(r23)
20023e78:	b8bfffc4 	addi	r2,r23,-1
20023e7c:	1007883a 	mov	r3,r2
20023e80:	01400e44 	movi	r5,57
20023e84:	d9800717 	ldw	r6,28(sp)
20023e88:	00000506 	br	20023ea0 <_dtoa_r+0x974>
20023e8c:	18ffffc4 	addi	r3,r3,-1
20023e90:	11824726 	beq	r2,r6,200247b0 <_dtoa_r+0x1284>
20023e94:	1d000003 	ldbu	r20,0(r3)
20023e98:	102f883a 	mov	r23,r2
20023e9c:	10bfffc4 	addi	r2,r2,-1
20023ea0:	a1003fcc 	andi	r4,r20,255
20023ea4:	2100201c 	xori	r4,r4,128
20023ea8:	213fe004 	addi	r4,r4,-128
20023eac:	217ff726 	beq	r4,r5,20023e8c <__alt_data_end+0xfffe4a8c>
20023eb0:	a2000044 	addi	r8,r20,1
20023eb4:	12000005 	stb	r8,0(r2)
20023eb8:	003f4606 	br	20023bd4 <__alt_data_end+0xfffe47d4>
20023ebc:	d9000b17 	ldw	r4,44(sp)
20023ec0:	2000c826 	beq	r4,zero,200241e4 <_dtoa_r+0xcb8>
20023ec4:	d9800317 	ldw	r6,12(sp)
20023ec8:	00c00044 	movi	r3,1
20023ecc:	1980f90e 	bge	r3,r6,200242b4 <_dtoa_r+0xd88>
20023ed0:	d8800617 	ldw	r2,24(sp)
20023ed4:	d8c00a17 	ldw	r3,40(sp)
20023ed8:	157fffc4 	addi	r21,r2,-1
20023edc:	1d41f316 	blt	r3,r21,200246ac <_dtoa_r+0x1180>
20023ee0:	1d6bc83a 	sub	r21,r3,r21
20023ee4:	d9c00617 	ldw	r7,24(sp)
20023ee8:	3802aa16 	blt	r7,zero,20024994 <_dtoa_r+0x1468>
20023eec:	dd000817 	ldw	r20,32(sp)
20023ef0:	d8800617 	ldw	r2,24(sp)
20023ef4:	d8c00817 	ldw	r3,32(sp)
20023ef8:	01400044 	movi	r5,1
20023efc:	e009883a 	mov	r4,fp
20023f00:	1887883a 	add	r3,r3,r2
20023f04:	d8c00815 	stw	r3,32(sp)
20023f08:	b0ad883a 	add	r22,r22,r2
20023f0c:	0026e8c0 	call	20026e8c <__i2b>
20023f10:	1023883a 	mov	r17,r2
20023f14:	a0000826 	beq	r20,zero,20023f38 <_dtoa_r+0xa0c>
20023f18:	0580070e 	bge	zero,r22,20023f38 <_dtoa_r+0xa0c>
20023f1c:	a005883a 	mov	r2,r20
20023f20:	b500b916 	blt	r22,r20,20024208 <_dtoa_r+0xcdc>
20023f24:	d9000817 	ldw	r4,32(sp)
20023f28:	a0a9c83a 	sub	r20,r20,r2
20023f2c:	b0adc83a 	sub	r22,r22,r2
20023f30:	2089c83a 	sub	r4,r4,r2
20023f34:	d9000815 	stw	r4,32(sp)
20023f38:	d9800a17 	ldw	r6,40(sp)
20023f3c:	0181810e 	bge	zero,r6,20024544 <_dtoa_r+0x1018>
20023f40:	d9c00b17 	ldw	r7,44(sp)
20023f44:	3800b326 	beq	r7,zero,20024214 <_dtoa_r+0xce8>
20023f48:	a800b226 	beq	r21,zero,20024214 <_dtoa_r+0xce8>
20023f4c:	880b883a 	mov	r5,r17
20023f50:	a80d883a 	mov	r6,r21
20023f54:	e009883a 	mov	r4,fp
20023f58:	00270c00 	call	200270c0 <__pow5mult>
20023f5c:	d9800917 	ldw	r6,36(sp)
20023f60:	100b883a 	mov	r5,r2
20023f64:	e009883a 	mov	r4,fp
20023f68:	1023883a 	mov	r17,r2
20023f6c:	0026ec80 	call	20026ec8 <__multiply>
20023f70:	1021883a 	mov	r16,r2
20023f74:	d8800a17 	ldw	r2,40(sp)
20023f78:	d9400917 	ldw	r5,36(sp)
20023f7c:	e009883a 	mov	r4,fp
20023f80:	1545c83a 	sub	r2,r2,r21
20023f84:	d8800a15 	stw	r2,40(sp)
20023f88:	0026b280 	call	20026b28 <_Bfree>
20023f8c:	d8c00a17 	ldw	r3,40(sp)
20023f90:	18009f1e 	bne	r3,zero,20024210 <_dtoa_r+0xce4>
20023f94:	05c00044 	movi	r23,1
20023f98:	e009883a 	mov	r4,fp
20023f9c:	b80b883a 	mov	r5,r23
20023fa0:	0026e8c0 	call	20026e8c <__i2b>
20023fa4:	d9000d17 	ldw	r4,52(sp)
20023fa8:	102b883a 	mov	r21,r2
20023fac:	2000ce26 	beq	r4,zero,200242e8 <_dtoa_r+0xdbc>
20023fb0:	200d883a 	mov	r6,r4
20023fb4:	100b883a 	mov	r5,r2
20023fb8:	e009883a 	mov	r4,fp
20023fbc:	00270c00 	call	200270c0 <__pow5mult>
20023fc0:	d9800317 	ldw	r6,12(sp)
20023fc4:	102b883a 	mov	r21,r2
20023fc8:	b981810e 	bge	r23,r6,200245d0 <_dtoa_r+0x10a4>
20023fcc:	0027883a 	mov	r19,zero
20023fd0:	a8800417 	ldw	r2,16(r21)
20023fd4:	05c00804 	movi	r23,32
20023fd8:	10800104 	addi	r2,r2,4
20023fdc:	1085883a 	add	r2,r2,r2
20023fe0:	1085883a 	add	r2,r2,r2
20023fe4:	a885883a 	add	r2,r21,r2
20023fe8:	11000017 	ldw	r4,0(r2)
20023fec:	0026d740 	call	20026d74 <__hi0bits>
20023ff0:	b885c83a 	sub	r2,r23,r2
20023ff4:	1585883a 	add	r2,r2,r22
20023ff8:	108007cc 	andi	r2,r2,31
20023ffc:	1000b326 	beq	r2,zero,200242cc <_dtoa_r+0xda0>
20024000:	00c00804 	movi	r3,32
20024004:	1887c83a 	sub	r3,r3,r2
20024008:	01000104 	movi	r4,4
2002400c:	20c2cd0e 	bge	r4,r3,20024b44 <_dtoa_r+0x1618>
20024010:	00c00704 	movi	r3,28
20024014:	1885c83a 	sub	r2,r3,r2
20024018:	d8c00817 	ldw	r3,32(sp)
2002401c:	a0a9883a 	add	r20,r20,r2
20024020:	b0ad883a 	add	r22,r22,r2
20024024:	1887883a 	add	r3,r3,r2
20024028:	d8c00815 	stw	r3,32(sp)
2002402c:	d9800817 	ldw	r6,32(sp)
20024030:	0180040e 	bge	zero,r6,20024044 <_dtoa_r+0xb18>
20024034:	800b883a 	mov	r5,r16
20024038:	e009883a 	mov	r4,fp
2002403c:	00272000 	call	20027200 <__lshift>
20024040:	1021883a 	mov	r16,r2
20024044:	0580050e 	bge	zero,r22,2002405c <_dtoa_r+0xb30>
20024048:	a80b883a 	mov	r5,r21
2002404c:	b00d883a 	mov	r6,r22
20024050:	e009883a 	mov	r4,fp
20024054:	00272000 	call	20027200 <__lshift>
20024058:	102b883a 	mov	r21,r2
2002405c:	d9c00e17 	ldw	r7,56(sp)
20024060:	3801211e 	bne	r7,zero,200244e8 <_dtoa_r+0xfbc>
20024064:	d9800617 	ldw	r6,24(sp)
20024068:	0181380e 	bge	zero,r6,2002454c <_dtoa_r+0x1020>
2002406c:	d8c00b17 	ldw	r3,44(sp)
20024070:	1800ab1e 	bne	r3,zero,20024320 <_dtoa_r+0xdf4>
20024074:	dc800717 	ldw	r18,28(sp)
20024078:	dcc00617 	ldw	r19,24(sp)
2002407c:	9029883a 	mov	r20,r18
20024080:	00000206 	br	2002408c <_dtoa_r+0xb60>
20024084:	0026b500 	call	20026b50 <__multadd>
20024088:	1021883a 	mov	r16,r2
2002408c:	a80b883a 	mov	r5,r21
20024090:	8009883a 	mov	r4,r16
20024094:	002332c0 	call	2002332c <quorem>
20024098:	10800c04 	addi	r2,r2,48
2002409c:	90800005 	stb	r2,0(r18)
200240a0:	94800044 	addi	r18,r18,1
200240a4:	9507c83a 	sub	r3,r18,r20
200240a8:	000f883a 	mov	r7,zero
200240ac:	01800284 	movi	r6,10
200240b0:	800b883a 	mov	r5,r16
200240b4:	e009883a 	mov	r4,fp
200240b8:	1cfff216 	blt	r3,r19,20024084 <__alt_data_end+0xfffe4c84>
200240bc:	1011883a 	mov	r8,r2
200240c0:	d8800617 	ldw	r2,24(sp)
200240c4:	0082370e 	bge	zero,r2,200249a4 <_dtoa_r+0x1478>
200240c8:	d9000717 	ldw	r4,28(sp)
200240cc:	0025883a 	mov	r18,zero
200240d0:	20af883a 	add	r23,r4,r2
200240d4:	01800044 	movi	r6,1
200240d8:	800b883a 	mov	r5,r16
200240dc:	e009883a 	mov	r4,fp
200240e0:	da001715 	stw	r8,92(sp)
200240e4:	00272000 	call	20027200 <__lshift>
200240e8:	a80b883a 	mov	r5,r21
200240ec:	1009883a 	mov	r4,r2
200240f0:	d8800915 	stw	r2,36(sp)
200240f4:	00273480 	call	20027348 <__mcmp>
200240f8:	da001717 	ldw	r8,92(sp)
200240fc:	0081800e 	bge	zero,r2,20024700 <_dtoa_r+0x11d4>
20024100:	b93fffc3 	ldbu	r4,-1(r23)
20024104:	b8bfffc4 	addi	r2,r23,-1
20024108:	1007883a 	mov	r3,r2
2002410c:	01800e44 	movi	r6,57
20024110:	d9c00717 	ldw	r7,28(sp)
20024114:	00000506 	br	2002412c <_dtoa_r+0xc00>
20024118:	18ffffc4 	addi	r3,r3,-1
2002411c:	11c12326 	beq	r2,r7,200245ac <_dtoa_r+0x1080>
20024120:	19000003 	ldbu	r4,0(r3)
20024124:	102f883a 	mov	r23,r2
20024128:	10bfffc4 	addi	r2,r2,-1
2002412c:	21403fcc 	andi	r5,r4,255
20024130:	2940201c 	xori	r5,r5,128
20024134:	297fe004 	addi	r5,r5,-128
20024138:	29bff726 	beq	r5,r6,20024118 <__alt_data_end+0xfffe4d18>
2002413c:	21000044 	addi	r4,r4,1
20024140:	11000005 	stb	r4,0(r2)
20024144:	a80b883a 	mov	r5,r21
20024148:	e009883a 	mov	r4,fp
2002414c:	0026b280 	call	20026b28 <_Bfree>
20024150:	883ea026 	beq	r17,zero,20023bd4 <__alt_data_end+0xfffe47d4>
20024154:	90000426 	beq	r18,zero,20024168 <_dtoa_r+0xc3c>
20024158:	94400326 	beq	r18,r17,20024168 <_dtoa_r+0xc3c>
2002415c:	900b883a 	mov	r5,r18
20024160:	e009883a 	mov	r4,fp
20024164:	0026b280 	call	20026b28 <_Bfree>
20024168:	880b883a 	mov	r5,r17
2002416c:	e009883a 	mov	r4,fp
20024170:	0026b280 	call	20026b28 <_Bfree>
20024174:	003e9706 	br	20023bd4 <__alt_data_end+0xfffe47d4>
20024178:	01800044 	movi	r6,1
2002417c:	d9800e15 	stw	r6,56(sp)
20024180:	003d9606 	br	200237dc <__alt_data_end+0xfffe43dc>
20024184:	d8800817 	ldw	r2,32(sp)
20024188:	d8c00517 	ldw	r3,20(sp)
2002418c:	d8000d15 	stw	zero,52(sp)
20024190:	10c5c83a 	sub	r2,r2,r3
20024194:	00c9c83a 	sub	r4,zero,r3
20024198:	d8800815 	stw	r2,32(sp)
2002419c:	d9000a15 	stw	r4,40(sp)
200241a0:	003d9706 	br	20023800 <__alt_data_end+0xfffe4400>
200241a4:	05adc83a 	sub	r22,zero,r22
200241a8:	dd800815 	stw	r22,32(sp)
200241ac:	002d883a 	mov	r22,zero
200241b0:	003d8e06 	br	200237ec <__alt_data_end+0xfffe43ec>
200241b4:	d9000517 	ldw	r4,20(sp)
200241b8:	002d3340 	call	2002d334 <__floatsidf>
200241bc:	100d883a 	mov	r6,r2
200241c0:	180f883a 	mov	r7,r3
200241c4:	a009883a 	mov	r4,r20
200241c8:	880b883a 	mov	r5,r17
200241cc:	002c0480 	call	2002c048 <__eqdf2>
200241d0:	103d7126 	beq	r2,zero,20023798 <__alt_data_end+0xfffe4398>
200241d4:	d9c00517 	ldw	r7,20(sp)
200241d8:	39ffffc4 	addi	r7,r7,-1
200241dc:	d9c00515 	stw	r7,20(sp)
200241e0:	003d6d06 	br	20023798 <__alt_data_end+0xfffe4398>
200241e4:	dd400a17 	ldw	r21,40(sp)
200241e8:	dd000817 	ldw	r20,32(sp)
200241ec:	0023883a 	mov	r17,zero
200241f0:	003f4806 	br	20023f14 <__alt_data_end+0xfffe4b14>
200241f4:	10e3c83a 	sub	r17,r2,r3
200241f8:	9448983a 	sll	r4,r18,r17
200241fc:	003d3206 	br	200236c8 <__alt_data_end+0xfffe42c8>
20024200:	d8000e15 	stw	zero,56(sp)
20024204:	003d7506 	br	200237dc <__alt_data_end+0xfffe43dc>
20024208:	b005883a 	mov	r2,r22
2002420c:	003f4506 	br	20023f24 <__alt_data_end+0xfffe4b24>
20024210:	dc000915 	stw	r16,36(sp)
20024214:	d9800a17 	ldw	r6,40(sp)
20024218:	d9400917 	ldw	r5,36(sp)
2002421c:	e009883a 	mov	r4,fp
20024220:	00270c00 	call	200270c0 <__pow5mult>
20024224:	1021883a 	mov	r16,r2
20024228:	003f5a06 	br	20023f94 <__alt_data_end+0xfffe4b94>
2002422c:	01c00044 	movi	r7,1
20024230:	d9c00b15 	stw	r7,44(sp)
20024234:	d8802217 	ldw	r2,136(sp)
20024238:	0081280e 	bge	zero,r2,200246dc <_dtoa_r+0x11b0>
2002423c:	100d883a 	mov	r6,r2
20024240:	1021883a 	mov	r16,r2
20024244:	d8800c15 	stw	r2,48(sp)
20024248:	d8800615 	stw	r2,24(sp)
2002424c:	003d8806 	br	20023870 <__alt_data_end+0xfffe4470>
20024250:	d8800617 	ldw	r2,24(sp)
20024254:	00be9b16 	blt	zero,r2,20023cc4 <__alt_data_end+0xfffe48c4>
20024258:	10010f1e 	bne	r2,zero,20024698 <_dtoa_r+0x116c>
2002425c:	880b883a 	mov	r5,r17
20024260:	000d883a 	mov	r6,zero
20024264:	01d00534 	movhi	r7,16404
20024268:	8009883a 	mov	r4,r16
2002426c:	002c2a00 	call	2002c2a0 <__muldf3>
20024270:	900d883a 	mov	r6,r18
20024274:	980f883a 	mov	r7,r19
20024278:	1009883a 	mov	r4,r2
2002427c:	180b883a 	mov	r5,r3
20024280:	002c0d00 	call	2002c0d0 <__gedf2>
20024284:	002b883a 	mov	r21,zero
20024288:	0023883a 	mov	r17,zero
2002428c:	1000bf16 	blt	r2,zero,2002458c <_dtoa_r+0x1060>
20024290:	d9802217 	ldw	r6,136(sp)
20024294:	ddc00717 	ldw	r23,28(sp)
20024298:	018c303a 	nor	r6,zero,r6
2002429c:	d9800515 	stw	r6,20(sp)
200242a0:	a80b883a 	mov	r5,r21
200242a4:	e009883a 	mov	r4,fp
200242a8:	0026b280 	call	20026b28 <_Bfree>
200242ac:	883e4926 	beq	r17,zero,20023bd4 <__alt_data_end+0xfffe47d4>
200242b0:	003fad06 	br	20024168 <__alt_data_end+0xfffe4d68>
200242b4:	d9c01117 	ldw	r7,68(sp)
200242b8:	3801bc26 	beq	r7,zero,200249ac <_dtoa_r+0x1480>
200242bc:	10810cc4 	addi	r2,r2,1075
200242c0:	dd400a17 	ldw	r21,40(sp)
200242c4:	dd000817 	ldw	r20,32(sp)
200242c8:	003f0a06 	br	20023ef4 <__alt_data_end+0xfffe4af4>
200242cc:	00800704 	movi	r2,28
200242d0:	d9000817 	ldw	r4,32(sp)
200242d4:	a0a9883a 	add	r20,r20,r2
200242d8:	b0ad883a 	add	r22,r22,r2
200242dc:	2089883a 	add	r4,r4,r2
200242e0:	d9000815 	stw	r4,32(sp)
200242e4:	003f5106 	br	2002402c <__alt_data_end+0xfffe4c2c>
200242e8:	d8c00317 	ldw	r3,12(sp)
200242ec:	b8c1fc0e 	bge	r23,r3,20024ae0 <_dtoa_r+0x15b4>
200242f0:	0027883a 	mov	r19,zero
200242f4:	b805883a 	mov	r2,r23
200242f8:	003f3e06 	br	20023ff4 <__alt_data_end+0xfffe4bf4>
200242fc:	880b883a 	mov	r5,r17
20024300:	e009883a 	mov	r4,fp
20024304:	000f883a 	mov	r7,zero
20024308:	01800284 	movi	r6,10
2002430c:	0026b500 	call	20026b50 <__multadd>
20024310:	d9000c17 	ldw	r4,48(sp)
20024314:	1023883a 	mov	r17,r2
20024318:	0102040e 	bge	zero,r4,20024b2c <_dtoa_r+0x1600>
2002431c:	d9000615 	stw	r4,24(sp)
20024320:	0500050e 	bge	zero,r20,20024338 <_dtoa_r+0xe0c>
20024324:	880b883a 	mov	r5,r17
20024328:	a00d883a 	mov	r6,r20
2002432c:	e009883a 	mov	r4,fp
20024330:	00272000 	call	20027200 <__lshift>
20024334:	1023883a 	mov	r17,r2
20024338:	9801241e 	bne	r19,zero,200247cc <_dtoa_r+0x12a0>
2002433c:	8829883a 	mov	r20,r17
20024340:	d9000617 	ldw	r4,24(sp)
20024344:	dcc00717 	ldw	r19,28(sp)
20024348:	9480004c 	andi	r18,r18,1
2002434c:	20bfffc4 	addi	r2,r4,-1
20024350:	9885883a 	add	r2,r19,r2
20024354:	d8800415 	stw	r2,16(sp)
20024358:	dc800615 	stw	r18,24(sp)
2002435c:	a80b883a 	mov	r5,r21
20024360:	8009883a 	mov	r4,r16
20024364:	002332c0 	call	2002332c <quorem>
20024368:	880b883a 	mov	r5,r17
2002436c:	8009883a 	mov	r4,r16
20024370:	102f883a 	mov	r23,r2
20024374:	00273480 	call	20027348 <__mcmp>
20024378:	a80b883a 	mov	r5,r21
2002437c:	a00d883a 	mov	r6,r20
20024380:	e009883a 	mov	r4,fp
20024384:	102d883a 	mov	r22,r2
20024388:	00273a80 	call	200273a8 <__mdiff>
2002438c:	1007883a 	mov	r3,r2
20024390:	10800317 	ldw	r2,12(r2)
20024394:	bc800c04 	addi	r18,r23,48
20024398:	180b883a 	mov	r5,r3
2002439c:	10004e1e 	bne	r2,zero,200244d8 <_dtoa_r+0xfac>
200243a0:	8009883a 	mov	r4,r16
200243a4:	d8c01615 	stw	r3,88(sp)
200243a8:	00273480 	call	20027348 <__mcmp>
200243ac:	d8c01617 	ldw	r3,88(sp)
200243b0:	e009883a 	mov	r4,fp
200243b4:	d8801615 	stw	r2,88(sp)
200243b8:	180b883a 	mov	r5,r3
200243bc:	0026b280 	call	20026b28 <_Bfree>
200243c0:	d8801617 	ldw	r2,88(sp)
200243c4:	1000041e 	bne	r2,zero,200243d8 <_dtoa_r+0xeac>
200243c8:	d9800317 	ldw	r6,12(sp)
200243cc:	3000021e 	bne	r6,zero,200243d8 <_dtoa_r+0xeac>
200243d0:	d8c00617 	ldw	r3,24(sp)
200243d4:	18003726 	beq	r3,zero,200244b4 <_dtoa_r+0xf88>
200243d8:	b0002016 	blt	r22,zero,2002445c <_dtoa_r+0xf30>
200243dc:	b000041e 	bne	r22,zero,200243f0 <_dtoa_r+0xec4>
200243e0:	d9000317 	ldw	r4,12(sp)
200243e4:	2000021e 	bne	r4,zero,200243f0 <_dtoa_r+0xec4>
200243e8:	d8c00617 	ldw	r3,24(sp)
200243ec:	18001b26 	beq	r3,zero,2002445c <_dtoa_r+0xf30>
200243f0:	00810716 	blt	zero,r2,20024810 <_dtoa_r+0x12e4>
200243f4:	d8c00417 	ldw	r3,16(sp)
200243f8:	9d800044 	addi	r22,r19,1
200243fc:	9c800005 	stb	r18,0(r19)
20024400:	b02f883a 	mov	r23,r22
20024404:	98c10626 	beq	r19,r3,20024820 <_dtoa_r+0x12f4>
20024408:	800b883a 	mov	r5,r16
2002440c:	000f883a 	mov	r7,zero
20024410:	01800284 	movi	r6,10
20024414:	e009883a 	mov	r4,fp
20024418:	0026b500 	call	20026b50 <__multadd>
2002441c:	1021883a 	mov	r16,r2
20024420:	000f883a 	mov	r7,zero
20024424:	01800284 	movi	r6,10
20024428:	880b883a 	mov	r5,r17
2002442c:	e009883a 	mov	r4,fp
20024430:	8d002526 	beq	r17,r20,200244c8 <_dtoa_r+0xf9c>
20024434:	0026b500 	call	20026b50 <__multadd>
20024438:	a00b883a 	mov	r5,r20
2002443c:	000f883a 	mov	r7,zero
20024440:	01800284 	movi	r6,10
20024444:	e009883a 	mov	r4,fp
20024448:	1023883a 	mov	r17,r2
2002444c:	0026b500 	call	20026b50 <__multadd>
20024450:	1029883a 	mov	r20,r2
20024454:	b027883a 	mov	r19,r22
20024458:	003fc006 	br	2002435c <__alt_data_end+0xfffe4f5c>
2002445c:	9011883a 	mov	r8,r18
20024460:	00800e0e 	bge	zero,r2,2002449c <_dtoa_r+0xf70>
20024464:	800b883a 	mov	r5,r16
20024468:	01800044 	movi	r6,1
2002446c:	e009883a 	mov	r4,fp
20024470:	da001715 	stw	r8,92(sp)
20024474:	00272000 	call	20027200 <__lshift>
20024478:	a80b883a 	mov	r5,r21
2002447c:	1009883a 	mov	r4,r2
20024480:	1021883a 	mov	r16,r2
20024484:	00273480 	call	20027348 <__mcmp>
20024488:	da001717 	ldw	r8,92(sp)
2002448c:	0081960e 	bge	zero,r2,20024ae8 <_dtoa_r+0x15bc>
20024490:	00800e44 	movi	r2,57
20024494:	40817026 	beq	r8,r2,20024a58 <_dtoa_r+0x152c>
20024498:	ba000c44 	addi	r8,r23,49
2002449c:	8825883a 	mov	r18,r17
200244a0:	9dc00044 	addi	r23,r19,1
200244a4:	9a000005 	stb	r8,0(r19)
200244a8:	a023883a 	mov	r17,r20
200244ac:	dc000915 	stw	r16,36(sp)
200244b0:	003f2406 	br	20024144 <__alt_data_end+0xfffe4d44>
200244b4:	00800e44 	movi	r2,57
200244b8:	9011883a 	mov	r8,r18
200244bc:	90816626 	beq	r18,r2,20024a58 <_dtoa_r+0x152c>
200244c0:	05bff516 	blt	zero,r22,20024498 <__alt_data_end+0xfffe5098>
200244c4:	003ff506 	br	2002449c <__alt_data_end+0xfffe509c>
200244c8:	0026b500 	call	20026b50 <__multadd>
200244cc:	1023883a 	mov	r17,r2
200244d0:	1029883a 	mov	r20,r2
200244d4:	003fdf06 	br	20024454 <__alt_data_end+0xfffe5054>
200244d8:	e009883a 	mov	r4,fp
200244dc:	0026b280 	call	20026b28 <_Bfree>
200244e0:	00800044 	movi	r2,1
200244e4:	003fbc06 	br	200243d8 <__alt_data_end+0xfffe4fd8>
200244e8:	a80b883a 	mov	r5,r21
200244ec:	8009883a 	mov	r4,r16
200244f0:	00273480 	call	20027348 <__mcmp>
200244f4:	103edb0e 	bge	r2,zero,20024064 <__alt_data_end+0xfffe4c64>
200244f8:	800b883a 	mov	r5,r16
200244fc:	000f883a 	mov	r7,zero
20024500:	01800284 	movi	r6,10
20024504:	e009883a 	mov	r4,fp
20024508:	0026b500 	call	20026b50 <__multadd>
2002450c:	1021883a 	mov	r16,r2
20024510:	d8800517 	ldw	r2,20(sp)
20024514:	d8c00b17 	ldw	r3,44(sp)
20024518:	10bfffc4 	addi	r2,r2,-1
2002451c:	d8800515 	stw	r2,20(sp)
20024520:	183f761e 	bne	r3,zero,200242fc <__alt_data_end+0xfffe4efc>
20024524:	d9000c17 	ldw	r4,48(sp)
20024528:	0101730e 	bge	zero,r4,20024af8 <_dtoa_r+0x15cc>
2002452c:	d9000615 	stw	r4,24(sp)
20024530:	003ed006 	br	20024074 <__alt_data_end+0xfffe4c74>
20024534:	00800084 	movi	r2,2
20024538:	3081861e 	bne	r6,r2,20024b54 <_dtoa_r+0x1628>
2002453c:	d8000b15 	stw	zero,44(sp)
20024540:	003f3c06 	br	20024234 <__alt_data_end+0xfffe4e34>
20024544:	dc000917 	ldw	r16,36(sp)
20024548:	003e9206 	br	20023f94 <__alt_data_end+0xfffe4b94>
2002454c:	d9c00317 	ldw	r7,12(sp)
20024550:	00800084 	movi	r2,2
20024554:	11fec50e 	bge	r2,r7,2002406c <__alt_data_end+0xfffe4c6c>
20024558:	d9000617 	ldw	r4,24(sp)
2002455c:	20013c1e 	bne	r4,zero,20024a50 <_dtoa_r+0x1524>
20024560:	a80b883a 	mov	r5,r21
20024564:	000f883a 	mov	r7,zero
20024568:	01800144 	movi	r6,5
2002456c:	e009883a 	mov	r4,fp
20024570:	0026b500 	call	20026b50 <__multadd>
20024574:	100b883a 	mov	r5,r2
20024578:	8009883a 	mov	r4,r16
2002457c:	102b883a 	mov	r21,r2
20024580:	00273480 	call	20027348 <__mcmp>
20024584:	dc000915 	stw	r16,36(sp)
20024588:	00bf410e 	bge	zero,r2,20024290 <__alt_data_end+0xfffe4e90>
2002458c:	d9c00717 	ldw	r7,28(sp)
20024590:	00800c44 	movi	r2,49
20024594:	38800005 	stb	r2,0(r7)
20024598:	d8800517 	ldw	r2,20(sp)
2002459c:	3dc00044 	addi	r23,r7,1
200245a0:	10800044 	addi	r2,r2,1
200245a4:	d8800515 	stw	r2,20(sp)
200245a8:	003f3d06 	br	200242a0 <__alt_data_end+0xfffe4ea0>
200245ac:	d9800517 	ldw	r6,20(sp)
200245b0:	d9c00717 	ldw	r7,28(sp)
200245b4:	00800c44 	movi	r2,49
200245b8:	31800044 	addi	r6,r6,1
200245bc:	d9800515 	stw	r6,20(sp)
200245c0:	38800005 	stb	r2,0(r7)
200245c4:	003edf06 	br	20024144 <__alt_data_end+0xfffe4d44>
200245c8:	d8000b15 	stw	zero,44(sp)
200245cc:	003c9f06 	br	2002384c <__alt_data_end+0xfffe444c>
200245d0:	903e7e1e 	bne	r18,zero,20023fcc <__alt_data_end+0xfffe4bcc>
200245d4:	00800434 	movhi	r2,16
200245d8:	10bfffc4 	addi	r2,r2,-1
200245dc:	9884703a 	and	r2,r19,r2
200245e0:	1000ea1e 	bne	r2,zero,2002498c <_dtoa_r+0x1460>
200245e4:	9cdffc2c 	andhi	r19,r19,32752
200245e8:	9800e826 	beq	r19,zero,2002498c <_dtoa_r+0x1460>
200245ec:	d9c00817 	ldw	r7,32(sp)
200245f0:	b5800044 	addi	r22,r22,1
200245f4:	04c00044 	movi	r19,1
200245f8:	39c00044 	addi	r7,r7,1
200245fc:	d9c00815 	stw	r7,32(sp)
20024600:	d8800d17 	ldw	r2,52(sp)
20024604:	103e721e 	bne	r2,zero,20023fd0 <__alt_data_end+0xfffe4bd0>
20024608:	00800044 	movi	r2,1
2002460c:	003e7906 	br	20023ff4 <__alt_data_end+0xfffe4bf4>
20024610:	8009883a 	mov	r4,r16
20024614:	002d3340 	call	2002d334 <__floatsidf>
20024618:	d9800f17 	ldw	r6,60(sp)
2002461c:	d9c01017 	ldw	r7,64(sp)
20024620:	1009883a 	mov	r4,r2
20024624:	180b883a 	mov	r5,r3
20024628:	002c2a00 	call	2002c2a0 <__muldf3>
2002462c:	000d883a 	mov	r6,zero
20024630:	01d00734 	movhi	r7,16412
20024634:	1009883a 	mov	r4,r2
20024638:	180b883a 	mov	r5,r3
2002463c:	002aeb40 	call	2002aeb4 <__adddf3>
20024640:	047f3034 	movhi	r17,64704
20024644:	1021883a 	mov	r16,r2
20024648:	1c63883a 	add	r17,r3,r17
2002464c:	d9000f17 	ldw	r4,60(sp)
20024650:	d9401017 	ldw	r5,64(sp)
20024654:	000d883a 	mov	r6,zero
20024658:	01d00534 	movhi	r7,16404
2002465c:	002c9b80 	call	2002c9b8 <__subdf3>
20024660:	800d883a 	mov	r6,r16
20024664:	880f883a 	mov	r7,r17
20024668:	1009883a 	mov	r4,r2
2002466c:	180b883a 	mov	r5,r3
20024670:	102b883a 	mov	r21,r2
20024674:	1829883a 	mov	r20,r3
20024678:	002c0d00 	call	2002c0d0 <__gedf2>
2002467c:	00806c16 	blt	zero,r2,20024830 <_dtoa_r+0x1304>
20024680:	89e0003c 	xorhi	r7,r17,32768
20024684:	800d883a 	mov	r6,r16
20024688:	a809883a 	mov	r4,r21
2002468c:	a00b883a 	mov	r5,r20
20024690:	002c1ac0 	call	2002c1ac <__ledf2>
20024694:	103d7e0e 	bge	r2,zero,20023c90 <__alt_data_end+0xfffe4890>
20024698:	002b883a 	mov	r21,zero
2002469c:	0023883a 	mov	r17,zero
200246a0:	003efb06 	br	20024290 <__alt_data_end+0xfffe4e90>
200246a4:	d8800717 	ldw	r2,28(sp)
200246a8:	003bd006 	br	200235ec <__alt_data_end+0xfffe41ec>
200246ac:	d9000a17 	ldw	r4,40(sp)
200246b0:	d9800d17 	ldw	r6,52(sp)
200246b4:	dd400a15 	stw	r21,40(sp)
200246b8:	a905c83a 	sub	r2,r21,r4
200246bc:	308d883a 	add	r6,r6,r2
200246c0:	d9800d15 	stw	r6,52(sp)
200246c4:	002b883a 	mov	r21,zero
200246c8:	003e0606 	br	20023ee4 <__alt_data_end+0xfffe4ae4>
200246cc:	9023883a 	mov	r17,r18
200246d0:	9829883a 	mov	r20,r19
200246d4:	04000084 	movi	r16,2
200246d8:	003c9206 	br	20023924 <__alt_data_end+0xfffe4524>
200246dc:	04000044 	movi	r16,1
200246e0:	dc000c15 	stw	r16,48(sp)
200246e4:	dc000615 	stw	r16,24(sp)
200246e8:	dc002215 	stw	r16,136(sp)
200246ec:	e0001115 	stw	zero,68(fp)
200246f0:	000b883a 	mov	r5,zero
200246f4:	003c6906 	br	2002389c <__alt_data_end+0xfffe449c>
200246f8:	3021883a 	mov	r16,r6
200246fc:	003ffb06 	br	200246ec <__alt_data_end+0xfffe52ec>
20024700:	1000021e 	bne	r2,zero,2002470c <_dtoa_r+0x11e0>
20024704:	4200004c 	andi	r8,r8,1
20024708:	403e7d1e 	bne	r8,zero,20024100 <__alt_data_end+0xfffe4d00>
2002470c:	01000c04 	movi	r4,48
20024710:	00000106 	br	20024718 <_dtoa_r+0x11ec>
20024714:	102f883a 	mov	r23,r2
20024718:	b8bfffc4 	addi	r2,r23,-1
2002471c:	10c00007 	ldb	r3,0(r2)
20024720:	193ffc26 	beq	r3,r4,20024714 <__alt_data_end+0xfffe5314>
20024724:	003e8706 	br	20024144 <__alt_data_end+0xfffe4d44>
20024728:	d8800517 	ldw	r2,20(sp)
2002472c:	00a3c83a 	sub	r17,zero,r2
20024730:	8800a426 	beq	r17,zero,200249c4 <_dtoa_r+0x1498>
20024734:	888003cc 	andi	r2,r17,15
20024738:	100490fa 	slli	r2,r2,3
2002473c:	00c800f4 	movhi	r3,8195
20024740:	18ffc904 	addi	r3,r3,-220
20024744:	1885883a 	add	r2,r3,r2
20024748:	11800017 	ldw	r6,0(r2)
2002474c:	11c00117 	ldw	r7,4(r2)
20024750:	9009883a 	mov	r4,r18
20024754:	980b883a 	mov	r5,r19
20024758:	8823d13a 	srai	r17,r17,4
2002475c:	002c2a00 	call	2002c2a0 <__muldf3>
20024760:	d8800f15 	stw	r2,60(sp)
20024764:	d8c01015 	stw	r3,64(sp)
20024768:	8800e826 	beq	r17,zero,20024b0c <_dtoa_r+0x15e0>
2002476c:	050800f4 	movhi	r20,8195
20024770:	a53fbf04 	addi	r20,r20,-260
20024774:	04000084 	movi	r16,2
20024778:	8980004c 	andi	r6,r17,1
2002477c:	1009883a 	mov	r4,r2
20024780:	8823d07a 	srai	r17,r17,1
20024784:	180b883a 	mov	r5,r3
20024788:	30000426 	beq	r6,zero,2002479c <_dtoa_r+0x1270>
2002478c:	a1800017 	ldw	r6,0(r20)
20024790:	a1c00117 	ldw	r7,4(r20)
20024794:	84000044 	addi	r16,r16,1
20024798:	002c2a00 	call	2002c2a0 <__muldf3>
2002479c:	a5000204 	addi	r20,r20,8
200247a0:	883ff51e 	bne	r17,zero,20024778 <__alt_data_end+0xfffe5378>
200247a4:	d8800f15 	stw	r2,60(sp)
200247a8:	d8c01015 	stw	r3,64(sp)
200247ac:	003c7606 	br	20023988 <__alt_data_end+0xfffe4588>
200247b0:	00c00c04 	movi	r3,48
200247b4:	10c00005 	stb	r3,0(r2)
200247b8:	d8c00517 	ldw	r3,20(sp)
200247bc:	bd3fffc3 	ldbu	r20,-1(r23)
200247c0:	18c00044 	addi	r3,r3,1
200247c4:	d8c00515 	stw	r3,20(sp)
200247c8:	003db906 	br	20023eb0 <__alt_data_end+0xfffe4ab0>
200247cc:	89400117 	ldw	r5,4(r17)
200247d0:	e009883a 	mov	r4,fp
200247d4:	0026a800 	call	20026a80 <_Balloc>
200247d8:	89800417 	ldw	r6,16(r17)
200247dc:	89400304 	addi	r5,r17,12
200247e0:	11000304 	addi	r4,r2,12
200247e4:	31800084 	addi	r6,r6,2
200247e8:	318d883a 	add	r6,r6,r6
200247ec:	318d883a 	add	r6,r6,r6
200247f0:	1027883a 	mov	r19,r2
200247f4:	0020b4c0 	call	20020b4c <memcpy>
200247f8:	01800044 	movi	r6,1
200247fc:	980b883a 	mov	r5,r19
20024800:	e009883a 	mov	r4,fp
20024804:	00272000 	call	20027200 <__lshift>
20024808:	1029883a 	mov	r20,r2
2002480c:	003ecc06 	br	20024340 <__alt_data_end+0xfffe4f40>
20024810:	00800e44 	movi	r2,57
20024814:	90809026 	beq	r18,r2,20024a58 <_dtoa_r+0x152c>
20024818:	92000044 	addi	r8,r18,1
2002481c:	003f1f06 	br	2002449c <__alt_data_end+0xfffe509c>
20024820:	9011883a 	mov	r8,r18
20024824:	8825883a 	mov	r18,r17
20024828:	a023883a 	mov	r17,r20
2002482c:	003e2906 	br	200240d4 <__alt_data_end+0xfffe4cd4>
20024830:	002b883a 	mov	r21,zero
20024834:	0023883a 	mov	r17,zero
20024838:	003f5406 	br	2002458c <__alt_data_end+0xfffe518c>
2002483c:	61bfffc4 	addi	r6,r12,-1
20024840:	300490fa 	slli	r2,r6,3
20024844:	00c800f4 	movhi	r3,8195
20024848:	18ffc904 	addi	r3,r3,-220
2002484c:	1885883a 	add	r2,r3,r2
20024850:	11000017 	ldw	r4,0(r2)
20024854:	11400117 	ldw	r5,4(r2)
20024858:	d8800717 	ldw	r2,28(sp)
2002485c:	880f883a 	mov	r7,r17
20024860:	d9801215 	stw	r6,72(sp)
20024864:	800d883a 	mov	r6,r16
20024868:	db001615 	stw	r12,88(sp)
2002486c:	15c00044 	addi	r23,r2,1
20024870:	002c2a00 	call	2002c2a0 <__muldf3>
20024874:	d9401017 	ldw	r5,64(sp)
20024878:	d9000f17 	ldw	r4,60(sp)
2002487c:	d8c01515 	stw	r3,84(sp)
20024880:	d8801415 	stw	r2,80(sp)
20024884:	002d2b40 	call	2002d2b4 <__fixdfsi>
20024888:	1009883a 	mov	r4,r2
2002488c:	1021883a 	mov	r16,r2
20024890:	002d3340 	call	2002d334 <__floatsidf>
20024894:	d9000f17 	ldw	r4,60(sp)
20024898:	d9401017 	ldw	r5,64(sp)
2002489c:	100d883a 	mov	r6,r2
200248a0:	180f883a 	mov	r7,r3
200248a4:	002c9b80 	call	2002c9b8 <__subdf3>
200248a8:	1829883a 	mov	r20,r3
200248ac:	d8c00717 	ldw	r3,28(sp)
200248b0:	84000c04 	addi	r16,r16,48
200248b4:	1023883a 	mov	r17,r2
200248b8:	1c000005 	stb	r16,0(r3)
200248bc:	db001617 	ldw	r12,88(sp)
200248c0:	00800044 	movi	r2,1
200248c4:	60802226 	beq	r12,r2,20024950 <_dtoa_r+0x1424>
200248c8:	d9c00717 	ldw	r7,28(sp)
200248cc:	8805883a 	mov	r2,r17
200248d0:	b82b883a 	mov	r21,r23
200248d4:	3b19883a 	add	r12,r7,r12
200248d8:	6023883a 	mov	r17,r12
200248dc:	a007883a 	mov	r3,r20
200248e0:	dc800f15 	stw	r18,60(sp)
200248e4:	000d883a 	mov	r6,zero
200248e8:	01d00934 	movhi	r7,16420
200248ec:	1009883a 	mov	r4,r2
200248f0:	180b883a 	mov	r5,r3
200248f4:	002c2a00 	call	2002c2a0 <__muldf3>
200248f8:	180b883a 	mov	r5,r3
200248fc:	1009883a 	mov	r4,r2
20024900:	1829883a 	mov	r20,r3
20024904:	1025883a 	mov	r18,r2
20024908:	002d2b40 	call	2002d2b4 <__fixdfsi>
2002490c:	1009883a 	mov	r4,r2
20024910:	1021883a 	mov	r16,r2
20024914:	002d3340 	call	2002d334 <__floatsidf>
20024918:	100d883a 	mov	r6,r2
2002491c:	180f883a 	mov	r7,r3
20024920:	9009883a 	mov	r4,r18
20024924:	a00b883a 	mov	r5,r20
20024928:	84000c04 	addi	r16,r16,48
2002492c:	002c9b80 	call	2002c9b8 <__subdf3>
20024930:	ad400044 	addi	r21,r21,1
20024934:	ac3fffc5 	stb	r16,-1(r21)
20024938:	ac7fea1e 	bne	r21,r17,200248e4 <__alt_data_end+0xfffe54e4>
2002493c:	1023883a 	mov	r17,r2
20024940:	d8801217 	ldw	r2,72(sp)
20024944:	dc800f17 	ldw	r18,60(sp)
20024948:	1829883a 	mov	r20,r3
2002494c:	b8af883a 	add	r23,r23,r2
20024950:	d9001417 	ldw	r4,80(sp)
20024954:	d9401517 	ldw	r5,84(sp)
20024958:	000d883a 	mov	r6,zero
2002495c:	01cff834 	movhi	r7,16352
20024960:	002aeb40 	call	2002aeb4 <__adddf3>
20024964:	880d883a 	mov	r6,r17
20024968:	a00f883a 	mov	r7,r20
2002496c:	1009883a 	mov	r4,r2
20024970:	180b883a 	mov	r5,r3
20024974:	002c1ac0 	call	2002c1ac <__ledf2>
20024978:	10003e0e 	bge	r2,zero,20024a74 <_dtoa_r+0x1548>
2002497c:	d9001317 	ldw	r4,76(sp)
20024980:	bd3fffc3 	ldbu	r20,-1(r23)
20024984:	d9000515 	stw	r4,20(sp)
20024988:	003d3b06 	br	20023e78 <__alt_data_end+0xfffe4a78>
2002498c:	0027883a 	mov	r19,zero
20024990:	003f1b06 	br	20024600 <__alt_data_end+0xfffe5200>
20024994:	d8800817 	ldw	r2,32(sp)
20024998:	11e9c83a 	sub	r20,r2,r7
2002499c:	0005883a 	mov	r2,zero
200249a0:	003d5406 	br	20023ef4 <__alt_data_end+0xfffe4af4>
200249a4:	00800044 	movi	r2,1
200249a8:	003dc706 	br	200240c8 <__alt_data_end+0xfffe4cc8>
200249ac:	d8c00217 	ldw	r3,8(sp)
200249b0:	00800d84 	movi	r2,54
200249b4:	dd400a17 	ldw	r21,40(sp)
200249b8:	10c5c83a 	sub	r2,r2,r3
200249bc:	dd000817 	ldw	r20,32(sp)
200249c0:	003d4c06 	br	20023ef4 <__alt_data_end+0xfffe4af4>
200249c4:	dc800f15 	stw	r18,60(sp)
200249c8:	dcc01015 	stw	r19,64(sp)
200249cc:	04000084 	movi	r16,2
200249d0:	003bed06 	br	20023988 <__alt_data_end+0xfffe4588>
200249d4:	d9000617 	ldw	r4,24(sp)
200249d8:	203f0d26 	beq	r4,zero,20024610 <__alt_data_end+0xfffe5210>
200249dc:	d9800c17 	ldw	r6,48(sp)
200249e0:	01bcab0e 	bge	zero,r6,20023c90 <__alt_data_end+0xfffe4890>
200249e4:	d9401017 	ldw	r5,64(sp)
200249e8:	d9000f17 	ldw	r4,60(sp)
200249ec:	000d883a 	mov	r6,zero
200249f0:	01d00934 	movhi	r7,16420
200249f4:	002c2a00 	call	2002c2a0 <__muldf3>
200249f8:	81000044 	addi	r4,r16,1
200249fc:	d8800f15 	stw	r2,60(sp)
20024a00:	d8c01015 	stw	r3,64(sp)
20024a04:	002d3340 	call	2002d334 <__floatsidf>
20024a08:	d9800f17 	ldw	r6,60(sp)
20024a0c:	d9c01017 	ldw	r7,64(sp)
20024a10:	1009883a 	mov	r4,r2
20024a14:	180b883a 	mov	r5,r3
20024a18:	002c2a00 	call	2002c2a0 <__muldf3>
20024a1c:	01d00734 	movhi	r7,16412
20024a20:	000d883a 	mov	r6,zero
20024a24:	1009883a 	mov	r4,r2
20024a28:	180b883a 	mov	r5,r3
20024a2c:	002aeb40 	call	2002aeb4 <__adddf3>
20024a30:	d9c00517 	ldw	r7,20(sp)
20024a34:	047f3034 	movhi	r17,64704
20024a38:	1021883a 	mov	r16,r2
20024a3c:	39ffffc4 	addi	r7,r7,-1
20024a40:	d9c01315 	stw	r7,76(sp)
20024a44:	1c63883a 	add	r17,r3,r17
20024a48:	db000c17 	ldw	r12,48(sp)
20024a4c:	003bea06 	br	200239f8 <__alt_data_end+0xfffe45f8>
20024a50:	dc000915 	stw	r16,36(sp)
20024a54:	003e0e06 	br	20024290 <__alt_data_end+0xfffe4e90>
20024a58:	01000e44 	movi	r4,57
20024a5c:	8825883a 	mov	r18,r17
20024a60:	9dc00044 	addi	r23,r19,1
20024a64:	99000005 	stb	r4,0(r19)
20024a68:	a023883a 	mov	r17,r20
20024a6c:	dc000915 	stw	r16,36(sp)
20024a70:	003da406 	br	20024104 <__alt_data_end+0xfffe4d04>
20024a74:	d9801417 	ldw	r6,80(sp)
20024a78:	d9c01517 	ldw	r7,84(sp)
20024a7c:	0009883a 	mov	r4,zero
20024a80:	014ff834 	movhi	r5,16352
20024a84:	002c9b80 	call	2002c9b8 <__subdf3>
20024a88:	880d883a 	mov	r6,r17
20024a8c:	a00f883a 	mov	r7,r20
20024a90:	1009883a 	mov	r4,r2
20024a94:	180b883a 	mov	r5,r3
20024a98:	002c0d00 	call	2002c0d0 <__gedf2>
20024a9c:	00bc7c0e 	bge	zero,r2,20023c90 <__alt_data_end+0xfffe4890>
20024aa0:	01000c04 	movi	r4,48
20024aa4:	00000106 	br	20024aac <_dtoa_r+0x1580>
20024aa8:	102f883a 	mov	r23,r2
20024aac:	b8bfffc4 	addi	r2,r23,-1
20024ab0:	10c00007 	ldb	r3,0(r2)
20024ab4:	193ffc26 	beq	r3,r4,20024aa8 <__alt_data_end+0xfffe56a8>
20024ab8:	d9801317 	ldw	r6,76(sp)
20024abc:	d9800515 	stw	r6,20(sp)
20024ac0:	003c4406 	br	20023bd4 <__alt_data_end+0xfffe47d4>
20024ac4:	d9801317 	ldw	r6,76(sp)
20024ac8:	d9800515 	stw	r6,20(sp)
20024acc:	003cea06 	br	20023e78 <__alt_data_end+0xfffe4a78>
20024ad0:	dd800f17 	ldw	r22,60(sp)
20024ad4:	dcc01017 	ldw	r19,64(sp)
20024ad8:	dc801217 	ldw	r18,72(sp)
20024adc:	003c6c06 	br	20023c90 <__alt_data_end+0xfffe4890>
20024ae0:	903e031e 	bne	r18,zero,200242f0 <__alt_data_end+0xfffe4ef0>
20024ae4:	003ebb06 	br	200245d4 <__alt_data_end+0xfffe51d4>
20024ae8:	103e6c1e 	bne	r2,zero,2002449c <__alt_data_end+0xfffe509c>
20024aec:	4080004c 	andi	r2,r8,1
20024af0:	103e6a26 	beq	r2,zero,2002449c <__alt_data_end+0xfffe509c>
20024af4:	003e6606 	br	20024490 <__alt_data_end+0xfffe5090>
20024af8:	d8c00317 	ldw	r3,12(sp)
20024afc:	00800084 	movi	r2,2
20024b00:	10c02916 	blt	r2,r3,20024ba8 <_dtoa_r+0x167c>
20024b04:	d9000c17 	ldw	r4,48(sp)
20024b08:	003e8806 	br	2002452c <__alt_data_end+0xfffe512c>
20024b0c:	04000084 	movi	r16,2
20024b10:	003b9d06 	br	20023988 <__alt_data_end+0xfffe4588>
20024b14:	d9001317 	ldw	r4,76(sp)
20024b18:	d9000515 	stw	r4,20(sp)
20024b1c:	003cd606 	br	20023e78 <__alt_data_end+0xfffe4a78>
20024b20:	d8801317 	ldw	r2,76(sp)
20024b24:	d8800515 	stw	r2,20(sp)
20024b28:	003c2a06 	br	20023bd4 <__alt_data_end+0xfffe47d4>
20024b2c:	d9800317 	ldw	r6,12(sp)
20024b30:	00800084 	movi	r2,2
20024b34:	11801516 	blt	r2,r6,20024b8c <_dtoa_r+0x1660>
20024b38:	d9c00c17 	ldw	r7,48(sp)
20024b3c:	d9c00615 	stw	r7,24(sp)
20024b40:	003df706 	br	20024320 <__alt_data_end+0xfffe4f20>
20024b44:	193d3926 	beq	r3,r4,2002402c <__alt_data_end+0xfffe4c2c>
20024b48:	00c00f04 	movi	r3,60
20024b4c:	1885c83a 	sub	r2,r3,r2
20024b50:	003ddf06 	br	200242d0 <__alt_data_end+0xfffe4ed0>
20024b54:	e009883a 	mov	r4,fp
20024b58:	e0001115 	stw	zero,68(fp)
20024b5c:	000b883a 	mov	r5,zero
20024b60:	0026a800 	call	20026a80 <_Balloc>
20024b64:	d8800715 	stw	r2,28(sp)
20024b68:	d8c00717 	ldw	r3,28(sp)
20024b6c:	00bfffc4 	movi	r2,-1
20024b70:	01000044 	movi	r4,1
20024b74:	d8800c15 	stw	r2,48(sp)
20024b78:	e0c01015 	stw	r3,64(fp)
20024b7c:	d9000b15 	stw	r4,44(sp)
20024b80:	d8800615 	stw	r2,24(sp)
20024b84:	d8002215 	stw	zero,136(sp)
20024b88:	003c4106 	br	20023c90 <__alt_data_end+0xfffe4890>
20024b8c:	d8c00c17 	ldw	r3,48(sp)
20024b90:	d8c00615 	stw	r3,24(sp)
20024b94:	003e7006 	br	20024558 <__alt_data_end+0xfffe5158>
20024b98:	04400044 	movi	r17,1
20024b9c:	003b2006 	br	20023820 <__alt_data_end+0xfffe4420>
20024ba0:	000b883a 	mov	r5,zero
20024ba4:	003b3d06 	br	2002389c <__alt_data_end+0xfffe449c>
20024ba8:	d8800c17 	ldw	r2,48(sp)
20024bac:	d8800615 	stw	r2,24(sp)
20024bb0:	003e6906 	br	20024558 <__alt_data_end+0xfffe5158>

20024bb4 <__sflush_r>:
20024bb4:	2880030b 	ldhu	r2,12(r5)
20024bb8:	defffb04 	addi	sp,sp,-20
20024bbc:	dcc00315 	stw	r19,12(sp)
20024bc0:	dc400115 	stw	r17,4(sp)
20024bc4:	dfc00415 	stw	ra,16(sp)
20024bc8:	dc800215 	stw	r18,8(sp)
20024bcc:	dc000015 	stw	r16,0(sp)
20024bd0:	10c0020c 	andi	r3,r2,8
20024bd4:	2823883a 	mov	r17,r5
20024bd8:	2027883a 	mov	r19,r4
20024bdc:	1800311e 	bne	r3,zero,20024ca4 <__sflush_r+0xf0>
20024be0:	28c00117 	ldw	r3,4(r5)
20024be4:	10820014 	ori	r2,r2,2048
20024be8:	2880030d 	sth	r2,12(r5)
20024bec:	00c04b0e 	bge	zero,r3,20024d1c <__sflush_r+0x168>
20024bf0:	8a000a17 	ldw	r8,40(r17)
20024bf4:	40002326 	beq	r8,zero,20024c84 <__sflush_r+0xd0>
20024bf8:	9c000017 	ldw	r16,0(r19)
20024bfc:	10c4000c 	andi	r3,r2,4096
20024c00:	98000015 	stw	zero,0(r19)
20024c04:	18004826 	beq	r3,zero,20024d28 <__sflush_r+0x174>
20024c08:	89801417 	ldw	r6,80(r17)
20024c0c:	10c0010c 	andi	r3,r2,4
20024c10:	18000626 	beq	r3,zero,20024c2c <__sflush_r+0x78>
20024c14:	88c00117 	ldw	r3,4(r17)
20024c18:	88800c17 	ldw	r2,48(r17)
20024c1c:	30cdc83a 	sub	r6,r6,r3
20024c20:	10000226 	beq	r2,zero,20024c2c <__sflush_r+0x78>
20024c24:	88800f17 	ldw	r2,60(r17)
20024c28:	308dc83a 	sub	r6,r6,r2
20024c2c:	89400717 	ldw	r5,28(r17)
20024c30:	000f883a 	mov	r7,zero
20024c34:	9809883a 	mov	r4,r19
20024c38:	403ee83a 	callr	r8
20024c3c:	00ffffc4 	movi	r3,-1
20024c40:	10c04426 	beq	r2,r3,20024d54 <__sflush_r+0x1a0>
20024c44:	88c0030b 	ldhu	r3,12(r17)
20024c48:	89000417 	ldw	r4,16(r17)
20024c4c:	88000115 	stw	zero,4(r17)
20024c50:	197dffcc 	andi	r5,r3,63487
20024c54:	8940030d 	sth	r5,12(r17)
20024c58:	89000015 	stw	r4,0(r17)
20024c5c:	18c4000c 	andi	r3,r3,4096
20024c60:	18002c1e 	bne	r3,zero,20024d14 <__sflush_r+0x160>
20024c64:	89400c17 	ldw	r5,48(r17)
20024c68:	9c000015 	stw	r16,0(r19)
20024c6c:	28000526 	beq	r5,zero,20024c84 <__sflush_r+0xd0>
20024c70:	88801004 	addi	r2,r17,64
20024c74:	28800226 	beq	r5,r2,20024c80 <__sflush_r+0xcc>
20024c78:	9809883a 	mov	r4,r19
20024c7c:	00253200 	call	20025320 <_free_r>
20024c80:	88000c15 	stw	zero,48(r17)
20024c84:	0005883a 	mov	r2,zero
20024c88:	dfc00417 	ldw	ra,16(sp)
20024c8c:	dcc00317 	ldw	r19,12(sp)
20024c90:	dc800217 	ldw	r18,8(sp)
20024c94:	dc400117 	ldw	r17,4(sp)
20024c98:	dc000017 	ldw	r16,0(sp)
20024c9c:	dec00504 	addi	sp,sp,20
20024ca0:	f800283a 	ret
20024ca4:	2c800417 	ldw	r18,16(r5)
20024ca8:	903ff626 	beq	r18,zero,20024c84 <__alt_data_end+0xfffe5884>
20024cac:	2c000017 	ldw	r16,0(r5)
20024cb0:	108000cc 	andi	r2,r2,3
20024cb4:	2c800015 	stw	r18,0(r5)
20024cb8:	84a1c83a 	sub	r16,r16,r18
20024cbc:	1000131e 	bne	r2,zero,20024d0c <__sflush_r+0x158>
20024cc0:	28800517 	ldw	r2,20(r5)
20024cc4:	88800215 	stw	r2,8(r17)
20024cc8:	04000316 	blt	zero,r16,20024cd8 <__sflush_r+0x124>
20024ccc:	003fed06 	br	20024c84 <__alt_data_end+0xfffe5884>
20024cd0:	90a5883a 	add	r18,r18,r2
20024cd4:	043feb0e 	bge	zero,r16,20024c84 <__alt_data_end+0xfffe5884>
20024cd8:	88800917 	ldw	r2,36(r17)
20024cdc:	89400717 	ldw	r5,28(r17)
20024ce0:	800f883a 	mov	r7,r16
20024ce4:	900d883a 	mov	r6,r18
20024ce8:	9809883a 	mov	r4,r19
20024cec:	103ee83a 	callr	r2
20024cf0:	80a1c83a 	sub	r16,r16,r2
20024cf4:	00bff616 	blt	zero,r2,20024cd0 <__alt_data_end+0xfffe58d0>
20024cf8:	88c0030b 	ldhu	r3,12(r17)
20024cfc:	00bfffc4 	movi	r2,-1
20024d00:	18c01014 	ori	r3,r3,64
20024d04:	88c0030d 	sth	r3,12(r17)
20024d08:	003fdf06 	br	20024c88 <__alt_data_end+0xfffe5888>
20024d0c:	0005883a 	mov	r2,zero
20024d10:	003fec06 	br	20024cc4 <__alt_data_end+0xfffe58c4>
20024d14:	88801415 	stw	r2,80(r17)
20024d18:	003fd206 	br	20024c64 <__alt_data_end+0xfffe5864>
20024d1c:	28c00f17 	ldw	r3,60(r5)
20024d20:	00ffb316 	blt	zero,r3,20024bf0 <__alt_data_end+0xfffe57f0>
20024d24:	003fd706 	br	20024c84 <__alt_data_end+0xfffe5884>
20024d28:	89400717 	ldw	r5,28(r17)
20024d2c:	000d883a 	mov	r6,zero
20024d30:	01c00044 	movi	r7,1
20024d34:	9809883a 	mov	r4,r19
20024d38:	403ee83a 	callr	r8
20024d3c:	100d883a 	mov	r6,r2
20024d40:	00bfffc4 	movi	r2,-1
20024d44:	30801426 	beq	r6,r2,20024d98 <__sflush_r+0x1e4>
20024d48:	8880030b 	ldhu	r2,12(r17)
20024d4c:	8a000a17 	ldw	r8,40(r17)
20024d50:	003fae06 	br	20024c0c <__alt_data_end+0xfffe580c>
20024d54:	98c00017 	ldw	r3,0(r19)
20024d58:	183fba26 	beq	r3,zero,20024c44 <__alt_data_end+0xfffe5844>
20024d5c:	01000744 	movi	r4,29
20024d60:	19000626 	beq	r3,r4,20024d7c <__sflush_r+0x1c8>
20024d64:	01000584 	movi	r4,22
20024d68:	19000426 	beq	r3,r4,20024d7c <__sflush_r+0x1c8>
20024d6c:	88c0030b 	ldhu	r3,12(r17)
20024d70:	18c01014 	ori	r3,r3,64
20024d74:	88c0030d 	sth	r3,12(r17)
20024d78:	003fc306 	br	20024c88 <__alt_data_end+0xfffe5888>
20024d7c:	8880030b 	ldhu	r2,12(r17)
20024d80:	88c00417 	ldw	r3,16(r17)
20024d84:	88000115 	stw	zero,4(r17)
20024d88:	10bdffcc 	andi	r2,r2,63487
20024d8c:	8880030d 	sth	r2,12(r17)
20024d90:	88c00015 	stw	r3,0(r17)
20024d94:	003fb306 	br	20024c64 <__alt_data_end+0xfffe5864>
20024d98:	98800017 	ldw	r2,0(r19)
20024d9c:	103fea26 	beq	r2,zero,20024d48 <__alt_data_end+0xfffe5948>
20024da0:	00c00744 	movi	r3,29
20024da4:	10c00226 	beq	r2,r3,20024db0 <__sflush_r+0x1fc>
20024da8:	00c00584 	movi	r3,22
20024dac:	10c0031e 	bne	r2,r3,20024dbc <__sflush_r+0x208>
20024db0:	9c000015 	stw	r16,0(r19)
20024db4:	0005883a 	mov	r2,zero
20024db8:	003fb306 	br	20024c88 <__alt_data_end+0xfffe5888>
20024dbc:	88c0030b 	ldhu	r3,12(r17)
20024dc0:	3005883a 	mov	r2,r6
20024dc4:	18c01014 	ori	r3,r3,64
20024dc8:	88c0030d 	sth	r3,12(r17)
20024dcc:	003fae06 	br	20024c88 <__alt_data_end+0xfffe5888>

20024dd0 <_fflush_r>:
20024dd0:	defffd04 	addi	sp,sp,-12
20024dd4:	dc000115 	stw	r16,4(sp)
20024dd8:	dfc00215 	stw	ra,8(sp)
20024ddc:	2021883a 	mov	r16,r4
20024de0:	20000226 	beq	r4,zero,20024dec <_fflush_r+0x1c>
20024de4:	20800e17 	ldw	r2,56(r4)
20024de8:	10000c26 	beq	r2,zero,20024e1c <_fflush_r+0x4c>
20024dec:	2880030f 	ldh	r2,12(r5)
20024df0:	1000051e 	bne	r2,zero,20024e08 <_fflush_r+0x38>
20024df4:	0005883a 	mov	r2,zero
20024df8:	dfc00217 	ldw	ra,8(sp)
20024dfc:	dc000117 	ldw	r16,4(sp)
20024e00:	dec00304 	addi	sp,sp,12
20024e04:	f800283a 	ret
20024e08:	8009883a 	mov	r4,r16
20024e0c:	dfc00217 	ldw	ra,8(sp)
20024e10:	dc000117 	ldw	r16,4(sp)
20024e14:	dec00304 	addi	sp,sp,12
20024e18:	0024bb41 	jmpi	20024bb4 <__sflush_r>
20024e1c:	d9400015 	stw	r5,0(sp)
20024e20:	00251ac0 	call	200251ac <__sinit>
20024e24:	d9400017 	ldw	r5,0(sp)
20024e28:	003ff006 	br	20024dec <__alt_data_end+0xfffe59ec>

20024e2c <fflush>:
20024e2c:	20000526 	beq	r4,zero,20024e44 <fflush+0x18>
20024e30:	008800f4 	movhi	r2,8195
20024e34:	1086fa04 	addi	r2,r2,7144
20024e38:	200b883a 	mov	r5,r4
20024e3c:	11000017 	ldw	r4,0(r2)
20024e40:	0024dd01 	jmpi	20024dd0 <_fflush_r>
20024e44:	008800f4 	movhi	r2,8195
20024e48:	1086f904 	addi	r2,r2,7140
20024e4c:	11000017 	ldw	r4,0(r2)
20024e50:	014800b4 	movhi	r5,8194
20024e54:	29537404 	addi	r5,r5,19920
20024e58:	0025bb01 	jmpi	20025bb0 <_fwalk_reent>

20024e5c <__fp_unlock>:
20024e5c:	0005883a 	mov	r2,zero
20024e60:	f800283a 	ret

20024e64 <_cleanup_r>:
20024e64:	014800f4 	movhi	r5,8195
20024e68:	29675004 	addi	r5,r5,-25280
20024e6c:	0025bb01 	jmpi	20025bb0 <_fwalk_reent>

20024e70 <__sinit.part.1>:
20024e70:	defff704 	addi	sp,sp,-36
20024e74:	00c800b4 	movhi	r3,8194
20024e78:	dfc00815 	stw	ra,32(sp)
20024e7c:	ddc00715 	stw	r23,28(sp)
20024e80:	dd800615 	stw	r22,24(sp)
20024e84:	dd400515 	stw	r21,20(sp)
20024e88:	dd000415 	stw	r20,16(sp)
20024e8c:	dcc00315 	stw	r19,12(sp)
20024e90:	dc800215 	stw	r18,8(sp)
20024e94:	dc400115 	stw	r17,4(sp)
20024e98:	dc000015 	stw	r16,0(sp)
20024e9c:	18d39904 	addi	r3,r3,20068
20024ea0:	24000117 	ldw	r16,4(r4)
20024ea4:	20c00f15 	stw	r3,60(r4)
20024ea8:	2080bb04 	addi	r2,r4,748
20024eac:	00c000c4 	movi	r3,3
20024eb0:	20c0b915 	stw	r3,740(r4)
20024eb4:	2080ba15 	stw	r2,744(r4)
20024eb8:	2000b815 	stw	zero,736(r4)
20024ebc:	05c00204 	movi	r23,8
20024ec0:	00800104 	movi	r2,4
20024ec4:	2025883a 	mov	r18,r4
20024ec8:	b80d883a 	mov	r6,r23
20024ecc:	81001704 	addi	r4,r16,92
20024ed0:	000b883a 	mov	r5,zero
20024ed4:	80000015 	stw	zero,0(r16)
20024ed8:	80000115 	stw	zero,4(r16)
20024edc:	80000215 	stw	zero,8(r16)
20024ee0:	8080030d 	sth	r2,12(r16)
20024ee4:	80001915 	stw	zero,100(r16)
20024ee8:	8000038d 	sth	zero,14(r16)
20024eec:	80000415 	stw	zero,16(r16)
20024ef0:	80000515 	stw	zero,20(r16)
20024ef4:	80000615 	stw	zero,24(r16)
20024ef8:	00269580 	call	20026958 <memset>
20024efc:	058800f4 	movhi	r22,8195
20024f00:	94400217 	ldw	r17,8(r18)
20024f04:	054800f4 	movhi	r21,8195
20024f08:	050800f4 	movhi	r20,8195
20024f0c:	04c800f4 	movhi	r19,8195
20024f10:	b5a08404 	addi	r22,r22,-32240
20024f14:	ad609b04 	addi	r21,r21,-32148
20024f18:	a520ba04 	addi	r20,r20,-32024
20024f1c:	9ce0d104 	addi	r19,r19,-31932
20024f20:	85800815 	stw	r22,32(r16)
20024f24:	85400915 	stw	r21,36(r16)
20024f28:	85000a15 	stw	r20,40(r16)
20024f2c:	84c00b15 	stw	r19,44(r16)
20024f30:	84000715 	stw	r16,28(r16)
20024f34:	00800284 	movi	r2,10
20024f38:	8880030d 	sth	r2,12(r17)
20024f3c:	00800044 	movi	r2,1
20024f40:	b80d883a 	mov	r6,r23
20024f44:	89001704 	addi	r4,r17,92
20024f48:	000b883a 	mov	r5,zero
20024f4c:	88000015 	stw	zero,0(r17)
20024f50:	88000115 	stw	zero,4(r17)
20024f54:	88000215 	stw	zero,8(r17)
20024f58:	88001915 	stw	zero,100(r17)
20024f5c:	8880038d 	sth	r2,14(r17)
20024f60:	88000415 	stw	zero,16(r17)
20024f64:	88000515 	stw	zero,20(r17)
20024f68:	88000615 	stw	zero,24(r17)
20024f6c:	00269580 	call	20026958 <memset>
20024f70:	94000317 	ldw	r16,12(r18)
20024f74:	00800484 	movi	r2,18
20024f78:	8c400715 	stw	r17,28(r17)
20024f7c:	8d800815 	stw	r22,32(r17)
20024f80:	8d400915 	stw	r21,36(r17)
20024f84:	8d000a15 	stw	r20,40(r17)
20024f88:	8cc00b15 	stw	r19,44(r17)
20024f8c:	8080030d 	sth	r2,12(r16)
20024f90:	00800084 	movi	r2,2
20024f94:	80000015 	stw	zero,0(r16)
20024f98:	80000115 	stw	zero,4(r16)
20024f9c:	80000215 	stw	zero,8(r16)
20024fa0:	80001915 	stw	zero,100(r16)
20024fa4:	8080038d 	sth	r2,14(r16)
20024fa8:	80000415 	stw	zero,16(r16)
20024fac:	80000515 	stw	zero,20(r16)
20024fb0:	80000615 	stw	zero,24(r16)
20024fb4:	b80d883a 	mov	r6,r23
20024fb8:	000b883a 	mov	r5,zero
20024fbc:	81001704 	addi	r4,r16,92
20024fc0:	00269580 	call	20026958 <memset>
20024fc4:	00800044 	movi	r2,1
20024fc8:	84000715 	stw	r16,28(r16)
20024fcc:	85800815 	stw	r22,32(r16)
20024fd0:	85400915 	stw	r21,36(r16)
20024fd4:	85000a15 	stw	r20,40(r16)
20024fd8:	84c00b15 	stw	r19,44(r16)
20024fdc:	90800e15 	stw	r2,56(r18)
20024fe0:	dfc00817 	ldw	ra,32(sp)
20024fe4:	ddc00717 	ldw	r23,28(sp)
20024fe8:	dd800617 	ldw	r22,24(sp)
20024fec:	dd400517 	ldw	r21,20(sp)
20024ff0:	dd000417 	ldw	r20,16(sp)
20024ff4:	dcc00317 	ldw	r19,12(sp)
20024ff8:	dc800217 	ldw	r18,8(sp)
20024ffc:	dc400117 	ldw	r17,4(sp)
20025000:	dc000017 	ldw	r16,0(sp)
20025004:	dec00904 	addi	sp,sp,36
20025008:	f800283a 	ret

2002500c <__fp_lock>:
2002500c:	0005883a 	mov	r2,zero
20025010:	f800283a 	ret

20025014 <__sfmoreglue>:
20025014:	defffc04 	addi	sp,sp,-16
20025018:	dc400115 	stw	r17,4(sp)
2002501c:	2c7fffc4 	addi	r17,r5,-1
20025020:	8c401a24 	muli	r17,r17,104
20025024:	dc800215 	stw	r18,8(sp)
20025028:	2825883a 	mov	r18,r5
2002502c:	89401d04 	addi	r5,r17,116
20025030:	dc000015 	stw	r16,0(sp)
20025034:	dfc00315 	stw	ra,12(sp)
20025038:	0025f0c0 	call	20025f0c <_malloc_r>
2002503c:	1021883a 	mov	r16,r2
20025040:	10000726 	beq	r2,zero,20025060 <__sfmoreglue+0x4c>
20025044:	11000304 	addi	r4,r2,12
20025048:	10000015 	stw	zero,0(r2)
2002504c:	14800115 	stw	r18,4(r2)
20025050:	11000215 	stw	r4,8(r2)
20025054:	89801a04 	addi	r6,r17,104
20025058:	000b883a 	mov	r5,zero
2002505c:	00269580 	call	20026958 <memset>
20025060:	8005883a 	mov	r2,r16
20025064:	dfc00317 	ldw	ra,12(sp)
20025068:	dc800217 	ldw	r18,8(sp)
2002506c:	dc400117 	ldw	r17,4(sp)
20025070:	dc000017 	ldw	r16,0(sp)
20025074:	dec00404 	addi	sp,sp,16
20025078:	f800283a 	ret

2002507c <__sfp>:
2002507c:	defffb04 	addi	sp,sp,-20
20025080:	dc000015 	stw	r16,0(sp)
20025084:	040800f4 	movhi	r16,8195
20025088:	8406f904 	addi	r16,r16,7140
2002508c:	dcc00315 	stw	r19,12(sp)
20025090:	2027883a 	mov	r19,r4
20025094:	81000017 	ldw	r4,0(r16)
20025098:	dfc00415 	stw	ra,16(sp)
2002509c:	dc800215 	stw	r18,8(sp)
200250a0:	20800e17 	ldw	r2,56(r4)
200250a4:	dc400115 	stw	r17,4(sp)
200250a8:	1000021e 	bne	r2,zero,200250b4 <__sfp+0x38>
200250ac:	0024e700 	call	20024e70 <__sinit.part.1>
200250b0:	81000017 	ldw	r4,0(r16)
200250b4:	2480b804 	addi	r18,r4,736
200250b8:	047fffc4 	movi	r17,-1
200250bc:	91000117 	ldw	r4,4(r18)
200250c0:	94000217 	ldw	r16,8(r18)
200250c4:	213fffc4 	addi	r4,r4,-1
200250c8:	20000a16 	blt	r4,zero,200250f4 <__sfp+0x78>
200250cc:	8080030f 	ldh	r2,12(r16)
200250d0:	10000c26 	beq	r2,zero,20025104 <__sfp+0x88>
200250d4:	80c01d04 	addi	r3,r16,116
200250d8:	00000206 	br	200250e4 <__sfp+0x68>
200250dc:	18bfe60f 	ldh	r2,-104(r3)
200250e0:	10000826 	beq	r2,zero,20025104 <__sfp+0x88>
200250e4:	213fffc4 	addi	r4,r4,-1
200250e8:	1c3ffd04 	addi	r16,r3,-12
200250ec:	18c01a04 	addi	r3,r3,104
200250f0:	247ffa1e 	bne	r4,r17,200250dc <__alt_data_end+0xfffe5cdc>
200250f4:	90800017 	ldw	r2,0(r18)
200250f8:	10001d26 	beq	r2,zero,20025170 <__sfp+0xf4>
200250fc:	1025883a 	mov	r18,r2
20025100:	003fee06 	br	200250bc <__alt_data_end+0xfffe5cbc>
20025104:	00bfffc4 	movi	r2,-1
20025108:	8080038d 	sth	r2,14(r16)
2002510c:	00800044 	movi	r2,1
20025110:	8080030d 	sth	r2,12(r16)
20025114:	80001915 	stw	zero,100(r16)
20025118:	80000015 	stw	zero,0(r16)
2002511c:	80000215 	stw	zero,8(r16)
20025120:	80000115 	stw	zero,4(r16)
20025124:	80000415 	stw	zero,16(r16)
20025128:	80000515 	stw	zero,20(r16)
2002512c:	80000615 	stw	zero,24(r16)
20025130:	01800204 	movi	r6,8
20025134:	000b883a 	mov	r5,zero
20025138:	81001704 	addi	r4,r16,92
2002513c:	00269580 	call	20026958 <memset>
20025140:	8005883a 	mov	r2,r16
20025144:	80000c15 	stw	zero,48(r16)
20025148:	80000d15 	stw	zero,52(r16)
2002514c:	80001115 	stw	zero,68(r16)
20025150:	80001215 	stw	zero,72(r16)
20025154:	dfc00417 	ldw	ra,16(sp)
20025158:	dcc00317 	ldw	r19,12(sp)
2002515c:	dc800217 	ldw	r18,8(sp)
20025160:	dc400117 	ldw	r17,4(sp)
20025164:	dc000017 	ldw	r16,0(sp)
20025168:	dec00504 	addi	sp,sp,20
2002516c:	f800283a 	ret
20025170:	01400104 	movi	r5,4
20025174:	9809883a 	mov	r4,r19
20025178:	00250140 	call	20025014 <__sfmoreglue>
2002517c:	90800015 	stw	r2,0(r18)
20025180:	103fde1e 	bne	r2,zero,200250fc <__alt_data_end+0xfffe5cfc>
20025184:	00800304 	movi	r2,12
20025188:	98800015 	stw	r2,0(r19)
2002518c:	0005883a 	mov	r2,zero
20025190:	003ff006 	br	20025154 <__alt_data_end+0xfffe5d54>

20025194 <_cleanup>:
20025194:	008800f4 	movhi	r2,8195
20025198:	1086f904 	addi	r2,r2,7140
2002519c:	11000017 	ldw	r4,0(r2)
200251a0:	014800f4 	movhi	r5,8195
200251a4:	29675004 	addi	r5,r5,-25280
200251a8:	0025bb01 	jmpi	20025bb0 <_fwalk_reent>

200251ac <__sinit>:
200251ac:	20800e17 	ldw	r2,56(r4)
200251b0:	10000126 	beq	r2,zero,200251b8 <__sinit+0xc>
200251b4:	f800283a 	ret
200251b8:	0024e701 	jmpi	20024e70 <__sinit.part.1>

200251bc <__sfp_lock_acquire>:
200251bc:	f800283a 	ret

200251c0 <__sfp_lock_release>:
200251c0:	f800283a 	ret

200251c4 <__sinit_lock_acquire>:
200251c4:	f800283a 	ret

200251c8 <__sinit_lock_release>:
200251c8:	f800283a 	ret

200251cc <__fp_lock_all>:
200251cc:	008800f4 	movhi	r2,8195
200251d0:	1086fa04 	addi	r2,r2,7144
200251d4:	11000017 	ldw	r4,0(r2)
200251d8:	014800b4 	movhi	r5,8194
200251dc:	29540304 	addi	r5,r5,20492
200251e0:	0025aec1 	jmpi	20025aec <_fwalk>

200251e4 <__fp_unlock_all>:
200251e4:	008800f4 	movhi	r2,8195
200251e8:	1086fa04 	addi	r2,r2,7144
200251ec:	11000017 	ldw	r4,0(r2)
200251f0:	014800b4 	movhi	r5,8194
200251f4:	29539704 	addi	r5,r5,20060
200251f8:	0025aec1 	jmpi	20025aec <_fwalk>

200251fc <_malloc_trim_r>:
200251fc:	defffb04 	addi	sp,sp,-20
20025200:	dcc00315 	stw	r19,12(sp)
20025204:	04c800f4 	movhi	r19,8195
20025208:	dc800215 	stw	r18,8(sp)
2002520c:	dc400115 	stw	r17,4(sp)
20025210:	dc000015 	stw	r16,0(sp)
20025214:	dfc00415 	stw	ra,16(sp)
20025218:	2821883a 	mov	r16,r5
2002521c:	9cc17504 	addi	r19,r19,1492
20025220:	2025883a 	mov	r18,r4
20025224:	002dae00 	call	2002dae0 <__malloc_lock>
20025228:	98800217 	ldw	r2,8(r19)
2002522c:	14400117 	ldw	r17,4(r2)
20025230:	00bfff04 	movi	r2,-4
20025234:	88a2703a 	and	r17,r17,r2
20025238:	8c21c83a 	sub	r16,r17,r16
2002523c:	8403fbc4 	addi	r16,r16,4079
20025240:	8020d33a 	srli	r16,r16,12
20025244:	0083ffc4 	movi	r2,4095
20025248:	843fffc4 	addi	r16,r16,-1
2002524c:	8020933a 	slli	r16,r16,12
20025250:	1400060e 	bge	r2,r16,2002526c <_malloc_trim_r+0x70>
20025254:	000b883a 	mov	r5,zero
20025258:	9009883a 	mov	r4,r18
2002525c:	00281bc0 	call	200281bc <_sbrk_r>
20025260:	98c00217 	ldw	r3,8(r19)
20025264:	1c47883a 	add	r3,r3,r17
20025268:	10c00a26 	beq	r2,r3,20025294 <_malloc_trim_r+0x98>
2002526c:	9009883a 	mov	r4,r18
20025270:	002db040 	call	2002db04 <__malloc_unlock>
20025274:	0005883a 	mov	r2,zero
20025278:	dfc00417 	ldw	ra,16(sp)
2002527c:	dcc00317 	ldw	r19,12(sp)
20025280:	dc800217 	ldw	r18,8(sp)
20025284:	dc400117 	ldw	r17,4(sp)
20025288:	dc000017 	ldw	r16,0(sp)
2002528c:	dec00504 	addi	sp,sp,20
20025290:	f800283a 	ret
20025294:	040bc83a 	sub	r5,zero,r16
20025298:	9009883a 	mov	r4,r18
2002529c:	00281bc0 	call	200281bc <_sbrk_r>
200252a0:	00ffffc4 	movi	r3,-1
200252a4:	10c00d26 	beq	r2,r3,200252dc <_malloc_trim_r+0xe0>
200252a8:	00c800f4 	movhi	r3,8195
200252ac:	18cdd104 	addi	r3,r3,14148
200252b0:	18800017 	ldw	r2,0(r3)
200252b4:	99000217 	ldw	r4,8(r19)
200252b8:	8c23c83a 	sub	r17,r17,r16
200252bc:	8c400054 	ori	r17,r17,1
200252c0:	1421c83a 	sub	r16,r2,r16
200252c4:	24400115 	stw	r17,4(r4)
200252c8:	9009883a 	mov	r4,r18
200252cc:	1c000015 	stw	r16,0(r3)
200252d0:	002db040 	call	2002db04 <__malloc_unlock>
200252d4:	00800044 	movi	r2,1
200252d8:	003fe706 	br	20025278 <__alt_data_end+0xfffe5e78>
200252dc:	000b883a 	mov	r5,zero
200252e0:	9009883a 	mov	r4,r18
200252e4:	00281bc0 	call	200281bc <_sbrk_r>
200252e8:	99000217 	ldw	r4,8(r19)
200252ec:	014003c4 	movi	r5,15
200252f0:	1107c83a 	sub	r3,r2,r4
200252f4:	28ffdd0e 	bge	r5,r3,2002526c <__alt_data_end+0xfffe5e6c>
200252f8:	014800f4 	movhi	r5,8195
200252fc:	2946fc04 	addi	r5,r5,7152
20025300:	29400017 	ldw	r5,0(r5)
20025304:	18c00054 	ori	r3,r3,1
20025308:	20c00115 	stw	r3,4(r4)
2002530c:	00c800f4 	movhi	r3,8195
20025310:	1145c83a 	sub	r2,r2,r5
20025314:	18cdd104 	addi	r3,r3,14148
20025318:	18800015 	stw	r2,0(r3)
2002531c:	003fd306 	br	2002526c <__alt_data_end+0xfffe5e6c>

20025320 <_free_r>:
20025320:	28004126 	beq	r5,zero,20025428 <_free_r+0x108>
20025324:	defffd04 	addi	sp,sp,-12
20025328:	dc400115 	stw	r17,4(sp)
2002532c:	dc000015 	stw	r16,0(sp)
20025330:	2023883a 	mov	r17,r4
20025334:	2821883a 	mov	r16,r5
20025338:	dfc00215 	stw	ra,8(sp)
2002533c:	002dae00 	call	2002dae0 <__malloc_lock>
20025340:	81ffff17 	ldw	r7,-4(r16)
20025344:	00bfff84 	movi	r2,-2
20025348:	010800f4 	movhi	r4,8195
2002534c:	81bffe04 	addi	r6,r16,-8
20025350:	3884703a 	and	r2,r7,r2
20025354:	21017504 	addi	r4,r4,1492
20025358:	308b883a 	add	r5,r6,r2
2002535c:	2a400117 	ldw	r9,4(r5)
20025360:	22000217 	ldw	r8,8(r4)
20025364:	00ffff04 	movi	r3,-4
20025368:	48c6703a 	and	r3,r9,r3
2002536c:	2a005726 	beq	r5,r8,200254cc <_free_r+0x1ac>
20025370:	28c00115 	stw	r3,4(r5)
20025374:	39c0004c 	andi	r7,r7,1
20025378:	3800091e 	bne	r7,zero,200253a0 <_free_r+0x80>
2002537c:	823ffe17 	ldw	r8,-8(r16)
20025380:	22400204 	addi	r9,r4,8
20025384:	320dc83a 	sub	r6,r6,r8
20025388:	31c00217 	ldw	r7,8(r6)
2002538c:	1205883a 	add	r2,r2,r8
20025390:	3a406526 	beq	r7,r9,20025528 <_free_r+0x208>
20025394:	32000317 	ldw	r8,12(r6)
20025398:	3a000315 	stw	r8,12(r7)
2002539c:	41c00215 	stw	r7,8(r8)
200253a0:	28cf883a 	add	r7,r5,r3
200253a4:	39c00117 	ldw	r7,4(r7)
200253a8:	39c0004c 	andi	r7,r7,1
200253ac:	38003a26 	beq	r7,zero,20025498 <_free_r+0x178>
200253b0:	10c00054 	ori	r3,r2,1
200253b4:	30c00115 	stw	r3,4(r6)
200253b8:	3087883a 	add	r3,r6,r2
200253bc:	18800015 	stw	r2,0(r3)
200253c0:	00c07fc4 	movi	r3,511
200253c4:	18801936 	bltu	r3,r2,2002542c <_free_r+0x10c>
200253c8:	1004d0fa 	srli	r2,r2,3
200253cc:	01c00044 	movi	r7,1
200253d0:	21400117 	ldw	r5,4(r4)
200253d4:	10c00044 	addi	r3,r2,1
200253d8:	18c7883a 	add	r3,r3,r3
200253dc:	1005d0ba 	srai	r2,r2,2
200253e0:	18c7883a 	add	r3,r3,r3
200253e4:	18c7883a 	add	r3,r3,r3
200253e8:	1907883a 	add	r3,r3,r4
200253ec:	3884983a 	sll	r2,r7,r2
200253f0:	19c00017 	ldw	r7,0(r3)
200253f4:	1a3ffe04 	addi	r8,r3,-8
200253f8:	1144b03a 	or	r2,r2,r5
200253fc:	32000315 	stw	r8,12(r6)
20025400:	31c00215 	stw	r7,8(r6)
20025404:	20800115 	stw	r2,4(r4)
20025408:	19800015 	stw	r6,0(r3)
2002540c:	39800315 	stw	r6,12(r7)
20025410:	8809883a 	mov	r4,r17
20025414:	dfc00217 	ldw	ra,8(sp)
20025418:	dc400117 	ldw	r17,4(sp)
2002541c:	dc000017 	ldw	r16,0(sp)
20025420:	dec00304 	addi	sp,sp,12
20025424:	002db041 	jmpi	2002db04 <__malloc_unlock>
20025428:	f800283a 	ret
2002542c:	100ad27a 	srli	r5,r2,9
20025430:	00c00104 	movi	r3,4
20025434:	19404a36 	bltu	r3,r5,20025560 <_free_r+0x240>
20025438:	100ad1ba 	srli	r5,r2,6
2002543c:	28c00e44 	addi	r3,r5,57
20025440:	18c7883a 	add	r3,r3,r3
20025444:	29400e04 	addi	r5,r5,56
20025448:	18c7883a 	add	r3,r3,r3
2002544c:	18c7883a 	add	r3,r3,r3
20025450:	1909883a 	add	r4,r3,r4
20025454:	20c00017 	ldw	r3,0(r4)
20025458:	01c800f4 	movhi	r7,8195
2002545c:	213ffe04 	addi	r4,r4,-8
20025460:	39c17504 	addi	r7,r7,1492
20025464:	20c04426 	beq	r4,r3,20025578 <_free_r+0x258>
20025468:	01ffff04 	movi	r7,-4
2002546c:	19400117 	ldw	r5,4(r3)
20025470:	29ca703a 	and	r5,r5,r7
20025474:	1140022e 	bgeu	r2,r5,20025480 <_free_r+0x160>
20025478:	18c00217 	ldw	r3,8(r3)
2002547c:	20fffb1e 	bne	r4,r3,2002546c <__alt_data_end+0xfffe606c>
20025480:	19000317 	ldw	r4,12(r3)
20025484:	31000315 	stw	r4,12(r6)
20025488:	30c00215 	stw	r3,8(r6)
2002548c:	21800215 	stw	r6,8(r4)
20025490:	19800315 	stw	r6,12(r3)
20025494:	003fde06 	br	20025410 <__alt_data_end+0xfffe6010>
20025498:	29c00217 	ldw	r7,8(r5)
2002549c:	10c5883a 	add	r2,r2,r3
200254a0:	00c800f4 	movhi	r3,8195
200254a4:	18c17704 	addi	r3,r3,1500
200254a8:	38c03b26 	beq	r7,r3,20025598 <_free_r+0x278>
200254ac:	2a000317 	ldw	r8,12(r5)
200254b0:	11400054 	ori	r5,r2,1
200254b4:	3087883a 	add	r3,r6,r2
200254b8:	3a000315 	stw	r8,12(r7)
200254bc:	41c00215 	stw	r7,8(r8)
200254c0:	31400115 	stw	r5,4(r6)
200254c4:	18800015 	stw	r2,0(r3)
200254c8:	003fbd06 	br	200253c0 <__alt_data_end+0xfffe5fc0>
200254cc:	39c0004c 	andi	r7,r7,1
200254d0:	10c5883a 	add	r2,r2,r3
200254d4:	3800071e 	bne	r7,zero,200254f4 <_free_r+0x1d4>
200254d8:	81fffe17 	ldw	r7,-8(r16)
200254dc:	31cdc83a 	sub	r6,r6,r7
200254e0:	30c00317 	ldw	r3,12(r6)
200254e4:	31400217 	ldw	r5,8(r6)
200254e8:	11c5883a 	add	r2,r2,r7
200254ec:	28c00315 	stw	r3,12(r5)
200254f0:	19400215 	stw	r5,8(r3)
200254f4:	10c00054 	ori	r3,r2,1
200254f8:	30c00115 	stw	r3,4(r6)
200254fc:	00c800f4 	movhi	r3,8195
20025500:	18c6fd04 	addi	r3,r3,7156
20025504:	18c00017 	ldw	r3,0(r3)
20025508:	21800215 	stw	r6,8(r4)
2002550c:	10ffc036 	bltu	r2,r3,20025410 <__alt_data_end+0xfffe6010>
20025510:	008800f4 	movhi	r2,8195
20025514:	108dc904 	addi	r2,r2,14116
20025518:	11400017 	ldw	r5,0(r2)
2002551c:	8809883a 	mov	r4,r17
20025520:	00251fc0 	call	200251fc <_malloc_trim_r>
20025524:	003fba06 	br	20025410 <__alt_data_end+0xfffe6010>
20025528:	28c9883a 	add	r4,r5,r3
2002552c:	21000117 	ldw	r4,4(r4)
20025530:	2100004c 	andi	r4,r4,1
20025534:	2000391e 	bne	r4,zero,2002561c <_free_r+0x2fc>
20025538:	29c00217 	ldw	r7,8(r5)
2002553c:	29000317 	ldw	r4,12(r5)
20025540:	1885883a 	add	r2,r3,r2
20025544:	10c00054 	ori	r3,r2,1
20025548:	39000315 	stw	r4,12(r7)
2002554c:	21c00215 	stw	r7,8(r4)
20025550:	30c00115 	stw	r3,4(r6)
20025554:	308d883a 	add	r6,r6,r2
20025558:	30800015 	stw	r2,0(r6)
2002555c:	003fac06 	br	20025410 <__alt_data_end+0xfffe6010>
20025560:	00c00504 	movi	r3,20
20025564:	19401536 	bltu	r3,r5,200255bc <_free_r+0x29c>
20025568:	28c01704 	addi	r3,r5,92
2002556c:	18c7883a 	add	r3,r3,r3
20025570:	294016c4 	addi	r5,r5,91
20025574:	003fb406 	br	20025448 <__alt_data_end+0xfffe6048>
20025578:	280bd0ba 	srai	r5,r5,2
2002557c:	00c00044 	movi	r3,1
20025580:	38800117 	ldw	r2,4(r7)
20025584:	194a983a 	sll	r5,r3,r5
20025588:	2007883a 	mov	r3,r4
2002558c:	2884b03a 	or	r2,r5,r2
20025590:	38800115 	stw	r2,4(r7)
20025594:	003fbb06 	br	20025484 <__alt_data_end+0xfffe6084>
20025598:	21800515 	stw	r6,20(r4)
2002559c:	21800415 	stw	r6,16(r4)
200255a0:	10c00054 	ori	r3,r2,1
200255a4:	31c00315 	stw	r7,12(r6)
200255a8:	31c00215 	stw	r7,8(r6)
200255ac:	30c00115 	stw	r3,4(r6)
200255b0:	308d883a 	add	r6,r6,r2
200255b4:	30800015 	stw	r2,0(r6)
200255b8:	003f9506 	br	20025410 <__alt_data_end+0xfffe6010>
200255bc:	00c01504 	movi	r3,84
200255c0:	19400536 	bltu	r3,r5,200255d8 <_free_r+0x2b8>
200255c4:	100ad33a 	srli	r5,r2,12
200255c8:	28c01bc4 	addi	r3,r5,111
200255cc:	18c7883a 	add	r3,r3,r3
200255d0:	29401b84 	addi	r5,r5,110
200255d4:	003f9c06 	br	20025448 <__alt_data_end+0xfffe6048>
200255d8:	00c05504 	movi	r3,340
200255dc:	19400536 	bltu	r3,r5,200255f4 <_free_r+0x2d4>
200255e0:	100ad3fa 	srli	r5,r2,15
200255e4:	28c01e04 	addi	r3,r5,120
200255e8:	18c7883a 	add	r3,r3,r3
200255ec:	29401dc4 	addi	r5,r5,119
200255f0:	003f9506 	br	20025448 <__alt_data_end+0xfffe6048>
200255f4:	00c15504 	movi	r3,1364
200255f8:	19400536 	bltu	r3,r5,20025610 <_free_r+0x2f0>
200255fc:	100ad4ba 	srli	r5,r2,18
20025600:	28c01f44 	addi	r3,r5,125
20025604:	18c7883a 	add	r3,r3,r3
20025608:	29401f04 	addi	r5,r5,124
2002560c:	003f8e06 	br	20025448 <__alt_data_end+0xfffe6048>
20025610:	00c03f84 	movi	r3,254
20025614:	01401f84 	movi	r5,126
20025618:	003f8b06 	br	20025448 <__alt_data_end+0xfffe6048>
2002561c:	10c00054 	ori	r3,r2,1
20025620:	30c00115 	stw	r3,4(r6)
20025624:	308d883a 	add	r6,r6,r2
20025628:	30800015 	stw	r2,0(r6)
2002562c:	003f7806 	br	20025410 <__alt_data_end+0xfffe6010>

20025630 <__sfvwrite_r>:
20025630:	30800217 	ldw	r2,8(r6)
20025634:	10006726 	beq	r2,zero,200257d4 <__sfvwrite_r+0x1a4>
20025638:	28c0030b 	ldhu	r3,12(r5)
2002563c:	defff404 	addi	sp,sp,-48
20025640:	dd400715 	stw	r21,28(sp)
20025644:	dd000615 	stw	r20,24(sp)
20025648:	dc000215 	stw	r16,8(sp)
2002564c:	dfc00b15 	stw	ra,44(sp)
20025650:	df000a15 	stw	fp,40(sp)
20025654:	ddc00915 	stw	r23,36(sp)
20025658:	dd800815 	stw	r22,32(sp)
2002565c:	dcc00515 	stw	r19,20(sp)
20025660:	dc800415 	stw	r18,16(sp)
20025664:	dc400315 	stw	r17,12(sp)
20025668:	1880020c 	andi	r2,r3,8
2002566c:	2821883a 	mov	r16,r5
20025670:	202b883a 	mov	r21,r4
20025674:	3029883a 	mov	r20,r6
20025678:	10002726 	beq	r2,zero,20025718 <__sfvwrite_r+0xe8>
2002567c:	28800417 	ldw	r2,16(r5)
20025680:	10002526 	beq	r2,zero,20025718 <__sfvwrite_r+0xe8>
20025684:	1880008c 	andi	r2,r3,2
20025688:	a4400017 	ldw	r17,0(r20)
2002568c:	10002a26 	beq	r2,zero,20025738 <__sfvwrite_r+0x108>
20025690:	05a00034 	movhi	r22,32768
20025694:	0027883a 	mov	r19,zero
20025698:	0025883a 	mov	r18,zero
2002569c:	b5bf0004 	addi	r22,r22,-1024
200256a0:	980d883a 	mov	r6,r19
200256a4:	a809883a 	mov	r4,r21
200256a8:	90004626 	beq	r18,zero,200257c4 <__sfvwrite_r+0x194>
200256ac:	900f883a 	mov	r7,r18
200256b0:	b480022e 	bgeu	r22,r18,200256bc <__sfvwrite_r+0x8c>
200256b4:	01e00034 	movhi	r7,32768
200256b8:	39ff0004 	addi	r7,r7,-1024
200256bc:	80800917 	ldw	r2,36(r16)
200256c0:	81400717 	ldw	r5,28(r16)
200256c4:	103ee83a 	callr	r2
200256c8:	0080570e 	bge	zero,r2,20025828 <__sfvwrite_r+0x1f8>
200256cc:	a0c00217 	ldw	r3,8(r20)
200256d0:	98a7883a 	add	r19,r19,r2
200256d4:	90a5c83a 	sub	r18,r18,r2
200256d8:	1885c83a 	sub	r2,r3,r2
200256dc:	a0800215 	stw	r2,8(r20)
200256e0:	103fef1e 	bne	r2,zero,200256a0 <__alt_data_end+0xfffe62a0>
200256e4:	0005883a 	mov	r2,zero
200256e8:	dfc00b17 	ldw	ra,44(sp)
200256ec:	df000a17 	ldw	fp,40(sp)
200256f0:	ddc00917 	ldw	r23,36(sp)
200256f4:	dd800817 	ldw	r22,32(sp)
200256f8:	dd400717 	ldw	r21,28(sp)
200256fc:	dd000617 	ldw	r20,24(sp)
20025700:	dcc00517 	ldw	r19,20(sp)
20025704:	dc800417 	ldw	r18,16(sp)
20025708:	dc400317 	ldw	r17,12(sp)
2002570c:	dc000217 	ldw	r16,8(sp)
20025710:	dec00c04 	addi	sp,sp,48
20025714:	f800283a 	ret
20025718:	800b883a 	mov	r5,r16
2002571c:	a809883a 	mov	r4,r21
20025720:	00231d80 	call	200231d8 <__swsetup_r>
20025724:	1000eb1e 	bne	r2,zero,20025ad4 <__sfvwrite_r+0x4a4>
20025728:	80c0030b 	ldhu	r3,12(r16)
2002572c:	a4400017 	ldw	r17,0(r20)
20025730:	1880008c 	andi	r2,r3,2
20025734:	103fd61e 	bne	r2,zero,20025690 <__alt_data_end+0xfffe6290>
20025738:	1880004c 	andi	r2,r3,1
2002573c:	10003f1e 	bne	r2,zero,2002583c <__sfvwrite_r+0x20c>
20025740:	0039883a 	mov	fp,zero
20025744:	0025883a 	mov	r18,zero
20025748:	90001a26 	beq	r18,zero,200257b4 <__sfvwrite_r+0x184>
2002574c:	1880800c 	andi	r2,r3,512
20025750:	84c00217 	ldw	r19,8(r16)
20025754:	10002126 	beq	r2,zero,200257dc <__sfvwrite_r+0x1ac>
20025758:	982f883a 	mov	r23,r19
2002575c:	94c09336 	bltu	r18,r19,200259ac <__sfvwrite_r+0x37c>
20025760:	1881200c 	andi	r2,r3,1152
20025764:	10009e1e 	bne	r2,zero,200259e0 <__sfvwrite_r+0x3b0>
20025768:	81000017 	ldw	r4,0(r16)
2002576c:	b80d883a 	mov	r6,r23
20025770:	e00b883a 	mov	r5,fp
20025774:	00267fc0 	call	200267fc <memmove>
20025778:	80c00217 	ldw	r3,8(r16)
2002577c:	81000017 	ldw	r4,0(r16)
20025780:	9005883a 	mov	r2,r18
20025784:	1ce7c83a 	sub	r19,r3,r19
20025788:	25cf883a 	add	r7,r4,r23
2002578c:	84c00215 	stw	r19,8(r16)
20025790:	81c00015 	stw	r7,0(r16)
20025794:	a0c00217 	ldw	r3,8(r20)
20025798:	e0b9883a 	add	fp,fp,r2
2002579c:	90a5c83a 	sub	r18,r18,r2
200257a0:	18a7c83a 	sub	r19,r3,r2
200257a4:	a4c00215 	stw	r19,8(r20)
200257a8:	983fce26 	beq	r19,zero,200256e4 <__alt_data_end+0xfffe62e4>
200257ac:	80c0030b 	ldhu	r3,12(r16)
200257b0:	903fe61e 	bne	r18,zero,2002574c <__alt_data_end+0xfffe634c>
200257b4:	8f000017 	ldw	fp,0(r17)
200257b8:	8c800117 	ldw	r18,4(r17)
200257bc:	8c400204 	addi	r17,r17,8
200257c0:	003fe106 	br	20025748 <__alt_data_end+0xfffe6348>
200257c4:	8cc00017 	ldw	r19,0(r17)
200257c8:	8c800117 	ldw	r18,4(r17)
200257cc:	8c400204 	addi	r17,r17,8
200257d0:	003fb306 	br	200256a0 <__alt_data_end+0xfffe62a0>
200257d4:	0005883a 	mov	r2,zero
200257d8:	f800283a 	ret
200257dc:	81000017 	ldw	r4,0(r16)
200257e0:	80800417 	ldw	r2,16(r16)
200257e4:	11005736 	bltu	r2,r4,20025944 <__sfvwrite_r+0x314>
200257e8:	85c00517 	ldw	r23,20(r16)
200257ec:	95c05536 	bltu	r18,r23,20025944 <__sfvwrite_r+0x314>
200257f0:	00a00034 	movhi	r2,32768
200257f4:	10bfffc4 	addi	r2,r2,-1
200257f8:	9009883a 	mov	r4,r18
200257fc:	1480012e 	bgeu	r2,r18,20025804 <__sfvwrite_r+0x1d4>
20025800:	1009883a 	mov	r4,r2
20025804:	b80b883a 	mov	r5,r23
20025808:	00209980 	call	20020998 <__divsi3>
2002580c:	15cf383a 	mul	r7,r2,r23
20025810:	81400717 	ldw	r5,28(r16)
20025814:	80800917 	ldw	r2,36(r16)
20025818:	e00d883a 	mov	r6,fp
2002581c:	a809883a 	mov	r4,r21
20025820:	103ee83a 	callr	r2
20025824:	00bfdb16 	blt	zero,r2,20025794 <__alt_data_end+0xfffe6394>
20025828:	8080030b 	ldhu	r2,12(r16)
2002582c:	10801014 	ori	r2,r2,64
20025830:	8080030d 	sth	r2,12(r16)
20025834:	00bfffc4 	movi	r2,-1
20025838:	003fab06 	br	200256e8 <__alt_data_end+0xfffe62e8>
2002583c:	0027883a 	mov	r19,zero
20025840:	0011883a 	mov	r8,zero
20025844:	0039883a 	mov	fp,zero
20025848:	0025883a 	mov	r18,zero
2002584c:	90001f26 	beq	r18,zero,200258cc <__sfvwrite_r+0x29c>
20025850:	40005a26 	beq	r8,zero,200259bc <__sfvwrite_r+0x38c>
20025854:	982d883a 	mov	r22,r19
20025858:	94c0012e 	bgeu	r18,r19,20025860 <__sfvwrite_r+0x230>
2002585c:	902d883a 	mov	r22,r18
20025860:	81000017 	ldw	r4,0(r16)
20025864:	80800417 	ldw	r2,16(r16)
20025868:	b02f883a 	mov	r23,r22
2002586c:	81c00517 	ldw	r7,20(r16)
20025870:	1100032e 	bgeu	r2,r4,20025880 <__sfvwrite_r+0x250>
20025874:	80c00217 	ldw	r3,8(r16)
20025878:	38c7883a 	add	r3,r7,r3
2002587c:	1d801816 	blt	r3,r22,200258e0 <__sfvwrite_r+0x2b0>
20025880:	b1c03e16 	blt	r22,r7,2002597c <__sfvwrite_r+0x34c>
20025884:	80800917 	ldw	r2,36(r16)
20025888:	81400717 	ldw	r5,28(r16)
2002588c:	e00d883a 	mov	r6,fp
20025890:	da000115 	stw	r8,4(sp)
20025894:	a809883a 	mov	r4,r21
20025898:	103ee83a 	callr	r2
2002589c:	102f883a 	mov	r23,r2
200258a0:	da000117 	ldw	r8,4(sp)
200258a4:	00bfe00e 	bge	zero,r2,20025828 <__alt_data_end+0xfffe6428>
200258a8:	9de7c83a 	sub	r19,r19,r23
200258ac:	98001f26 	beq	r19,zero,2002592c <__sfvwrite_r+0x2fc>
200258b0:	a0800217 	ldw	r2,8(r20)
200258b4:	e5f9883a 	add	fp,fp,r23
200258b8:	95e5c83a 	sub	r18,r18,r23
200258bc:	15efc83a 	sub	r23,r2,r23
200258c0:	a5c00215 	stw	r23,8(r20)
200258c4:	b83f8726 	beq	r23,zero,200256e4 <__alt_data_end+0xfffe62e4>
200258c8:	903fe11e 	bne	r18,zero,20025850 <__alt_data_end+0xfffe6450>
200258cc:	8f000017 	ldw	fp,0(r17)
200258d0:	8c800117 	ldw	r18,4(r17)
200258d4:	0011883a 	mov	r8,zero
200258d8:	8c400204 	addi	r17,r17,8
200258dc:	003fdb06 	br	2002584c <__alt_data_end+0xfffe644c>
200258e0:	180d883a 	mov	r6,r3
200258e4:	e00b883a 	mov	r5,fp
200258e8:	da000115 	stw	r8,4(sp)
200258ec:	d8c00015 	stw	r3,0(sp)
200258f0:	00267fc0 	call	200267fc <memmove>
200258f4:	d8c00017 	ldw	r3,0(sp)
200258f8:	80800017 	ldw	r2,0(r16)
200258fc:	800b883a 	mov	r5,r16
20025900:	a809883a 	mov	r4,r21
20025904:	10c5883a 	add	r2,r2,r3
20025908:	80800015 	stw	r2,0(r16)
2002590c:	d8c00015 	stw	r3,0(sp)
20025910:	0024dd00 	call	20024dd0 <_fflush_r>
20025914:	d8c00017 	ldw	r3,0(sp)
20025918:	da000117 	ldw	r8,4(sp)
2002591c:	103fc21e 	bne	r2,zero,20025828 <__alt_data_end+0xfffe6428>
20025920:	182f883a 	mov	r23,r3
20025924:	9de7c83a 	sub	r19,r19,r23
20025928:	983fe11e 	bne	r19,zero,200258b0 <__alt_data_end+0xfffe64b0>
2002592c:	800b883a 	mov	r5,r16
20025930:	a809883a 	mov	r4,r21
20025934:	0024dd00 	call	20024dd0 <_fflush_r>
20025938:	103fbb1e 	bne	r2,zero,20025828 <__alt_data_end+0xfffe6428>
2002593c:	0011883a 	mov	r8,zero
20025940:	003fdb06 	br	200258b0 <__alt_data_end+0xfffe64b0>
20025944:	94c0012e 	bgeu	r18,r19,2002594c <__sfvwrite_r+0x31c>
20025948:	9027883a 	mov	r19,r18
2002594c:	980d883a 	mov	r6,r19
20025950:	e00b883a 	mov	r5,fp
20025954:	00267fc0 	call	200267fc <memmove>
20025958:	80800217 	ldw	r2,8(r16)
2002595c:	80c00017 	ldw	r3,0(r16)
20025960:	14c5c83a 	sub	r2,r2,r19
20025964:	1cc7883a 	add	r3,r3,r19
20025968:	80800215 	stw	r2,8(r16)
2002596c:	80c00015 	stw	r3,0(r16)
20025970:	10004326 	beq	r2,zero,20025a80 <__sfvwrite_r+0x450>
20025974:	9805883a 	mov	r2,r19
20025978:	003f8606 	br	20025794 <__alt_data_end+0xfffe6394>
2002597c:	b00d883a 	mov	r6,r22
20025980:	e00b883a 	mov	r5,fp
20025984:	da000115 	stw	r8,4(sp)
20025988:	00267fc0 	call	200267fc <memmove>
2002598c:	80800217 	ldw	r2,8(r16)
20025990:	80c00017 	ldw	r3,0(r16)
20025994:	da000117 	ldw	r8,4(sp)
20025998:	1585c83a 	sub	r2,r2,r22
2002599c:	1dad883a 	add	r22,r3,r22
200259a0:	80800215 	stw	r2,8(r16)
200259a4:	85800015 	stw	r22,0(r16)
200259a8:	003fbf06 	br	200258a8 <__alt_data_end+0xfffe64a8>
200259ac:	81000017 	ldw	r4,0(r16)
200259b0:	9027883a 	mov	r19,r18
200259b4:	902f883a 	mov	r23,r18
200259b8:	003f6c06 	br	2002576c <__alt_data_end+0xfffe636c>
200259bc:	900d883a 	mov	r6,r18
200259c0:	01400284 	movi	r5,10
200259c4:	e009883a 	mov	r4,fp
200259c8:	00267180 	call	20026718 <memchr>
200259cc:	10003e26 	beq	r2,zero,20025ac8 <__sfvwrite_r+0x498>
200259d0:	10800044 	addi	r2,r2,1
200259d4:	1727c83a 	sub	r19,r2,fp
200259d8:	02000044 	movi	r8,1
200259dc:	003f9d06 	br	20025854 <__alt_data_end+0xfffe6454>
200259e0:	80800517 	ldw	r2,20(r16)
200259e4:	81400417 	ldw	r5,16(r16)
200259e8:	81c00017 	ldw	r7,0(r16)
200259ec:	10a7883a 	add	r19,r2,r2
200259f0:	9885883a 	add	r2,r19,r2
200259f4:	1026d7fa 	srli	r19,r2,31
200259f8:	396dc83a 	sub	r22,r7,r5
200259fc:	b1000044 	addi	r4,r22,1
20025a00:	9885883a 	add	r2,r19,r2
20025a04:	1027d07a 	srai	r19,r2,1
20025a08:	2485883a 	add	r2,r4,r18
20025a0c:	980d883a 	mov	r6,r19
20025a10:	9880022e 	bgeu	r19,r2,20025a1c <__sfvwrite_r+0x3ec>
20025a14:	1027883a 	mov	r19,r2
20025a18:	100d883a 	mov	r6,r2
20025a1c:	18c1000c 	andi	r3,r3,1024
20025a20:	18001c26 	beq	r3,zero,20025a94 <__sfvwrite_r+0x464>
20025a24:	300b883a 	mov	r5,r6
20025a28:	a809883a 	mov	r4,r21
20025a2c:	0025f0c0 	call	20025f0c <_malloc_r>
20025a30:	102f883a 	mov	r23,r2
20025a34:	10002926 	beq	r2,zero,20025adc <__sfvwrite_r+0x4ac>
20025a38:	81400417 	ldw	r5,16(r16)
20025a3c:	b00d883a 	mov	r6,r22
20025a40:	1009883a 	mov	r4,r2
20025a44:	0020b4c0 	call	20020b4c <memcpy>
20025a48:	8080030b 	ldhu	r2,12(r16)
20025a4c:	00fedfc4 	movi	r3,-1153
20025a50:	10c4703a 	and	r2,r2,r3
20025a54:	10802014 	ori	r2,r2,128
20025a58:	8080030d 	sth	r2,12(r16)
20025a5c:	bd89883a 	add	r4,r23,r22
20025a60:	9d8fc83a 	sub	r7,r19,r22
20025a64:	85c00415 	stw	r23,16(r16)
20025a68:	84c00515 	stw	r19,20(r16)
20025a6c:	81000015 	stw	r4,0(r16)
20025a70:	9027883a 	mov	r19,r18
20025a74:	81c00215 	stw	r7,8(r16)
20025a78:	902f883a 	mov	r23,r18
20025a7c:	003f3b06 	br	2002576c <__alt_data_end+0xfffe636c>
20025a80:	800b883a 	mov	r5,r16
20025a84:	a809883a 	mov	r4,r21
20025a88:	0024dd00 	call	20024dd0 <_fflush_r>
20025a8c:	103fb926 	beq	r2,zero,20025974 <__alt_data_end+0xfffe6574>
20025a90:	003f6506 	br	20025828 <__alt_data_end+0xfffe6428>
20025a94:	a809883a 	mov	r4,r21
20025a98:	0027be40 	call	20027be4 <_realloc_r>
20025a9c:	102f883a 	mov	r23,r2
20025aa0:	103fee1e 	bne	r2,zero,20025a5c <__alt_data_end+0xfffe665c>
20025aa4:	81400417 	ldw	r5,16(r16)
20025aa8:	a809883a 	mov	r4,r21
20025aac:	00253200 	call	20025320 <_free_r>
20025ab0:	8080030b 	ldhu	r2,12(r16)
20025ab4:	00ffdfc4 	movi	r3,-129
20025ab8:	1884703a 	and	r2,r3,r2
20025abc:	00c00304 	movi	r3,12
20025ac0:	a8c00015 	stw	r3,0(r21)
20025ac4:	003f5906 	br	2002582c <__alt_data_end+0xfffe642c>
20025ac8:	94c00044 	addi	r19,r18,1
20025acc:	02000044 	movi	r8,1
20025ad0:	003f6006 	br	20025854 <__alt_data_end+0xfffe6454>
20025ad4:	00bfffc4 	movi	r2,-1
20025ad8:	003f0306 	br	200256e8 <__alt_data_end+0xfffe62e8>
20025adc:	00800304 	movi	r2,12
20025ae0:	a8800015 	stw	r2,0(r21)
20025ae4:	8080030b 	ldhu	r2,12(r16)
20025ae8:	003f5006 	br	2002582c <__alt_data_end+0xfffe642c>

20025aec <_fwalk>:
20025aec:	defff704 	addi	sp,sp,-36
20025af0:	dd000415 	stw	r20,16(sp)
20025af4:	dfc00815 	stw	ra,32(sp)
20025af8:	ddc00715 	stw	r23,28(sp)
20025afc:	dd800615 	stw	r22,24(sp)
20025b00:	dd400515 	stw	r21,20(sp)
20025b04:	dcc00315 	stw	r19,12(sp)
20025b08:	dc800215 	stw	r18,8(sp)
20025b0c:	dc400115 	stw	r17,4(sp)
20025b10:	dc000015 	stw	r16,0(sp)
20025b14:	2500b804 	addi	r20,r4,736
20025b18:	a0002326 	beq	r20,zero,20025ba8 <_fwalk+0xbc>
20025b1c:	282b883a 	mov	r21,r5
20025b20:	002f883a 	mov	r23,zero
20025b24:	05800044 	movi	r22,1
20025b28:	04ffffc4 	movi	r19,-1
20025b2c:	a4400117 	ldw	r17,4(r20)
20025b30:	a4800217 	ldw	r18,8(r20)
20025b34:	8c7fffc4 	addi	r17,r17,-1
20025b38:	88000d16 	blt	r17,zero,20025b70 <_fwalk+0x84>
20025b3c:	94000304 	addi	r16,r18,12
20025b40:	94800384 	addi	r18,r18,14
20025b44:	8080000b 	ldhu	r2,0(r16)
20025b48:	8c7fffc4 	addi	r17,r17,-1
20025b4c:	813ffd04 	addi	r4,r16,-12
20025b50:	b080042e 	bgeu	r22,r2,20025b64 <_fwalk+0x78>
20025b54:	9080000f 	ldh	r2,0(r18)
20025b58:	14c00226 	beq	r2,r19,20025b64 <_fwalk+0x78>
20025b5c:	a83ee83a 	callr	r21
20025b60:	b8aeb03a 	or	r23,r23,r2
20025b64:	84001a04 	addi	r16,r16,104
20025b68:	94801a04 	addi	r18,r18,104
20025b6c:	8cfff51e 	bne	r17,r19,20025b44 <__alt_data_end+0xfffe6744>
20025b70:	a5000017 	ldw	r20,0(r20)
20025b74:	a03fed1e 	bne	r20,zero,20025b2c <__alt_data_end+0xfffe672c>
20025b78:	b805883a 	mov	r2,r23
20025b7c:	dfc00817 	ldw	ra,32(sp)
20025b80:	ddc00717 	ldw	r23,28(sp)
20025b84:	dd800617 	ldw	r22,24(sp)
20025b88:	dd400517 	ldw	r21,20(sp)
20025b8c:	dd000417 	ldw	r20,16(sp)
20025b90:	dcc00317 	ldw	r19,12(sp)
20025b94:	dc800217 	ldw	r18,8(sp)
20025b98:	dc400117 	ldw	r17,4(sp)
20025b9c:	dc000017 	ldw	r16,0(sp)
20025ba0:	dec00904 	addi	sp,sp,36
20025ba4:	f800283a 	ret
20025ba8:	002f883a 	mov	r23,zero
20025bac:	003ff206 	br	20025b78 <__alt_data_end+0xfffe6778>

20025bb0 <_fwalk_reent>:
20025bb0:	defff704 	addi	sp,sp,-36
20025bb4:	dd000415 	stw	r20,16(sp)
20025bb8:	dfc00815 	stw	ra,32(sp)
20025bbc:	ddc00715 	stw	r23,28(sp)
20025bc0:	dd800615 	stw	r22,24(sp)
20025bc4:	dd400515 	stw	r21,20(sp)
20025bc8:	dcc00315 	stw	r19,12(sp)
20025bcc:	dc800215 	stw	r18,8(sp)
20025bd0:	dc400115 	stw	r17,4(sp)
20025bd4:	dc000015 	stw	r16,0(sp)
20025bd8:	2500b804 	addi	r20,r4,736
20025bdc:	a0002326 	beq	r20,zero,20025c6c <_fwalk_reent+0xbc>
20025be0:	282b883a 	mov	r21,r5
20025be4:	2027883a 	mov	r19,r4
20025be8:	002f883a 	mov	r23,zero
20025bec:	05800044 	movi	r22,1
20025bf0:	04bfffc4 	movi	r18,-1
20025bf4:	a4400117 	ldw	r17,4(r20)
20025bf8:	a4000217 	ldw	r16,8(r20)
20025bfc:	8c7fffc4 	addi	r17,r17,-1
20025c00:	88000c16 	blt	r17,zero,20025c34 <_fwalk_reent+0x84>
20025c04:	84000304 	addi	r16,r16,12
20025c08:	8080000b 	ldhu	r2,0(r16)
20025c0c:	8c7fffc4 	addi	r17,r17,-1
20025c10:	817ffd04 	addi	r5,r16,-12
20025c14:	b080052e 	bgeu	r22,r2,20025c2c <_fwalk_reent+0x7c>
20025c18:	8080008f 	ldh	r2,2(r16)
20025c1c:	9809883a 	mov	r4,r19
20025c20:	14800226 	beq	r2,r18,20025c2c <_fwalk_reent+0x7c>
20025c24:	a83ee83a 	callr	r21
20025c28:	b8aeb03a 	or	r23,r23,r2
20025c2c:	84001a04 	addi	r16,r16,104
20025c30:	8cbff51e 	bne	r17,r18,20025c08 <__alt_data_end+0xfffe6808>
20025c34:	a5000017 	ldw	r20,0(r20)
20025c38:	a03fee1e 	bne	r20,zero,20025bf4 <__alt_data_end+0xfffe67f4>
20025c3c:	b805883a 	mov	r2,r23
20025c40:	dfc00817 	ldw	ra,32(sp)
20025c44:	ddc00717 	ldw	r23,28(sp)
20025c48:	dd800617 	ldw	r22,24(sp)
20025c4c:	dd400517 	ldw	r21,20(sp)
20025c50:	dd000417 	ldw	r20,16(sp)
20025c54:	dcc00317 	ldw	r19,12(sp)
20025c58:	dc800217 	ldw	r18,8(sp)
20025c5c:	dc400117 	ldw	r17,4(sp)
20025c60:	dc000017 	ldw	r16,0(sp)
20025c64:	dec00904 	addi	sp,sp,36
20025c68:	f800283a 	ret
20025c6c:	002f883a 	mov	r23,zero
20025c70:	003ff206 	br	20025c3c <__alt_data_end+0xfffe683c>

20025c74 <_setlocale_r>:
20025c74:	30001b26 	beq	r6,zero,20025ce4 <_setlocale_r+0x70>
20025c78:	014800f4 	movhi	r5,8195
20025c7c:	defffe04 	addi	sp,sp,-8
20025c80:	297faf04 	addi	r5,r5,-324
20025c84:	3009883a 	mov	r4,r6
20025c88:	dc000015 	stw	r16,0(sp)
20025c8c:	dfc00115 	stw	ra,4(sp)
20025c90:	3021883a 	mov	r16,r6
20025c94:	002834c0 	call	2002834c <strcmp>
20025c98:	1000061e 	bne	r2,zero,20025cb4 <_setlocale_r+0x40>
20025c9c:	008800f4 	movhi	r2,8195
20025ca0:	10bfae04 	addi	r2,r2,-328
20025ca4:	dfc00117 	ldw	ra,4(sp)
20025ca8:	dc000017 	ldw	r16,0(sp)
20025cac:	dec00204 	addi	sp,sp,8
20025cb0:	f800283a 	ret
20025cb4:	014800f4 	movhi	r5,8195
20025cb8:	297fae04 	addi	r5,r5,-328
20025cbc:	8009883a 	mov	r4,r16
20025cc0:	002834c0 	call	2002834c <strcmp>
20025cc4:	103ff526 	beq	r2,zero,20025c9c <__alt_data_end+0xfffe689c>
20025cc8:	014800f4 	movhi	r5,8195
20025ccc:	297f9904 	addi	r5,r5,-412
20025cd0:	8009883a 	mov	r4,r16
20025cd4:	002834c0 	call	2002834c <strcmp>
20025cd8:	103ff026 	beq	r2,zero,20025c9c <__alt_data_end+0xfffe689c>
20025cdc:	0005883a 	mov	r2,zero
20025ce0:	003ff006 	br	20025ca4 <__alt_data_end+0xfffe68a4>
20025ce4:	008800f4 	movhi	r2,8195
20025ce8:	10bfae04 	addi	r2,r2,-328
20025cec:	f800283a 	ret

20025cf0 <__locale_charset>:
20025cf0:	008800f4 	movhi	r2,8195
20025cf4:	10815f04 	addi	r2,r2,1404
20025cf8:	f800283a 	ret

20025cfc <__locale_mb_cur_max>:
20025cfc:	008800f4 	movhi	r2,8195
20025d00:	1086fb04 	addi	r2,r2,7148
20025d04:	10800017 	ldw	r2,0(r2)
20025d08:	f800283a 	ret

20025d0c <__locale_msgcharset>:
20025d0c:	008800f4 	movhi	r2,8195
20025d10:	10815704 	addi	r2,r2,1372
20025d14:	f800283a 	ret

20025d18 <__locale_cjk_lang>:
20025d18:	0005883a 	mov	r2,zero
20025d1c:	f800283a 	ret

20025d20 <_localeconv_r>:
20025d20:	008800f4 	movhi	r2,8195
20025d24:	10816704 	addi	r2,r2,1436
20025d28:	f800283a 	ret

20025d2c <setlocale>:
20025d2c:	008800f4 	movhi	r2,8195
20025d30:	1086fa04 	addi	r2,r2,7144
20025d34:	280d883a 	mov	r6,r5
20025d38:	200b883a 	mov	r5,r4
20025d3c:	11000017 	ldw	r4,0(r2)
20025d40:	0025c741 	jmpi	20025c74 <_setlocale_r>

20025d44 <localeconv>:
20025d44:	008800f4 	movhi	r2,8195
20025d48:	10816704 	addi	r2,r2,1436
20025d4c:	f800283a 	ret

20025d50 <__smakebuf_r>:
20025d50:	2880030b 	ldhu	r2,12(r5)
20025d54:	10c0008c 	andi	r3,r2,2
20025d58:	1800411e 	bne	r3,zero,20025e60 <__smakebuf_r+0x110>
20025d5c:	deffec04 	addi	sp,sp,-80
20025d60:	dc000f15 	stw	r16,60(sp)
20025d64:	2821883a 	mov	r16,r5
20025d68:	2940038f 	ldh	r5,14(r5)
20025d6c:	dc401015 	stw	r17,64(sp)
20025d70:	dfc01315 	stw	ra,76(sp)
20025d74:	dcc01215 	stw	r19,72(sp)
20025d78:	dc801115 	stw	r18,68(sp)
20025d7c:	2023883a 	mov	r17,r4
20025d80:	28001c16 	blt	r5,zero,20025df4 <__smakebuf_r+0xa4>
20025d84:	d80d883a 	mov	r6,sp
20025d88:	002a04c0 	call	2002a04c <_fstat_r>
20025d8c:	10001816 	blt	r2,zero,20025df0 <__smakebuf_r+0xa0>
20025d90:	d8800117 	ldw	r2,4(sp)
20025d94:	00e00014 	movui	r3,32768
20025d98:	10bc000c 	andi	r2,r2,61440
20025d9c:	14c80020 	cmpeqi	r19,r2,8192
20025da0:	10c03726 	beq	r2,r3,20025e80 <__smakebuf_r+0x130>
20025da4:	80c0030b 	ldhu	r3,12(r16)
20025da8:	18c20014 	ori	r3,r3,2048
20025dac:	80c0030d 	sth	r3,12(r16)
20025db0:	00c80004 	movi	r3,8192
20025db4:	10c0521e 	bne	r2,r3,20025f00 <__smakebuf_r+0x1b0>
20025db8:	8140038f 	ldh	r5,14(r16)
20025dbc:	8809883a 	mov	r4,r17
20025dc0:	002a0a80 	call	2002a0a8 <_isatty_r>
20025dc4:	10004c26 	beq	r2,zero,20025ef8 <__smakebuf_r+0x1a8>
20025dc8:	8080030b 	ldhu	r2,12(r16)
20025dcc:	80c010c4 	addi	r3,r16,67
20025dd0:	80c00015 	stw	r3,0(r16)
20025dd4:	10800054 	ori	r2,r2,1
20025dd8:	8080030d 	sth	r2,12(r16)
20025ddc:	00800044 	movi	r2,1
20025de0:	80c00415 	stw	r3,16(r16)
20025de4:	80800515 	stw	r2,20(r16)
20025de8:	04810004 	movi	r18,1024
20025dec:	00000706 	br	20025e0c <__smakebuf_r+0xbc>
20025df0:	8080030b 	ldhu	r2,12(r16)
20025df4:	10c0200c 	andi	r3,r2,128
20025df8:	18001f1e 	bne	r3,zero,20025e78 <__smakebuf_r+0x128>
20025dfc:	04810004 	movi	r18,1024
20025e00:	10820014 	ori	r2,r2,2048
20025e04:	8080030d 	sth	r2,12(r16)
20025e08:	0027883a 	mov	r19,zero
20025e0c:	900b883a 	mov	r5,r18
20025e10:	8809883a 	mov	r4,r17
20025e14:	0025f0c0 	call	20025f0c <_malloc_r>
20025e18:	10002c26 	beq	r2,zero,20025ecc <__smakebuf_r+0x17c>
20025e1c:	80c0030b 	ldhu	r3,12(r16)
20025e20:	010800b4 	movhi	r4,8194
20025e24:	21139904 	addi	r4,r4,20068
20025e28:	89000f15 	stw	r4,60(r17)
20025e2c:	18c02014 	ori	r3,r3,128
20025e30:	80c0030d 	sth	r3,12(r16)
20025e34:	80800015 	stw	r2,0(r16)
20025e38:	80800415 	stw	r2,16(r16)
20025e3c:	84800515 	stw	r18,20(r16)
20025e40:	98001a1e 	bne	r19,zero,20025eac <__smakebuf_r+0x15c>
20025e44:	dfc01317 	ldw	ra,76(sp)
20025e48:	dcc01217 	ldw	r19,72(sp)
20025e4c:	dc801117 	ldw	r18,68(sp)
20025e50:	dc401017 	ldw	r17,64(sp)
20025e54:	dc000f17 	ldw	r16,60(sp)
20025e58:	dec01404 	addi	sp,sp,80
20025e5c:	f800283a 	ret
20025e60:	288010c4 	addi	r2,r5,67
20025e64:	28800015 	stw	r2,0(r5)
20025e68:	28800415 	stw	r2,16(r5)
20025e6c:	00800044 	movi	r2,1
20025e70:	28800515 	stw	r2,20(r5)
20025e74:	f800283a 	ret
20025e78:	04801004 	movi	r18,64
20025e7c:	003fe006 	br	20025e00 <__alt_data_end+0xfffe6a00>
20025e80:	81000a17 	ldw	r4,40(r16)
20025e84:	00c800f4 	movhi	r3,8195
20025e88:	18e0ba04 	addi	r3,r3,-32024
20025e8c:	20ffc51e 	bne	r4,r3,20025da4 <__alt_data_end+0xfffe69a4>
20025e90:	8080030b 	ldhu	r2,12(r16)
20025e94:	04810004 	movi	r18,1024
20025e98:	84801315 	stw	r18,76(r16)
20025e9c:	1484b03a 	or	r2,r2,r18
20025ea0:	8080030d 	sth	r2,12(r16)
20025ea4:	0027883a 	mov	r19,zero
20025ea8:	003fd806 	br	20025e0c <__alt_data_end+0xfffe6a0c>
20025eac:	8140038f 	ldh	r5,14(r16)
20025eb0:	8809883a 	mov	r4,r17
20025eb4:	002a0a80 	call	2002a0a8 <_isatty_r>
20025eb8:	103fe226 	beq	r2,zero,20025e44 <__alt_data_end+0xfffe6a44>
20025ebc:	8080030b 	ldhu	r2,12(r16)
20025ec0:	10800054 	ori	r2,r2,1
20025ec4:	8080030d 	sth	r2,12(r16)
20025ec8:	003fde06 	br	20025e44 <__alt_data_end+0xfffe6a44>
20025ecc:	8080030b 	ldhu	r2,12(r16)
20025ed0:	10c0800c 	andi	r3,r2,512
20025ed4:	183fdb1e 	bne	r3,zero,20025e44 <__alt_data_end+0xfffe6a44>
20025ed8:	10800094 	ori	r2,r2,2
20025edc:	80c010c4 	addi	r3,r16,67
20025ee0:	8080030d 	sth	r2,12(r16)
20025ee4:	00800044 	movi	r2,1
20025ee8:	80c00015 	stw	r3,0(r16)
20025eec:	80c00415 	stw	r3,16(r16)
20025ef0:	80800515 	stw	r2,20(r16)
20025ef4:	003fd306 	br	20025e44 <__alt_data_end+0xfffe6a44>
20025ef8:	04810004 	movi	r18,1024
20025efc:	003fc306 	br	20025e0c <__alt_data_end+0xfffe6a0c>
20025f00:	0027883a 	mov	r19,zero
20025f04:	04810004 	movi	r18,1024
20025f08:	003fc006 	br	20025e0c <__alt_data_end+0xfffe6a0c>

20025f0c <_malloc_r>:
20025f0c:	defff504 	addi	sp,sp,-44
20025f10:	dc800315 	stw	r18,12(sp)
20025f14:	dfc00a15 	stw	ra,40(sp)
20025f18:	df000915 	stw	fp,36(sp)
20025f1c:	ddc00815 	stw	r23,32(sp)
20025f20:	dd800715 	stw	r22,28(sp)
20025f24:	dd400615 	stw	r21,24(sp)
20025f28:	dd000515 	stw	r20,20(sp)
20025f2c:	dcc00415 	stw	r19,16(sp)
20025f30:	dc400215 	stw	r17,8(sp)
20025f34:	dc000115 	stw	r16,4(sp)
20025f38:	288002c4 	addi	r2,r5,11
20025f3c:	00c00584 	movi	r3,22
20025f40:	2025883a 	mov	r18,r4
20025f44:	18807f2e 	bgeu	r3,r2,20026144 <_malloc_r+0x238>
20025f48:	047ffe04 	movi	r17,-8
20025f4c:	1462703a 	and	r17,r2,r17
20025f50:	8800a316 	blt	r17,zero,200261e0 <_malloc_r+0x2d4>
20025f54:	8940a236 	bltu	r17,r5,200261e0 <_malloc_r+0x2d4>
20025f58:	002dae00 	call	2002dae0 <__malloc_lock>
20025f5c:	00807dc4 	movi	r2,503
20025f60:	1441e92e 	bgeu	r2,r17,20026708 <_malloc_r+0x7fc>
20025f64:	8804d27a 	srli	r2,r17,9
20025f68:	1000a126 	beq	r2,zero,200261f0 <_malloc_r+0x2e4>
20025f6c:	00c00104 	movi	r3,4
20025f70:	18811e36 	bltu	r3,r2,200263ec <_malloc_r+0x4e0>
20025f74:	8804d1ba 	srli	r2,r17,6
20025f78:	12000e44 	addi	r8,r2,57
20025f7c:	11c00e04 	addi	r7,r2,56
20025f80:	4209883a 	add	r4,r8,r8
20025f84:	04c800f4 	movhi	r19,8195
20025f88:	2109883a 	add	r4,r4,r4
20025f8c:	9cc17504 	addi	r19,r19,1492
20025f90:	2109883a 	add	r4,r4,r4
20025f94:	9909883a 	add	r4,r19,r4
20025f98:	24000117 	ldw	r16,4(r4)
20025f9c:	213ffe04 	addi	r4,r4,-8
20025fa0:	24009726 	beq	r4,r16,20026200 <_malloc_r+0x2f4>
20025fa4:	80800117 	ldw	r2,4(r16)
20025fa8:	01bfff04 	movi	r6,-4
20025fac:	014003c4 	movi	r5,15
20025fb0:	1184703a 	and	r2,r2,r6
20025fb4:	1447c83a 	sub	r3,r2,r17
20025fb8:	28c00716 	blt	r5,r3,20025fd8 <_malloc_r+0xcc>
20025fbc:	1800920e 	bge	r3,zero,20026208 <_malloc_r+0x2fc>
20025fc0:	84000317 	ldw	r16,12(r16)
20025fc4:	24008e26 	beq	r4,r16,20026200 <_malloc_r+0x2f4>
20025fc8:	80800117 	ldw	r2,4(r16)
20025fcc:	1184703a 	and	r2,r2,r6
20025fd0:	1447c83a 	sub	r3,r2,r17
20025fd4:	28fff90e 	bge	r5,r3,20025fbc <__alt_data_end+0xfffe6bbc>
20025fd8:	3809883a 	mov	r4,r7
20025fdc:	018800f4 	movhi	r6,8195
20025fe0:	9c000417 	ldw	r16,16(r19)
20025fe4:	31817504 	addi	r6,r6,1492
20025fe8:	32000204 	addi	r8,r6,8
20025fec:	82013426 	beq	r16,r8,200264c0 <_malloc_r+0x5b4>
20025ff0:	80c00117 	ldw	r3,4(r16)
20025ff4:	00bfff04 	movi	r2,-4
20025ff8:	188e703a 	and	r7,r3,r2
20025ffc:	3c45c83a 	sub	r2,r7,r17
20026000:	00c003c4 	movi	r3,15
20026004:	18811f16 	blt	r3,r2,20026484 <_malloc_r+0x578>
20026008:	32000515 	stw	r8,20(r6)
2002600c:	32000415 	stw	r8,16(r6)
20026010:	10007f0e 	bge	r2,zero,20026210 <_malloc_r+0x304>
20026014:	00807fc4 	movi	r2,511
20026018:	11c0fd36 	bltu	r2,r7,20026410 <_malloc_r+0x504>
2002601c:	3806d0fa 	srli	r3,r7,3
20026020:	01c00044 	movi	r7,1
20026024:	30800117 	ldw	r2,4(r6)
20026028:	19400044 	addi	r5,r3,1
2002602c:	294b883a 	add	r5,r5,r5
20026030:	1807d0ba 	srai	r3,r3,2
20026034:	294b883a 	add	r5,r5,r5
20026038:	294b883a 	add	r5,r5,r5
2002603c:	298b883a 	add	r5,r5,r6
20026040:	38c6983a 	sll	r3,r7,r3
20026044:	29c00017 	ldw	r7,0(r5)
20026048:	2a7ffe04 	addi	r9,r5,-8
2002604c:	1886b03a 	or	r3,r3,r2
20026050:	82400315 	stw	r9,12(r16)
20026054:	81c00215 	stw	r7,8(r16)
20026058:	30c00115 	stw	r3,4(r6)
2002605c:	2c000015 	stw	r16,0(r5)
20026060:	3c000315 	stw	r16,12(r7)
20026064:	2005d0ba 	srai	r2,r4,2
20026068:	01400044 	movi	r5,1
2002606c:	288a983a 	sll	r5,r5,r2
20026070:	19406f36 	bltu	r3,r5,20026230 <_malloc_r+0x324>
20026074:	28c4703a 	and	r2,r5,r3
20026078:	10000a1e 	bne	r2,zero,200260a4 <_malloc_r+0x198>
2002607c:	00bfff04 	movi	r2,-4
20026080:	294b883a 	add	r5,r5,r5
20026084:	2088703a 	and	r4,r4,r2
20026088:	28c4703a 	and	r2,r5,r3
2002608c:	21000104 	addi	r4,r4,4
20026090:	1000041e 	bne	r2,zero,200260a4 <_malloc_r+0x198>
20026094:	294b883a 	add	r5,r5,r5
20026098:	28c4703a 	and	r2,r5,r3
2002609c:	21000104 	addi	r4,r4,4
200260a0:	103ffc26 	beq	r2,zero,20026094 <__alt_data_end+0xfffe6c94>
200260a4:	02bfff04 	movi	r10,-4
200260a8:	024003c4 	movi	r9,15
200260ac:	21800044 	addi	r6,r4,1
200260b0:	318d883a 	add	r6,r6,r6
200260b4:	318d883a 	add	r6,r6,r6
200260b8:	318d883a 	add	r6,r6,r6
200260bc:	998d883a 	add	r6,r19,r6
200260c0:	333ffe04 	addi	r12,r6,-8
200260c4:	2017883a 	mov	r11,r4
200260c8:	31800104 	addi	r6,r6,4
200260cc:	34000017 	ldw	r16,0(r6)
200260d0:	31fffd04 	addi	r7,r6,-12
200260d4:	81c0041e 	bne	r16,r7,200260e8 <_malloc_r+0x1dc>
200260d8:	0000fb06 	br	200264c8 <_malloc_r+0x5bc>
200260dc:	1801030e 	bge	r3,zero,200264ec <_malloc_r+0x5e0>
200260e0:	84000317 	ldw	r16,12(r16)
200260e4:	81c0f826 	beq	r16,r7,200264c8 <_malloc_r+0x5bc>
200260e8:	80800117 	ldw	r2,4(r16)
200260ec:	1284703a 	and	r2,r2,r10
200260f0:	1447c83a 	sub	r3,r2,r17
200260f4:	48fff90e 	bge	r9,r3,200260dc <__alt_data_end+0xfffe6cdc>
200260f8:	80800317 	ldw	r2,12(r16)
200260fc:	81000217 	ldw	r4,8(r16)
20026100:	89400054 	ori	r5,r17,1
20026104:	81400115 	stw	r5,4(r16)
20026108:	20800315 	stw	r2,12(r4)
2002610c:	11000215 	stw	r4,8(r2)
20026110:	8463883a 	add	r17,r16,r17
20026114:	9c400515 	stw	r17,20(r19)
20026118:	9c400415 	stw	r17,16(r19)
2002611c:	18800054 	ori	r2,r3,1
20026120:	88800115 	stw	r2,4(r17)
20026124:	8a000315 	stw	r8,12(r17)
20026128:	8a000215 	stw	r8,8(r17)
2002612c:	88e3883a 	add	r17,r17,r3
20026130:	88c00015 	stw	r3,0(r17)
20026134:	9009883a 	mov	r4,r18
20026138:	002db040 	call	2002db04 <__malloc_unlock>
2002613c:	80800204 	addi	r2,r16,8
20026140:	00001b06 	br	200261b0 <_malloc_r+0x2a4>
20026144:	04400404 	movi	r17,16
20026148:	89402536 	bltu	r17,r5,200261e0 <_malloc_r+0x2d4>
2002614c:	002dae00 	call	2002dae0 <__malloc_lock>
20026150:	00800184 	movi	r2,6
20026154:	01000084 	movi	r4,2
20026158:	04c800f4 	movhi	r19,8195
2002615c:	1085883a 	add	r2,r2,r2
20026160:	9cc17504 	addi	r19,r19,1492
20026164:	1085883a 	add	r2,r2,r2
20026168:	9885883a 	add	r2,r19,r2
2002616c:	14000117 	ldw	r16,4(r2)
20026170:	10fffe04 	addi	r3,r2,-8
20026174:	80c0d926 	beq	r16,r3,200264dc <_malloc_r+0x5d0>
20026178:	80c00117 	ldw	r3,4(r16)
2002617c:	81000317 	ldw	r4,12(r16)
20026180:	00bfff04 	movi	r2,-4
20026184:	1884703a 	and	r2,r3,r2
20026188:	81400217 	ldw	r5,8(r16)
2002618c:	8085883a 	add	r2,r16,r2
20026190:	10c00117 	ldw	r3,4(r2)
20026194:	29000315 	stw	r4,12(r5)
20026198:	21400215 	stw	r5,8(r4)
2002619c:	18c00054 	ori	r3,r3,1
200261a0:	10c00115 	stw	r3,4(r2)
200261a4:	9009883a 	mov	r4,r18
200261a8:	002db040 	call	2002db04 <__malloc_unlock>
200261ac:	80800204 	addi	r2,r16,8
200261b0:	dfc00a17 	ldw	ra,40(sp)
200261b4:	df000917 	ldw	fp,36(sp)
200261b8:	ddc00817 	ldw	r23,32(sp)
200261bc:	dd800717 	ldw	r22,28(sp)
200261c0:	dd400617 	ldw	r21,24(sp)
200261c4:	dd000517 	ldw	r20,20(sp)
200261c8:	dcc00417 	ldw	r19,16(sp)
200261cc:	dc800317 	ldw	r18,12(sp)
200261d0:	dc400217 	ldw	r17,8(sp)
200261d4:	dc000117 	ldw	r16,4(sp)
200261d8:	dec00b04 	addi	sp,sp,44
200261dc:	f800283a 	ret
200261e0:	00800304 	movi	r2,12
200261e4:	90800015 	stw	r2,0(r18)
200261e8:	0005883a 	mov	r2,zero
200261ec:	003ff006 	br	200261b0 <__alt_data_end+0xfffe6db0>
200261f0:	01002004 	movi	r4,128
200261f4:	02001004 	movi	r8,64
200261f8:	01c00fc4 	movi	r7,63
200261fc:	003f6106 	br	20025f84 <__alt_data_end+0xfffe6b84>
20026200:	4009883a 	mov	r4,r8
20026204:	003f7506 	br	20025fdc <__alt_data_end+0xfffe6bdc>
20026208:	81000317 	ldw	r4,12(r16)
2002620c:	003fde06 	br	20026188 <__alt_data_end+0xfffe6d88>
20026210:	81c5883a 	add	r2,r16,r7
20026214:	11400117 	ldw	r5,4(r2)
20026218:	9009883a 	mov	r4,r18
2002621c:	29400054 	ori	r5,r5,1
20026220:	11400115 	stw	r5,4(r2)
20026224:	002db040 	call	2002db04 <__malloc_unlock>
20026228:	80800204 	addi	r2,r16,8
2002622c:	003fe006 	br	200261b0 <__alt_data_end+0xfffe6db0>
20026230:	9c000217 	ldw	r16,8(r19)
20026234:	00bfff04 	movi	r2,-4
20026238:	85800117 	ldw	r22,4(r16)
2002623c:	b0ac703a 	and	r22,r22,r2
20026240:	b4400336 	bltu	r22,r17,20026250 <_malloc_r+0x344>
20026244:	b445c83a 	sub	r2,r22,r17
20026248:	00c003c4 	movi	r3,15
2002624c:	18805d16 	blt	r3,r2,200263c4 <_malloc_r+0x4b8>
20026250:	05c800f4 	movhi	r23,8195
20026254:	008800f4 	movhi	r2,8195
20026258:	108dc904 	addi	r2,r2,14116
2002625c:	bdc6fc04 	addi	r23,r23,7152
20026260:	15400017 	ldw	r21,0(r2)
20026264:	b8c00017 	ldw	r3,0(r23)
20026268:	00bfffc4 	movi	r2,-1
2002626c:	858d883a 	add	r6,r16,r22
20026270:	8d6b883a 	add	r21,r17,r21
20026274:	1880ea26 	beq	r3,r2,20026620 <_malloc_r+0x714>
20026278:	ad4403c4 	addi	r21,r21,4111
2002627c:	00bc0004 	movi	r2,-4096
20026280:	a8aa703a 	and	r21,r21,r2
20026284:	a80b883a 	mov	r5,r21
20026288:	9009883a 	mov	r4,r18
2002628c:	d9800015 	stw	r6,0(sp)
20026290:	00281bc0 	call	200281bc <_sbrk_r>
20026294:	1029883a 	mov	r20,r2
20026298:	00bfffc4 	movi	r2,-1
2002629c:	d9800017 	ldw	r6,0(sp)
200262a0:	a080e826 	beq	r20,r2,20026644 <_malloc_r+0x738>
200262a4:	a180a636 	bltu	r20,r6,20026540 <_malloc_r+0x634>
200262a8:	070800f4 	movhi	fp,8195
200262ac:	e70dd104 	addi	fp,fp,14148
200262b0:	e0800017 	ldw	r2,0(fp)
200262b4:	a887883a 	add	r3,r21,r2
200262b8:	e0c00015 	stw	r3,0(fp)
200262bc:	3500e626 	beq	r6,r20,20026658 <_malloc_r+0x74c>
200262c0:	b9000017 	ldw	r4,0(r23)
200262c4:	00bfffc4 	movi	r2,-1
200262c8:	2080ee26 	beq	r4,r2,20026684 <_malloc_r+0x778>
200262cc:	a185c83a 	sub	r2,r20,r6
200262d0:	10c5883a 	add	r2,r2,r3
200262d4:	e0800015 	stw	r2,0(fp)
200262d8:	a0c001cc 	andi	r3,r20,7
200262dc:	1800bc26 	beq	r3,zero,200265d0 <_malloc_r+0x6c4>
200262e0:	a0e9c83a 	sub	r20,r20,r3
200262e4:	00840204 	movi	r2,4104
200262e8:	a5000204 	addi	r20,r20,8
200262ec:	10c7c83a 	sub	r3,r2,r3
200262f0:	a545883a 	add	r2,r20,r21
200262f4:	1083ffcc 	andi	r2,r2,4095
200262f8:	18abc83a 	sub	r21,r3,r2
200262fc:	a80b883a 	mov	r5,r21
20026300:	9009883a 	mov	r4,r18
20026304:	00281bc0 	call	200281bc <_sbrk_r>
20026308:	00ffffc4 	movi	r3,-1
2002630c:	10c0e126 	beq	r2,r3,20026694 <_malloc_r+0x788>
20026310:	1505c83a 	sub	r2,r2,r20
20026314:	1545883a 	add	r2,r2,r21
20026318:	10800054 	ori	r2,r2,1
2002631c:	e0c00017 	ldw	r3,0(fp)
20026320:	9d000215 	stw	r20,8(r19)
20026324:	a0800115 	stw	r2,4(r20)
20026328:	a8c7883a 	add	r3,r21,r3
2002632c:	e0c00015 	stw	r3,0(fp)
20026330:	84c00e26 	beq	r16,r19,2002636c <_malloc_r+0x460>
20026334:	018003c4 	movi	r6,15
20026338:	3580a72e 	bgeu	r6,r22,200265d8 <_malloc_r+0x6cc>
2002633c:	81400117 	ldw	r5,4(r16)
20026340:	013ffe04 	movi	r4,-8
20026344:	b0bffd04 	addi	r2,r22,-12
20026348:	1104703a 	and	r2,r2,r4
2002634c:	2900004c 	andi	r4,r5,1
20026350:	2088b03a 	or	r4,r4,r2
20026354:	81000115 	stw	r4,4(r16)
20026358:	01400144 	movi	r5,5
2002635c:	8089883a 	add	r4,r16,r2
20026360:	21400115 	stw	r5,4(r4)
20026364:	21400215 	stw	r5,8(r4)
20026368:	3080cd36 	bltu	r6,r2,200266a0 <_malloc_r+0x794>
2002636c:	008800f4 	movhi	r2,8195
20026370:	108dc804 	addi	r2,r2,14112
20026374:	11000017 	ldw	r4,0(r2)
20026378:	20c0012e 	bgeu	r4,r3,20026380 <_malloc_r+0x474>
2002637c:	10c00015 	stw	r3,0(r2)
20026380:	008800f4 	movhi	r2,8195
20026384:	108dc704 	addi	r2,r2,14108
20026388:	11000017 	ldw	r4,0(r2)
2002638c:	9c000217 	ldw	r16,8(r19)
20026390:	20c0012e 	bgeu	r4,r3,20026398 <_malloc_r+0x48c>
20026394:	10c00015 	stw	r3,0(r2)
20026398:	80c00117 	ldw	r3,4(r16)
2002639c:	00bfff04 	movi	r2,-4
200263a0:	1886703a 	and	r3,r3,r2
200263a4:	1c45c83a 	sub	r2,r3,r17
200263a8:	1c400236 	bltu	r3,r17,200263b4 <_malloc_r+0x4a8>
200263ac:	00c003c4 	movi	r3,15
200263b0:	18800416 	blt	r3,r2,200263c4 <_malloc_r+0x4b8>
200263b4:	9009883a 	mov	r4,r18
200263b8:	002db040 	call	2002db04 <__malloc_unlock>
200263bc:	0005883a 	mov	r2,zero
200263c0:	003f7b06 	br	200261b0 <__alt_data_end+0xfffe6db0>
200263c4:	88c00054 	ori	r3,r17,1
200263c8:	80c00115 	stw	r3,4(r16)
200263cc:	8463883a 	add	r17,r16,r17
200263d0:	10800054 	ori	r2,r2,1
200263d4:	9c400215 	stw	r17,8(r19)
200263d8:	88800115 	stw	r2,4(r17)
200263dc:	9009883a 	mov	r4,r18
200263e0:	002db040 	call	2002db04 <__malloc_unlock>
200263e4:	80800204 	addi	r2,r16,8
200263e8:	003f7106 	br	200261b0 <__alt_data_end+0xfffe6db0>
200263ec:	00c00504 	movi	r3,20
200263f0:	18804a2e 	bgeu	r3,r2,2002651c <_malloc_r+0x610>
200263f4:	00c01504 	movi	r3,84
200263f8:	18806e36 	bltu	r3,r2,200265b4 <_malloc_r+0x6a8>
200263fc:	8804d33a 	srli	r2,r17,12
20026400:	12001bc4 	addi	r8,r2,111
20026404:	11c01b84 	addi	r7,r2,110
20026408:	4209883a 	add	r4,r8,r8
2002640c:	003edd06 	br	20025f84 <__alt_data_end+0xfffe6b84>
20026410:	3804d27a 	srli	r2,r7,9
20026414:	00c00104 	movi	r3,4
20026418:	1880442e 	bgeu	r3,r2,2002652c <_malloc_r+0x620>
2002641c:	00c00504 	movi	r3,20
20026420:	18808136 	bltu	r3,r2,20026628 <_malloc_r+0x71c>
20026424:	11401704 	addi	r5,r2,92
20026428:	10c016c4 	addi	r3,r2,91
2002642c:	294b883a 	add	r5,r5,r5
20026430:	294b883a 	add	r5,r5,r5
20026434:	294b883a 	add	r5,r5,r5
20026438:	994b883a 	add	r5,r19,r5
2002643c:	28800017 	ldw	r2,0(r5)
20026440:	018800f4 	movhi	r6,8195
20026444:	297ffe04 	addi	r5,r5,-8
20026448:	31817504 	addi	r6,r6,1492
2002644c:	28806526 	beq	r5,r2,200265e4 <_malloc_r+0x6d8>
20026450:	01bfff04 	movi	r6,-4
20026454:	10c00117 	ldw	r3,4(r2)
20026458:	1986703a 	and	r3,r3,r6
2002645c:	38c0022e 	bgeu	r7,r3,20026468 <_malloc_r+0x55c>
20026460:	10800217 	ldw	r2,8(r2)
20026464:	28bffb1e 	bne	r5,r2,20026454 <__alt_data_end+0xfffe7054>
20026468:	11400317 	ldw	r5,12(r2)
2002646c:	98c00117 	ldw	r3,4(r19)
20026470:	81400315 	stw	r5,12(r16)
20026474:	80800215 	stw	r2,8(r16)
20026478:	2c000215 	stw	r16,8(r5)
2002647c:	14000315 	stw	r16,12(r2)
20026480:	003ef806 	br	20026064 <__alt_data_end+0xfffe6c64>
20026484:	88c00054 	ori	r3,r17,1
20026488:	80c00115 	stw	r3,4(r16)
2002648c:	8463883a 	add	r17,r16,r17
20026490:	34400515 	stw	r17,20(r6)
20026494:	34400415 	stw	r17,16(r6)
20026498:	10c00054 	ori	r3,r2,1
2002649c:	8a000315 	stw	r8,12(r17)
200264a0:	8a000215 	stw	r8,8(r17)
200264a4:	88c00115 	stw	r3,4(r17)
200264a8:	88a3883a 	add	r17,r17,r2
200264ac:	88800015 	stw	r2,0(r17)
200264b0:	9009883a 	mov	r4,r18
200264b4:	002db040 	call	2002db04 <__malloc_unlock>
200264b8:	80800204 	addi	r2,r16,8
200264bc:	003f3c06 	br	200261b0 <__alt_data_end+0xfffe6db0>
200264c0:	30c00117 	ldw	r3,4(r6)
200264c4:	003ee706 	br	20026064 <__alt_data_end+0xfffe6c64>
200264c8:	5ac00044 	addi	r11,r11,1
200264cc:	588000cc 	andi	r2,r11,3
200264d0:	31800204 	addi	r6,r6,8
200264d4:	103efd1e 	bne	r2,zero,200260cc <__alt_data_end+0xfffe6ccc>
200264d8:	00002406 	br	2002656c <_malloc_r+0x660>
200264dc:	14000317 	ldw	r16,12(r2)
200264e0:	143f251e 	bne	r2,r16,20026178 <__alt_data_end+0xfffe6d78>
200264e4:	21000084 	addi	r4,r4,2
200264e8:	003ebc06 	br	20025fdc <__alt_data_end+0xfffe6bdc>
200264ec:	8085883a 	add	r2,r16,r2
200264f0:	10c00117 	ldw	r3,4(r2)
200264f4:	81000317 	ldw	r4,12(r16)
200264f8:	81400217 	ldw	r5,8(r16)
200264fc:	18c00054 	ori	r3,r3,1
20026500:	10c00115 	stw	r3,4(r2)
20026504:	29000315 	stw	r4,12(r5)
20026508:	21400215 	stw	r5,8(r4)
2002650c:	9009883a 	mov	r4,r18
20026510:	002db040 	call	2002db04 <__malloc_unlock>
20026514:	80800204 	addi	r2,r16,8
20026518:	003f2506 	br	200261b0 <__alt_data_end+0xfffe6db0>
2002651c:	12001704 	addi	r8,r2,92
20026520:	11c016c4 	addi	r7,r2,91
20026524:	4209883a 	add	r4,r8,r8
20026528:	003e9606 	br	20025f84 <__alt_data_end+0xfffe6b84>
2002652c:	3804d1ba 	srli	r2,r7,6
20026530:	11400e44 	addi	r5,r2,57
20026534:	10c00e04 	addi	r3,r2,56
20026538:	294b883a 	add	r5,r5,r5
2002653c:	003fbc06 	br	20026430 <__alt_data_end+0xfffe7030>
20026540:	84ff5926 	beq	r16,r19,200262a8 <__alt_data_end+0xfffe6ea8>
20026544:	008800f4 	movhi	r2,8195
20026548:	10817504 	addi	r2,r2,1492
2002654c:	14000217 	ldw	r16,8(r2)
20026550:	00bfff04 	movi	r2,-4
20026554:	80c00117 	ldw	r3,4(r16)
20026558:	1886703a 	and	r3,r3,r2
2002655c:	003f9106 	br	200263a4 <__alt_data_end+0xfffe6fa4>
20026560:	60800217 	ldw	r2,8(r12)
20026564:	213fffc4 	addi	r4,r4,-1
20026568:	1300651e 	bne	r2,r12,20026700 <_malloc_r+0x7f4>
2002656c:	208000cc 	andi	r2,r4,3
20026570:	633ffe04 	addi	r12,r12,-8
20026574:	103ffa1e 	bne	r2,zero,20026560 <__alt_data_end+0xfffe7160>
20026578:	98800117 	ldw	r2,4(r19)
2002657c:	0146303a 	nor	r3,zero,r5
20026580:	1884703a 	and	r2,r3,r2
20026584:	98800115 	stw	r2,4(r19)
20026588:	294b883a 	add	r5,r5,r5
2002658c:	117f2836 	bltu	r2,r5,20026230 <__alt_data_end+0xfffe6e30>
20026590:	283f2726 	beq	r5,zero,20026230 <__alt_data_end+0xfffe6e30>
20026594:	2886703a 	and	r3,r5,r2
20026598:	5809883a 	mov	r4,r11
2002659c:	183ec31e 	bne	r3,zero,200260ac <__alt_data_end+0xfffe6cac>
200265a0:	294b883a 	add	r5,r5,r5
200265a4:	2886703a 	and	r3,r5,r2
200265a8:	21000104 	addi	r4,r4,4
200265ac:	183ffc26 	beq	r3,zero,200265a0 <__alt_data_end+0xfffe71a0>
200265b0:	003ebe06 	br	200260ac <__alt_data_end+0xfffe6cac>
200265b4:	00c05504 	movi	r3,340
200265b8:	18801236 	bltu	r3,r2,20026604 <_malloc_r+0x6f8>
200265bc:	8804d3fa 	srli	r2,r17,15
200265c0:	12001e04 	addi	r8,r2,120
200265c4:	11c01dc4 	addi	r7,r2,119
200265c8:	4209883a 	add	r4,r8,r8
200265cc:	003e6d06 	br	20025f84 <__alt_data_end+0xfffe6b84>
200265d0:	00c40004 	movi	r3,4096
200265d4:	003f4606 	br	200262f0 <__alt_data_end+0xfffe6ef0>
200265d8:	00800044 	movi	r2,1
200265dc:	a0800115 	stw	r2,4(r20)
200265e0:	003f7406 	br	200263b4 <__alt_data_end+0xfffe6fb4>
200265e4:	1805d0ba 	srai	r2,r3,2
200265e8:	01c00044 	movi	r7,1
200265ec:	30c00117 	ldw	r3,4(r6)
200265f0:	388e983a 	sll	r7,r7,r2
200265f4:	2805883a 	mov	r2,r5
200265f8:	38c6b03a 	or	r3,r7,r3
200265fc:	30c00115 	stw	r3,4(r6)
20026600:	003f9b06 	br	20026470 <__alt_data_end+0xfffe7070>
20026604:	00c15504 	movi	r3,1364
20026608:	18801a36 	bltu	r3,r2,20026674 <_malloc_r+0x768>
2002660c:	8804d4ba 	srli	r2,r17,18
20026610:	12001f44 	addi	r8,r2,125
20026614:	11c01f04 	addi	r7,r2,124
20026618:	4209883a 	add	r4,r8,r8
2002661c:	003e5906 	br	20025f84 <__alt_data_end+0xfffe6b84>
20026620:	ad400404 	addi	r21,r21,16
20026624:	003f1706 	br	20026284 <__alt_data_end+0xfffe6e84>
20026628:	00c01504 	movi	r3,84
2002662c:	18802336 	bltu	r3,r2,200266bc <_malloc_r+0x7b0>
20026630:	3804d33a 	srli	r2,r7,12
20026634:	11401bc4 	addi	r5,r2,111
20026638:	10c01b84 	addi	r3,r2,110
2002663c:	294b883a 	add	r5,r5,r5
20026640:	003f7b06 	br	20026430 <__alt_data_end+0xfffe7030>
20026644:	9c000217 	ldw	r16,8(r19)
20026648:	00bfff04 	movi	r2,-4
2002664c:	80c00117 	ldw	r3,4(r16)
20026650:	1886703a 	and	r3,r3,r2
20026654:	003f5306 	br	200263a4 <__alt_data_end+0xfffe6fa4>
20026658:	3083ffcc 	andi	r2,r6,4095
2002665c:	103f181e 	bne	r2,zero,200262c0 <__alt_data_end+0xfffe6ec0>
20026660:	99000217 	ldw	r4,8(r19)
20026664:	b545883a 	add	r2,r22,r21
20026668:	10800054 	ori	r2,r2,1
2002666c:	20800115 	stw	r2,4(r4)
20026670:	003f3e06 	br	2002636c <__alt_data_end+0xfffe6f6c>
20026674:	01003f84 	movi	r4,254
20026678:	02001fc4 	movi	r8,127
2002667c:	01c01f84 	movi	r7,126
20026680:	003e4006 	br	20025f84 <__alt_data_end+0xfffe6b84>
20026684:	008800f4 	movhi	r2,8195
20026688:	1086fc04 	addi	r2,r2,7152
2002668c:	15000015 	stw	r20,0(r2)
20026690:	003f1106 	br	200262d8 <__alt_data_end+0xfffe6ed8>
20026694:	00800044 	movi	r2,1
20026698:	002b883a 	mov	r21,zero
2002669c:	003f1f06 	br	2002631c <__alt_data_end+0xfffe6f1c>
200266a0:	81400204 	addi	r5,r16,8
200266a4:	9009883a 	mov	r4,r18
200266a8:	00253200 	call	20025320 <_free_r>
200266ac:	008800f4 	movhi	r2,8195
200266b0:	108dd104 	addi	r2,r2,14148
200266b4:	10c00017 	ldw	r3,0(r2)
200266b8:	003f2c06 	br	2002636c <__alt_data_end+0xfffe6f6c>
200266bc:	00c05504 	movi	r3,340
200266c0:	18800536 	bltu	r3,r2,200266d8 <_malloc_r+0x7cc>
200266c4:	3804d3fa 	srli	r2,r7,15
200266c8:	11401e04 	addi	r5,r2,120
200266cc:	10c01dc4 	addi	r3,r2,119
200266d0:	294b883a 	add	r5,r5,r5
200266d4:	003f5606 	br	20026430 <__alt_data_end+0xfffe7030>
200266d8:	00c15504 	movi	r3,1364
200266dc:	18800536 	bltu	r3,r2,200266f4 <_malloc_r+0x7e8>
200266e0:	3804d4ba 	srli	r2,r7,18
200266e4:	11401f44 	addi	r5,r2,125
200266e8:	10c01f04 	addi	r3,r2,124
200266ec:	294b883a 	add	r5,r5,r5
200266f0:	003f4f06 	br	20026430 <__alt_data_end+0xfffe7030>
200266f4:	01403f84 	movi	r5,254
200266f8:	00c01f84 	movi	r3,126
200266fc:	003f4c06 	br	20026430 <__alt_data_end+0xfffe7030>
20026700:	98800117 	ldw	r2,4(r19)
20026704:	003fa006 	br	20026588 <__alt_data_end+0xfffe7188>
20026708:	8808d0fa 	srli	r4,r17,3
2002670c:	20800044 	addi	r2,r4,1
20026710:	1085883a 	add	r2,r2,r2
20026714:	003e9006 	br	20026158 <__alt_data_end+0xfffe6d58>

20026718 <memchr>:
20026718:	208000cc 	andi	r2,r4,3
2002671c:	280f883a 	mov	r7,r5
20026720:	10003426 	beq	r2,zero,200267f4 <memchr+0xdc>
20026724:	30bfffc4 	addi	r2,r6,-1
20026728:	30001a26 	beq	r6,zero,20026794 <memchr+0x7c>
2002672c:	20c00003 	ldbu	r3,0(r4)
20026730:	29803fcc 	andi	r6,r5,255
20026734:	30c0051e 	bne	r6,r3,2002674c <memchr+0x34>
20026738:	00001806 	br	2002679c <memchr+0x84>
2002673c:	10001526 	beq	r2,zero,20026794 <memchr+0x7c>
20026740:	20c00003 	ldbu	r3,0(r4)
20026744:	10bfffc4 	addi	r2,r2,-1
20026748:	30c01426 	beq	r6,r3,2002679c <memchr+0x84>
2002674c:	21000044 	addi	r4,r4,1
20026750:	20c000cc 	andi	r3,r4,3
20026754:	183ff91e 	bne	r3,zero,2002673c <__alt_data_end+0xfffe733c>
20026758:	020000c4 	movi	r8,3
2002675c:	40801136 	bltu	r8,r2,200267a4 <memchr+0x8c>
20026760:	10000c26 	beq	r2,zero,20026794 <memchr+0x7c>
20026764:	20c00003 	ldbu	r3,0(r4)
20026768:	29403fcc 	andi	r5,r5,255
2002676c:	28c00b26 	beq	r5,r3,2002679c <memchr+0x84>
20026770:	20c00044 	addi	r3,r4,1
20026774:	39803fcc 	andi	r6,r7,255
20026778:	2089883a 	add	r4,r4,r2
2002677c:	00000306 	br	2002678c <memchr+0x74>
20026780:	18c00044 	addi	r3,r3,1
20026784:	197fffc3 	ldbu	r5,-1(r3)
20026788:	31400526 	beq	r6,r5,200267a0 <memchr+0x88>
2002678c:	1805883a 	mov	r2,r3
20026790:	20fffb1e 	bne	r4,r3,20026780 <__alt_data_end+0xfffe7380>
20026794:	0005883a 	mov	r2,zero
20026798:	f800283a 	ret
2002679c:	2005883a 	mov	r2,r4
200267a0:	f800283a 	ret
200267a4:	28c03fcc 	andi	r3,r5,255
200267a8:	1812923a 	slli	r9,r3,8
200267ac:	02ffbff4 	movhi	r11,65279
200267b0:	02a02074 	movhi	r10,32897
200267b4:	48d2b03a 	or	r9,r9,r3
200267b8:	4806943a 	slli	r3,r9,16
200267bc:	5affbfc4 	addi	r11,r11,-257
200267c0:	52a02004 	addi	r10,r10,-32640
200267c4:	48d2b03a 	or	r9,r9,r3
200267c8:	20c00017 	ldw	r3,0(r4)
200267cc:	48c6f03a 	xor	r3,r9,r3
200267d0:	1acd883a 	add	r6,r3,r11
200267d4:	00c6303a 	nor	r3,zero,r3
200267d8:	30c6703a 	and	r3,r6,r3
200267dc:	1a86703a 	and	r3,r3,r10
200267e0:	183fe01e 	bne	r3,zero,20026764 <__alt_data_end+0xfffe7364>
200267e4:	10bfff04 	addi	r2,r2,-4
200267e8:	21000104 	addi	r4,r4,4
200267ec:	40bff636 	bltu	r8,r2,200267c8 <__alt_data_end+0xfffe73c8>
200267f0:	003fdb06 	br	20026760 <__alt_data_end+0xfffe7360>
200267f4:	3005883a 	mov	r2,r6
200267f8:	003fd706 	br	20026758 <__alt_data_end+0xfffe7358>

200267fc <memmove>:
200267fc:	2005883a 	mov	r2,r4
20026800:	29000b2e 	bgeu	r5,r4,20026830 <memmove+0x34>
20026804:	298f883a 	add	r7,r5,r6
20026808:	21c0092e 	bgeu	r4,r7,20026830 <memmove+0x34>
2002680c:	2187883a 	add	r3,r4,r6
20026810:	198bc83a 	sub	r5,r3,r6
20026814:	30004826 	beq	r6,zero,20026938 <memmove+0x13c>
20026818:	39ffffc4 	addi	r7,r7,-1
2002681c:	39000003 	ldbu	r4,0(r7)
20026820:	18ffffc4 	addi	r3,r3,-1
20026824:	19000005 	stb	r4,0(r3)
20026828:	28fffb1e 	bne	r5,r3,20026818 <__alt_data_end+0xfffe7418>
2002682c:	f800283a 	ret
20026830:	00c003c4 	movi	r3,15
20026834:	1980412e 	bgeu	r3,r6,2002693c <memmove+0x140>
20026838:	2886b03a 	or	r3,r5,r2
2002683c:	18c000cc 	andi	r3,r3,3
20026840:	1800401e 	bne	r3,zero,20026944 <memmove+0x148>
20026844:	33fffc04 	addi	r15,r6,-16
20026848:	781ed13a 	srli	r15,r15,4
2002684c:	28c00104 	addi	r3,r5,4
20026850:	13400104 	addi	r13,r2,4
20026854:	781c913a 	slli	r14,r15,4
20026858:	2b000204 	addi	r12,r5,8
2002685c:	12c00204 	addi	r11,r2,8
20026860:	73800504 	addi	r14,r14,20
20026864:	2a800304 	addi	r10,r5,12
20026868:	12400304 	addi	r9,r2,12
2002686c:	2b9d883a 	add	r14,r5,r14
20026870:	2811883a 	mov	r8,r5
20026874:	100f883a 	mov	r7,r2
20026878:	41000017 	ldw	r4,0(r8)
2002687c:	39c00404 	addi	r7,r7,16
20026880:	18c00404 	addi	r3,r3,16
20026884:	393ffc15 	stw	r4,-16(r7)
20026888:	193ffc17 	ldw	r4,-16(r3)
2002688c:	6b400404 	addi	r13,r13,16
20026890:	5ac00404 	addi	r11,r11,16
20026894:	693ffc15 	stw	r4,-16(r13)
20026898:	61000017 	ldw	r4,0(r12)
2002689c:	4a400404 	addi	r9,r9,16
200268a0:	42000404 	addi	r8,r8,16
200268a4:	593ffc15 	stw	r4,-16(r11)
200268a8:	51000017 	ldw	r4,0(r10)
200268ac:	63000404 	addi	r12,r12,16
200268b0:	52800404 	addi	r10,r10,16
200268b4:	493ffc15 	stw	r4,-16(r9)
200268b8:	1bbfef1e 	bne	r3,r14,20026878 <__alt_data_end+0xfffe7478>
200268bc:	79000044 	addi	r4,r15,1
200268c0:	2008913a 	slli	r4,r4,4
200268c4:	328003cc 	andi	r10,r6,15
200268c8:	02c000c4 	movi	r11,3
200268cc:	1107883a 	add	r3,r2,r4
200268d0:	290b883a 	add	r5,r5,r4
200268d4:	5a801e2e 	bgeu	r11,r10,20026950 <memmove+0x154>
200268d8:	1813883a 	mov	r9,r3
200268dc:	2811883a 	mov	r8,r5
200268e0:	500f883a 	mov	r7,r10
200268e4:	41000017 	ldw	r4,0(r8)
200268e8:	4a400104 	addi	r9,r9,4
200268ec:	39ffff04 	addi	r7,r7,-4
200268f0:	493fff15 	stw	r4,-4(r9)
200268f4:	42000104 	addi	r8,r8,4
200268f8:	59fffa36 	bltu	r11,r7,200268e4 <__alt_data_end+0xfffe74e4>
200268fc:	513fff04 	addi	r4,r10,-4
20026900:	2008d0ba 	srli	r4,r4,2
20026904:	318000cc 	andi	r6,r6,3
20026908:	21000044 	addi	r4,r4,1
2002690c:	2109883a 	add	r4,r4,r4
20026910:	2109883a 	add	r4,r4,r4
20026914:	1907883a 	add	r3,r3,r4
20026918:	290b883a 	add	r5,r5,r4
2002691c:	30000b26 	beq	r6,zero,2002694c <memmove+0x150>
20026920:	198d883a 	add	r6,r3,r6
20026924:	29c00003 	ldbu	r7,0(r5)
20026928:	18c00044 	addi	r3,r3,1
2002692c:	29400044 	addi	r5,r5,1
20026930:	19ffffc5 	stb	r7,-1(r3)
20026934:	19bffb1e 	bne	r3,r6,20026924 <__alt_data_end+0xfffe7524>
20026938:	f800283a 	ret
2002693c:	1007883a 	mov	r3,r2
20026940:	003ff606 	br	2002691c <__alt_data_end+0xfffe751c>
20026944:	1007883a 	mov	r3,r2
20026948:	003ff506 	br	20026920 <__alt_data_end+0xfffe7520>
2002694c:	f800283a 	ret
20026950:	500d883a 	mov	r6,r10
20026954:	003ff106 	br	2002691c <__alt_data_end+0xfffe751c>

20026958 <memset>:
20026958:	20c000cc 	andi	r3,r4,3
2002695c:	2005883a 	mov	r2,r4
20026960:	18004426 	beq	r3,zero,20026a74 <memset+0x11c>
20026964:	31ffffc4 	addi	r7,r6,-1
20026968:	30004026 	beq	r6,zero,20026a6c <memset+0x114>
2002696c:	2813883a 	mov	r9,r5
20026970:	200d883a 	mov	r6,r4
20026974:	2007883a 	mov	r3,r4
20026978:	00000406 	br	2002698c <memset+0x34>
2002697c:	3a3fffc4 	addi	r8,r7,-1
20026980:	31800044 	addi	r6,r6,1
20026984:	38003926 	beq	r7,zero,20026a6c <memset+0x114>
20026988:	400f883a 	mov	r7,r8
2002698c:	18c00044 	addi	r3,r3,1
20026990:	32400005 	stb	r9,0(r6)
20026994:	1a0000cc 	andi	r8,r3,3
20026998:	403ff81e 	bne	r8,zero,2002697c <__alt_data_end+0xfffe757c>
2002699c:	010000c4 	movi	r4,3
200269a0:	21c02d2e 	bgeu	r4,r7,20026a58 <memset+0x100>
200269a4:	29003fcc 	andi	r4,r5,255
200269a8:	200c923a 	slli	r6,r4,8
200269ac:	3108b03a 	or	r4,r6,r4
200269b0:	200c943a 	slli	r6,r4,16
200269b4:	218cb03a 	or	r6,r4,r6
200269b8:	010003c4 	movi	r4,15
200269bc:	21c0182e 	bgeu	r4,r7,20026a20 <memset+0xc8>
200269c0:	3b3ffc04 	addi	r12,r7,-16
200269c4:	6018d13a 	srli	r12,r12,4
200269c8:	1a000104 	addi	r8,r3,4
200269cc:	1ac00204 	addi	r11,r3,8
200269d0:	6008913a 	slli	r4,r12,4
200269d4:	1a800304 	addi	r10,r3,12
200269d8:	1813883a 	mov	r9,r3
200269dc:	21000504 	addi	r4,r4,20
200269e0:	1909883a 	add	r4,r3,r4
200269e4:	49800015 	stw	r6,0(r9)
200269e8:	41800015 	stw	r6,0(r8)
200269ec:	59800015 	stw	r6,0(r11)
200269f0:	51800015 	stw	r6,0(r10)
200269f4:	42000404 	addi	r8,r8,16
200269f8:	4a400404 	addi	r9,r9,16
200269fc:	5ac00404 	addi	r11,r11,16
20026a00:	52800404 	addi	r10,r10,16
20026a04:	413ff71e 	bne	r8,r4,200269e4 <__alt_data_end+0xfffe75e4>
20026a08:	63000044 	addi	r12,r12,1
20026a0c:	6018913a 	slli	r12,r12,4
20026a10:	39c003cc 	andi	r7,r7,15
20026a14:	010000c4 	movi	r4,3
20026a18:	1b07883a 	add	r3,r3,r12
20026a1c:	21c00e2e 	bgeu	r4,r7,20026a58 <memset+0x100>
20026a20:	1813883a 	mov	r9,r3
20026a24:	3811883a 	mov	r8,r7
20026a28:	010000c4 	movi	r4,3
20026a2c:	49800015 	stw	r6,0(r9)
20026a30:	423fff04 	addi	r8,r8,-4
20026a34:	4a400104 	addi	r9,r9,4
20026a38:	223ffc36 	bltu	r4,r8,20026a2c <__alt_data_end+0xfffe762c>
20026a3c:	393fff04 	addi	r4,r7,-4
20026a40:	2008d0ba 	srli	r4,r4,2
20026a44:	39c000cc 	andi	r7,r7,3
20026a48:	21000044 	addi	r4,r4,1
20026a4c:	2109883a 	add	r4,r4,r4
20026a50:	2109883a 	add	r4,r4,r4
20026a54:	1907883a 	add	r3,r3,r4
20026a58:	38000526 	beq	r7,zero,20026a70 <memset+0x118>
20026a5c:	19cf883a 	add	r7,r3,r7
20026a60:	19400005 	stb	r5,0(r3)
20026a64:	18c00044 	addi	r3,r3,1
20026a68:	38fffd1e 	bne	r7,r3,20026a60 <__alt_data_end+0xfffe7660>
20026a6c:	f800283a 	ret
20026a70:	f800283a 	ret
20026a74:	2007883a 	mov	r3,r4
20026a78:	300f883a 	mov	r7,r6
20026a7c:	003fc706 	br	2002699c <__alt_data_end+0xfffe759c>

20026a80 <_Balloc>:
20026a80:	20801317 	ldw	r2,76(r4)
20026a84:	defffc04 	addi	sp,sp,-16
20026a88:	dc400115 	stw	r17,4(sp)
20026a8c:	dc000015 	stw	r16,0(sp)
20026a90:	dfc00315 	stw	ra,12(sp)
20026a94:	dc800215 	stw	r18,8(sp)
20026a98:	2023883a 	mov	r17,r4
20026a9c:	2821883a 	mov	r16,r5
20026aa0:	10000f26 	beq	r2,zero,20026ae0 <_Balloc+0x60>
20026aa4:	8407883a 	add	r3,r16,r16
20026aa8:	18c7883a 	add	r3,r3,r3
20026aac:	10c7883a 	add	r3,r2,r3
20026ab0:	18800017 	ldw	r2,0(r3)
20026ab4:	10001126 	beq	r2,zero,20026afc <_Balloc+0x7c>
20026ab8:	11000017 	ldw	r4,0(r2)
20026abc:	19000015 	stw	r4,0(r3)
20026ac0:	10000415 	stw	zero,16(r2)
20026ac4:	10000315 	stw	zero,12(r2)
20026ac8:	dfc00317 	ldw	ra,12(sp)
20026acc:	dc800217 	ldw	r18,8(sp)
20026ad0:	dc400117 	ldw	r17,4(sp)
20026ad4:	dc000017 	ldw	r16,0(sp)
20026ad8:	dec00404 	addi	sp,sp,16
20026adc:	f800283a 	ret
20026ae0:	01800844 	movi	r6,33
20026ae4:	01400104 	movi	r5,4
20026ae8:	0029c7c0 	call	20029c7c <_calloc_r>
20026aec:	88801315 	stw	r2,76(r17)
20026af0:	103fec1e 	bne	r2,zero,20026aa4 <__alt_data_end+0xfffe76a4>
20026af4:	0005883a 	mov	r2,zero
20026af8:	003ff306 	br	20026ac8 <__alt_data_end+0xfffe76c8>
20026afc:	01400044 	movi	r5,1
20026b00:	2c24983a 	sll	r18,r5,r16
20026b04:	8809883a 	mov	r4,r17
20026b08:	91800144 	addi	r6,r18,5
20026b0c:	318d883a 	add	r6,r6,r6
20026b10:	318d883a 	add	r6,r6,r6
20026b14:	0029c7c0 	call	20029c7c <_calloc_r>
20026b18:	103ff626 	beq	r2,zero,20026af4 <__alt_data_end+0xfffe76f4>
20026b1c:	14000115 	stw	r16,4(r2)
20026b20:	14800215 	stw	r18,8(r2)
20026b24:	003fe606 	br	20026ac0 <__alt_data_end+0xfffe76c0>

20026b28 <_Bfree>:
20026b28:	28000826 	beq	r5,zero,20026b4c <_Bfree+0x24>
20026b2c:	28c00117 	ldw	r3,4(r5)
20026b30:	20801317 	ldw	r2,76(r4)
20026b34:	18c7883a 	add	r3,r3,r3
20026b38:	18c7883a 	add	r3,r3,r3
20026b3c:	10c5883a 	add	r2,r2,r3
20026b40:	10c00017 	ldw	r3,0(r2)
20026b44:	28c00015 	stw	r3,0(r5)
20026b48:	11400015 	stw	r5,0(r2)
20026b4c:	f800283a 	ret

20026b50 <__multadd>:
20026b50:	defffa04 	addi	sp,sp,-24
20026b54:	dc800315 	stw	r18,12(sp)
20026b58:	dc400215 	stw	r17,8(sp)
20026b5c:	dc000115 	stw	r16,4(sp)
20026b60:	2823883a 	mov	r17,r5
20026b64:	2c000417 	ldw	r16,16(r5)
20026b68:	dfc00515 	stw	ra,20(sp)
20026b6c:	dcc00415 	stw	r19,16(sp)
20026b70:	2025883a 	mov	r18,r4
20026b74:	29400504 	addi	r5,r5,20
20026b78:	0011883a 	mov	r8,zero
20026b7c:	28c00017 	ldw	r3,0(r5)
20026b80:	29400104 	addi	r5,r5,4
20026b84:	42000044 	addi	r8,r8,1
20026b88:	18bfffcc 	andi	r2,r3,65535
20026b8c:	1185383a 	mul	r2,r2,r6
20026b90:	1806d43a 	srli	r3,r3,16
20026b94:	11cf883a 	add	r7,r2,r7
20026b98:	3808d43a 	srli	r4,r7,16
20026b9c:	1987383a 	mul	r3,r3,r6
20026ba0:	38bfffcc 	andi	r2,r7,65535
20026ba4:	1907883a 	add	r3,r3,r4
20026ba8:	1808943a 	slli	r4,r3,16
20026bac:	180ed43a 	srli	r7,r3,16
20026bb0:	2085883a 	add	r2,r4,r2
20026bb4:	28bfff15 	stw	r2,-4(r5)
20026bb8:	443ff016 	blt	r8,r16,20026b7c <__alt_data_end+0xfffe777c>
20026bbc:	38000926 	beq	r7,zero,20026be4 <__multadd+0x94>
20026bc0:	88800217 	ldw	r2,8(r17)
20026bc4:	80800f0e 	bge	r16,r2,20026c04 <__multadd+0xb4>
20026bc8:	80800144 	addi	r2,r16,5
20026bcc:	1085883a 	add	r2,r2,r2
20026bd0:	1085883a 	add	r2,r2,r2
20026bd4:	8885883a 	add	r2,r17,r2
20026bd8:	11c00015 	stw	r7,0(r2)
20026bdc:	84000044 	addi	r16,r16,1
20026be0:	8c000415 	stw	r16,16(r17)
20026be4:	8805883a 	mov	r2,r17
20026be8:	dfc00517 	ldw	ra,20(sp)
20026bec:	dcc00417 	ldw	r19,16(sp)
20026bf0:	dc800317 	ldw	r18,12(sp)
20026bf4:	dc400217 	ldw	r17,8(sp)
20026bf8:	dc000117 	ldw	r16,4(sp)
20026bfc:	dec00604 	addi	sp,sp,24
20026c00:	f800283a 	ret
20026c04:	89400117 	ldw	r5,4(r17)
20026c08:	9009883a 	mov	r4,r18
20026c0c:	d9c00015 	stw	r7,0(sp)
20026c10:	29400044 	addi	r5,r5,1
20026c14:	0026a800 	call	20026a80 <_Balloc>
20026c18:	89800417 	ldw	r6,16(r17)
20026c1c:	89400304 	addi	r5,r17,12
20026c20:	11000304 	addi	r4,r2,12
20026c24:	31800084 	addi	r6,r6,2
20026c28:	318d883a 	add	r6,r6,r6
20026c2c:	318d883a 	add	r6,r6,r6
20026c30:	1027883a 	mov	r19,r2
20026c34:	0020b4c0 	call	20020b4c <memcpy>
20026c38:	d9c00017 	ldw	r7,0(sp)
20026c3c:	88000a26 	beq	r17,zero,20026c68 <__multadd+0x118>
20026c40:	88c00117 	ldw	r3,4(r17)
20026c44:	90801317 	ldw	r2,76(r18)
20026c48:	18c7883a 	add	r3,r3,r3
20026c4c:	18c7883a 	add	r3,r3,r3
20026c50:	10c5883a 	add	r2,r2,r3
20026c54:	10c00017 	ldw	r3,0(r2)
20026c58:	88c00015 	stw	r3,0(r17)
20026c5c:	14400015 	stw	r17,0(r2)
20026c60:	9823883a 	mov	r17,r19
20026c64:	003fd806 	br	20026bc8 <__alt_data_end+0xfffe77c8>
20026c68:	9823883a 	mov	r17,r19
20026c6c:	003fd606 	br	20026bc8 <__alt_data_end+0xfffe77c8>

20026c70 <__s2b>:
20026c70:	defff904 	addi	sp,sp,-28
20026c74:	dc400115 	stw	r17,4(sp)
20026c78:	dc000015 	stw	r16,0(sp)
20026c7c:	2023883a 	mov	r17,r4
20026c80:	2821883a 	mov	r16,r5
20026c84:	39000204 	addi	r4,r7,8
20026c88:	01400244 	movi	r5,9
20026c8c:	dcc00315 	stw	r19,12(sp)
20026c90:	dc800215 	stw	r18,8(sp)
20026c94:	dfc00615 	stw	ra,24(sp)
20026c98:	dd400515 	stw	r21,20(sp)
20026c9c:	dd000415 	stw	r20,16(sp)
20026ca0:	3825883a 	mov	r18,r7
20026ca4:	3027883a 	mov	r19,r6
20026ca8:	00209980 	call	20020998 <__divsi3>
20026cac:	00c00044 	movi	r3,1
20026cb0:	000b883a 	mov	r5,zero
20026cb4:	1880030e 	bge	r3,r2,20026cc4 <__s2b+0x54>
20026cb8:	18c7883a 	add	r3,r3,r3
20026cbc:	29400044 	addi	r5,r5,1
20026cc0:	18bffd16 	blt	r3,r2,20026cb8 <__alt_data_end+0xfffe78b8>
20026cc4:	8809883a 	mov	r4,r17
20026cc8:	0026a800 	call	20026a80 <_Balloc>
20026ccc:	d8c00717 	ldw	r3,28(sp)
20026cd0:	10c00515 	stw	r3,20(r2)
20026cd4:	00c00044 	movi	r3,1
20026cd8:	10c00415 	stw	r3,16(r2)
20026cdc:	00c00244 	movi	r3,9
20026ce0:	1cc0210e 	bge	r3,r19,20026d68 <__s2b+0xf8>
20026ce4:	80eb883a 	add	r21,r16,r3
20026ce8:	a829883a 	mov	r20,r21
20026cec:	84e1883a 	add	r16,r16,r19
20026cf0:	a1c00007 	ldb	r7,0(r20)
20026cf4:	01800284 	movi	r6,10
20026cf8:	a5000044 	addi	r20,r20,1
20026cfc:	100b883a 	mov	r5,r2
20026d00:	39fff404 	addi	r7,r7,-48
20026d04:	8809883a 	mov	r4,r17
20026d08:	0026b500 	call	20026b50 <__multadd>
20026d0c:	a43ff81e 	bne	r20,r16,20026cf0 <__alt_data_end+0xfffe78f0>
20026d10:	ace1883a 	add	r16,r21,r19
20026d14:	843ffe04 	addi	r16,r16,-8
20026d18:	9c800a0e 	bge	r19,r18,20026d44 <__s2b+0xd4>
20026d1c:	94e5c83a 	sub	r18,r18,r19
20026d20:	84a5883a 	add	r18,r16,r18
20026d24:	81c00007 	ldb	r7,0(r16)
20026d28:	01800284 	movi	r6,10
20026d2c:	84000044 	addi	r16,r16,1
20026d30:	100b883a 	mov	r5,r2
20026d34:	39fff404 	addi	r7,r7,-48
20026d38:	8809883a 	mov	r4,r17
20026d3c:	0026b500 	call	20026b50 <__multadd>
20026d40:	84bff81e 	bne	r16,r18,20026d24 <__alt_data_end+0xfffe7924>
20026d44:	dfc00617 	ldw	ra,24(sp)
20026d48:	dd400517 	ldw	r21,20(sp)
20026d4c:	dd000417 	ldw	r20,16(sp)
20026d50:	dcc00317 	ldw	r19,12(sp)
20026d54:	dc800217 	ldw	r18,8(sp)
20026d58:	dc400117 	ldw	r17,4(sp)
20026d5c:	dc000017 	ldw	r16,0(sp)
20026d60:	dec00704 	addi	sp,sp,28
20026d64:	f800283a 	ret
20026d68:	84000284 	addi	r16,r16,10
20026d6c:	1827883a 	mov	r19,r3
20026d70:	003fe906 	br	20026d18 <__alt_data_end+0xfffe7918>

20026d74 <__hi0bits>:
20026d74:	20bfffec 	andhi	r2,r4,65535
20026d78:	1000141e 	bne	r2,zero,20026dcc <__hi0bits+0x58>
20026d7c:	2008943a 	slli	r4,r4,16
20026d80:	00800404 	movi	r2,16
20026d84:	20ffc02c 	andhi	r3,r4,65280
20026d88:	1800021e 	bne	r3,zero,20026d94 <__hi0bits+0x20>
20026d8c:	2008923a 	slli	r4,r4,8
20026d90:	10800204 	addi	r2,r2,8
20026d94:	20fc002c 	andhi	r3,r4,61440
20026d98:	1800021e 	bne	r3,zero,20026da4 <__hi0bits+0x30>
20026d9c:	2008913a 	slli	r4,r4,4
20026da0:	10800104 	addi	r2,r2,4
20026da4:	20f0002c 	andhi	r3,r4,49152
20026da8:	1800031e 	bne	r3,zero,20026db8 <__hi0bits+0x44>
20026dac:	2109883a 	add	r4,r4,r4
20026db0:	10800084 	addi	r2,r2,2
20026db4:	2109883a 	add	r4,r4,r4
20026db8:	20000316 	blt	r4,zero,20026dc8 <__hi0bits+0x54>
20026dbc:	2110002c 	andhi	r4,r4,16384
20026dc0:	2000041e 	bne	r4,zero,20026dd4 <__hi0bits+0x60>
20026dc4:	00800804 	movi	r2,32
20026dc8:	f800283a 	ret
20026dcc:	0005883a 	mov	r2,zero
20026dd0:	003fec06 	br	20026d84 <__alt_data_end+0xfffe7984>
20026dd4:	10800044 	addi	r2,r2,1
20026dd8:	f800283a 	ret

20026ddc <__lo0bits>:
20026ddc:	20c00017 	ldw	r3,0(r4)
20026de0:	188001cc 	andi	r2,r3,7
20026de4:	10000826 	beq	r2,zero,20026e08 <__lo0bits+0x2c>
20026de8:	1880004c 	andi	r2,r3,1
20026dec:	1000211e 	bne	r2,zero,20026e74 <__lo0bits+0x98>
20026df0:	1880008c 	andi	r2,r3,2
20026df4:	1000211e 	bne	r2,zero,20026e7c <__lo0bits+0xa0>
20026df8:	1806d0ba 	srli	r3,r3,2
20026dfc:	00800084 	movi	r2,2
20026e00:	20c00015 	stw	r3,0(r4)
20026e04:	f800283a 	ret
20026e08:	18bfffcc 	andi	r2,r3,65535
20026e0c:	10001326 	beq	r2,zero,20026e5c <__lo0bits+0x80>
20026e10:	0005883a 	mov	r2,zero
20026e14:	19403fcc 	andi	r5,r3,255
20026e18:	2800021e 	bne	r5,zero,20026e24 <__lo0bits+0x48>
20026e1c:	1806d23a 	srli	r3,r3,8
20026e20:	10800204 	addi	r2,r2,8
20026e24:	194003cc 	andi	r5,r3,15
20026e28:	2800021e 	bne	r5,zero,20026e34 <__lo0bits+0x58>
20026e2c:	1806d13a 	srli	r3,r3,4
20026e30:	10800104 	addi	r2,r2,4
20026e34:	194000cc 	andi	r5,r3,3
20026e38:	2800021e 	bne	r5,zero,20026e44 <__lo0bits+0x68>
20026e3c:	1806d0ba 	srli	r3,r3,2
20026e40:	10800084 	addi	r2,r2,2
20026e44:	1940004c 	andi	r5,r3,1
20026e48:	2800081e 	bne	r5,zero,20026e6c <__lo0bits+0x90>
20026e4c:	1806d07a 	srli	r3,r3,1
20026e50:	1800051e 	bne	r3,zero,20026e68 <__lo0bits+0x8c>
20026e54:	00800804 	movi	r2,32
20026e58:	f800283a 	ret
20026e5c:	1806d43a 	srli	r3,r3,16
20026e60:	00800404 	movi	r2,16
20026e64:	003feb06 	br	20026e14 <__alt_data_end+0xfffe7a14>
20026e68:	10800044 	addi	r2,r2,1
20026e6c:	20c00015 	stw	r3,0(r4)
20026e70:	f800283a 	ret
20026e74:	0005883a 	mov	r2,zero
20026e78:	f800283a 	ret
20026e7c:	1806d07a 	srli	r3,r3,1
20026e80:	00800044 	movi	r2,1
20026e84:	20c00015 	stw	r3,0(r4)
20026e88:	f800283a 	ret

20026e8c <__i2b>:
20026e8c:	defffd04 	addi	sp,sp,-12
20026e90:	dc000015 	stw	r16,0(sp)
20026e94:	04000044 	movi	r16,1
20026e98:	dc400115 	stw	r17,4(sp)
20026e9c:	2823883a 	mov	r17,r5
20026ea0:	800b883a 	mov	r5,r16
20026ea4:	dfc00215 	stw	ra,8(sp)
20026ea8:	0026a800 	call	20026a80 <_Balloc>
20026eac:	14400515 	stw	r17,20(r2)
20026eb0:	14000415 	stw	r16,16(r2)
20026eb4:	dfc00217 	ldw	ra,8(sp)
20026eb8:	dc400117 	ldw	r17,4(sp)
20026ebc:	dc000017 	ldw	r16,0(sp)
20026ec0:	dec00304 	addi	sp,sp,12
20026ec4:	f800283a 	ret

20026ec8 <__multiply>:
20026ec8:	defffa04 	addi	sp,sp,-24
20026ecc:	dcc00315 	stw	r19,12(sp)
20026ed0:	dc800215 	stw	r18,8(sp)
20026ed4:	34c00417 	ldw	r19,16(r6)
20026ed8:	2c800417 	ldw	r18,16(r5)
20026edc:	dd000415 	stw	r20,16(sp)
20026ee0:	dc400115 	stw	r17,4(sp)
20026ee4:	dfc00515 	stw	ra,20(sp)
20026ee8:	dc000015 	stw	r16,0(sp)
20026eec:	2829883a 	mov	r20,r5
20026ef0:	3023883a 	mov	r17,r6
20026ef4:	94c0050e 	bge	r18,r19,20026f0c <__multiply+0x44>
20026ef8:	9007883a 	mov	r3,r18
20026efc:	3029883a 	mov	r20,r6
20026f00:	9825883a 	mov	r18,r19
20026f04:	2823883a 	mov	r17,r5
20026f08:	1827883a 	mov	r19,r3
20026f0c:	a0800217 	ldw	r2,8(r20)
20026f10:	94e1883a 	add	r16,r18,r19
20026f14:	a1400117 	ldw	r5,4(r20)
20026f18:	1400010e 	bge	r2,r16,20026f20 <__multiply+0x58>
20026f1c:	29400044 	addi	r5,r5,1
20026f20:	0026a800 	call	20026a80 <_Balloc>
20026f24:	8415883a 	add	r10,r16,r16
20026f28:	12c00504 	addi	r11,r2,20
20026f2c:	5295883a 	add	r10,r10,r10
20026f30:	5a95883a 	add	r10,r11,r10
20026f34:	5807883a 	mov	r3,r11
20026f38:	5a80032e 	bgeu	r11,r10,20026f48 <__multiply+0x80>
20026f3c:	18000015 	stw	zero,0(r3)
20026f40:	18c00104 	addi	r3,r3,4
20026f44:	1abffd36 	bltu	r3,r10,20026f3c <__alt_data_end+0xfffe7b3c>
20026f48:	9ce7883a 	add	r19,r19,r19
20026f4c:	94a5883a 	add	r18,r18,r18
20026f50:	89800504 	addi	r6,r17,20
20026f54:	9ce7883a 	add	r19,r19,r19
20026f58:	a3400504 	addi	r13,r20,20
20026f5c:	94a5883a 	add	r18,r18,r18
20026f60:	34d9883a 	add	r12,r6,r19
20026f64:	6c93883a 	add	r9,r13,r18
20026f68:	3300422e 	bgeu	r6,r12,20027074 <__multiply+0x1ac>
20026f6c:	37c00017 	ldw	ra,0(r6)
20026f70:	fbffffcc 	andi	r15,ra,65535
20026f74:	78001b26 	beq	r15,zero,20026fe4 <__multiply+0x11c>
20026f78:	5811883a 	mov	r8,r11
20026f7c:	681d883a 	mov	r14,r13
20026f80:	000f883a 	mov	r7,zero
20026f84:	71000017 	ldw	r4,0(r14)
20026f88:	40c00017 	ldw	r3,0(r8)
20026f8c:	73800104 	addi	r14,r14,4
20026f90:	217fffcc 	andi	r5,r4,65535
20026f94:	2bcb383a 	mul	r5,r5,r15
20026f98:	2008d43a 	srli	r4,r4,16
20026f9c:	1c7fffcc 	andi	r17,r3,65535
20026fa0:	2c4b883a 	add	r5,r5,r17
20026fa4:	29cb883a 	add	r5,r5,r7
20026fa8:	23c9383a 	mul	r4,r4,r15
20026fac:	1806d43a 	srli	r3,r3,16
20026fb0:	280ed43a 	srli	r7,r5,16
20026fb4:	297fffcc 	andi	r5,r5,65535
20026fb8:	20c7883a 	add	r3,r4,r3
20026fbc:	19c7883a 	add	r3,r3,r7
20026fc0:	1808943a 	slli	r4,r3,16
20026fc4:	4023883a 	mov	r17,r8
20026fc8:	180ed43a 	srli	r7,r3,16
20026fcc:	214ab03a 	or	r5,r4,r5
20026fd0:	41400015 	stw	r5,0(r8)
20026fd4:	42000104 	addi	r8,r8,4
20026fd8:	727fea36 	bltu	r14,r9,20026f84 <__alt_data_end+0xfffe7b84>
20026fdc:	89c00115 	stw	r7,4(r17)
20026fe0:	37c00017 	ldw	ra,0(r6)
20026fe4:	f83ed43a 	srli	ra,ra,16
20026fe8:	f8001f26 	beq	ra,zero,20027068 <__multiply+0x1a0>
20026fec:	58c00017 	ldw	r3,0(r11)
20026ff0:	681d883a 	mov	r14,r13
20026ff4:	581f883a 	mov	r15,r11
20026ff8:	1811883a 	mov	r8,r3
20026ffc:	5825883a 	mov	r18,r11
20027000:	000f883a 	mov	r7,zero
20027004:	00000106 	br	2002700c <__multiply+0x144>
20027008:	8825883a 	mov	r18,r17
2002700c:	7140000b 	ldhu	r5,0(r14)
20027010:	4010d43a 	srli	r8,r8,16
20027014:	193fffcc 	andi	r4,r3,65535
20027018:	2fcb383a 	mul	r5,r5,ra
2002701c:	7bc00104 	addi	r15,r15,4
20027020:	73800104 	addi	r14,r14,4
20027024:	2a0b883a 	add	r5,r5,r8
20027028:	29cb883a 	add	r5,r5,r7
2002702c:	2806943a 	slli	r3,r5,16
20027030:	94400104 	addi	r17,r18,4
20027034:	280ad43a 	srli	r5,r5,16
20027038:	1908b03a 	or	r4,r3,r4
2002703c:	793fff15 	stw	r4,-4(r15)
20027040:	70ffff17 	ldw	r3,-4(r14)
20027044:	8a000017 	ldw	r8,0(r17)
20027048:	1806d43a 	srli	r3,r3,16
2002704c:	413fffcc 	andi	r4,r8,65535
20027050:	1fc7383a 	mul	r3,r3,ra
20027054:	1907883a 	add	r3,r3,r4
20027058:	1947883a 	add	r3,r3,r5
2002705c:	180ed43a 	srli	r7,r3,16
20027060:	727fe936 	bltu	r14,r9,20027008 <__alt_data_end+0xfffe7c08>
20027064:	90c00115 	stw	r3,4(r18)
20027068:	31800104 	addi	r6,r6,4
2002706c:	5ac00104 	addi	r11,r11,4
20027070:	333fbe36 	bltu	r6,r12,20026f6c <__alt_data_end+0xfffe7b6c>
20027074:	0400090e 	bge	zero,r16,2002709c <__multiply+0x1d4>
20027078:	50ffff17 	ldw	r3,-4(r10)
2002707c:	52bfff04 	addi	r10,r10,-4
20027080:	18000326 	beq	r3,zero,20027090 <__multiply+0x1c8>
20027084:	00000506 	br	2002709c <__multiply+0x1d4>
20027088:	50c00017 	ldw	r3,0(r10)
2002708c:	1800031e 	bne	r3,zero,2002709c <__multiply+0x1d4>
20027090:	843fffc4 	addi	r16,r16,-1
20027094:	52bfff04 	addi	r10,r10,-4
20027098:	803ffb1e 	bne	r16,zero,20027088 <__alt_data_end+0xfffe7c88>
2002709c:	14000415 	stw	r16,16(r2)
200270a0:	dfc00517 	ldw	ra,20(sp)
200270a4:	dd000417 	ldw	r20,16(sp)
200270a8:	dcc00317 	ldw	r19,12(sp)
200270ac:	dc800217 	ldw	r18,8(sp)
200270b0:	dc400117 	ldw	r17,4(sp)
200270b4:	dc000017 	ldw	r16,0(sp)
200270b8:	dec00604 	addi	sp,sp,24
200270bc:	f800283a 	ret

200270c0 <__pow5mult>:
200270c0:	defffa04 	addi	sp,sp,-24
200270c4:	dcc00315 	stw	r19,12(sp)
200270c8:	dc000015 	stw	r16,0(sp)
200270cc:	dfc00515 	stw	ra,20(sp)
200270d0:	dd000415 	stw	r20,16(sp)
200270d4:	dc800215 	stw	r18,8(sp)
200270d8:	dc400115 	stw	r17,4(sp)
200270dc:	308000cc 	andi	r2,r6,3
200270e0:	3021883a 	mov	r16,r6
200270e4:	2027883a 	mov	r19,r4
200270e8:	10002f1e 	bne	r2,zero,200271a8 <__pow5mult+0xe8>
200270ec:	2825883a 	mov	r18,r5
200270f0:	8021d0ba 	srai	r16,r16,2
200270f4:	80001a26 	beq	r16,zero,20027160 <__pow5mult+0xa0>
200270f8:	9c401217 	ldw	r17,72(r19)
200270fc:	8800061e 	bne	r17,zero,20027118 <__pow5mult+0x58>
20027100:	00003406 	br	200271d4 <__pow5mult+0x114>
20027104:	8021d07a 	srai	r16,r16,1
20027108:	80001526 	beq	r16,zero,20027160 <__pow5mult+0xa0>
2002710c:	88800017 	ldw	r2,0(r17)
20027110:	10001c26 	beq	r2,zero,20027184 <__pow5mult+0xc4>
20027114:	1023883a 	mov	r17,r2
20027118:	8080004c 	andi	r2,r16,1
2002711c:	103ff926 	beq	r2,zero,20027104 <__alt_data_end+0xfffe7d04>
20027120:	880d883a 	mov	r6,r17
20027124:	900b883a 	mov	r5,r18
20027128:	9809883a 	mov	r4,r19
2002712c:	0026ec80 	call	20026ec8 <__multiply>
20027130:	90001b26 	beq	r18,zero,200271a0 <__pow5mult+0xe0>
20027134:	91000117 	ldw	r4,4(r18)
20027138:	98c01317 	ldw	r3,76(r19)
2002713c:	8021d07a 	srai	r16,r16,1
20027140:	2109883a 	add	r4,r4,r4
20027144:	2109883a 	add	r4,r4,r4
20027148:	1907883a 	add	r3,r3,r4
2002714c:	19000017 	ldw	r4,0(r3)
20027150:	91000015 	stw	r4,0(r18)
20027154:	1c800015 	stw	r18,0(r3)
20027158:	1025883a 	mov	r18,r2
2002715c:	803feb1e 	bne	r16,zero,2002710c <__alt_data_end+0xfffe7d0c>
20027160:	9005883a 	mov	r2,r18
20027164:	dfc00517 	ldw	ra,20(sp)
20027168:	dd000417 	ldw	r20,16(sp)
2002716c:	dcc00317 	ldw	r19,12(sp)
20027170:	dc800217 	ldw	r18,8(sp)
20027174:	dc400117 	ldw	r17,4(sp)
20027178:	dc000017 	ldw	r16,0(sp)
2002717c:	dec00604 	addi	sp,sp,24
20027180:	f800283a 	ret
20027184:	880d883a 	mov	r6,r17
20027188:	880b883a 	mov	r5,r17
2002718c:	9809883a 	mov	r4,r19
20027190:	0026ec80 	call	20026ec8 <__multiply>
20027194:	88800015 	stw	r2,0(r17)
20027198:	10000015 	stw	zero,0(r2)
2002719c:	003fdd06 	br	20027114 <__alt_data_end+0xfffe7d14>
200271a0:	1025883a 	mov	r18,r2
200271a4:	003fd706 	br	20027104 <__alt_data_end+0xfffe7d04>
200271a8:	10bfffc4 	addi	r2,r2,-1
200271ac:	1085883a 	add	r2,r2,r2
200271b0:	00c800f4 	movhi	r3,8195
200271b4:	18ffb204 	addi	r3,r3,-312
200271b8:	1085883a 	add	r2,r2,r2
200271bc:	1885883a 	add	r2,r3,r2
200271c0:	11800017 	ldw	r6,0(r2)
200271c4:	000f883a 	mov	r7,zero
200271c8:	0026b500 	call	20026b50 <__multadd>
200271cc:	1025883a 	mov	r18,r2
200271d0:	003fc706 	br	200270f0 <__alt_data_end+0xfffe7cf0>
200271d4:	05000044 	movi	r20,1
200271d8:	a00b883a 	mov	r5,r20
200271dc:	9809883a 	mov	r4,r19
200271e0:	0026a800 	call	20026a80 <_Balloc>
200271e4:	1023883a 	mov	r17,r2
200271e8:	00809c44 	movi	r2,625
200271ec:	88800515 	stw	r2,20(r17)
200271f0:	8d000415 	stw	r20,16(r17)
200271f4:	9c401215 	stw	r17,72(r19)
200271f8:	88000015 	stw	zero,0(r17)
200271fc:	003fc606 	br	20027118 <__alt_data_end+0xfffe7d18>

20027200 <__lshift>:
20027200:	defff904 	addi	sp,sp,-28
20027204:	dd400515 	stw	r21,20(sp)
20027208:	dcc00315 	stw	r19,12(sp)
2002720c:	302bd17a 	srai	r21,r6,5
20027210:	2cc00417 	ldw	r19,16(r5)
20027214:	28800217 	ldw	r2,8(r5)
20027218:	dd000415 	stw	r20,16(sp)
2002721c:	ace7883a 	add	r19,r21,r19
20027220:	dc800215 	stw	r18,8(sp)
20027224:	dc400115 	stw	r17,4(sp)
20027228:	dc000015 	stw	r16,0(sp)
2002722c:	dfc00615 	stw	ra,24(sp)
20027230:	9c000044 	addi	r16,r19,1
20027234:	2823883a 	mov	r17,r5
20027238:	3029883a 	mov	r20,r6
2002723c:	2025883a 	mov	r18,r4
20027240:	29400117 	ldw	r5,4(r5)
20027244:	1400030e 	bge	r2,r16,20027254 <__lshift+0x54>
20027248:	1085883a 	add	r2,r2,r2
2002724c:	29400044 	addi	r5,r5,1
20027250:	143ffd16 	blt	r2,r16,20027248 <__alt_data_end+0xfffe7e48>
20027254:	9009883a 	mov	r4,r18
20027258:	0026a800 	call	20026a80 <_Balloc>
2002725c:	10c00504 	addi	r3,r2,20
20027260:	0540070e 	bge	zero,r21,20027280 <__lshift+0x80>
20027264:	ad6b883a 	add	r21,r21,r21
20027268:	ad6b883a 	add	r21,r21,r21
2002726c:	1809883a 	mov	r4,r3
20027270:	1d47883a 	add	r3,r3,r21
20027274:	20000015 	stw	zero,0(r4)
20027278:	21000104 	addi	r4,r4,4
2002727c:	193ffd1e 	bne	r3,r4,20027274 <__alt_data_end+0xfffe7e74>
20027280:	8a000417 	ldw	r8,16(r17)
20027284:	89000504 	addi	r4,r17,20
20027288:	a18007cc 	andi	r6,r20,31
2002728c:	4211883a 	add	r8,r8,r8
20027290:	4211883a 	add	r8,r8,r8
20027294:	2211883a 	add	r8,r4,r8
20027298:	30002326 	beq	r6,zero,20027328 <__lshift+0x128>
2002729c:	02400804 	movi	r9,32
200272a0:	4993c83a 	sub	r9,r9,r6
200272a4:	000b883a 	mov	r5,zero
200272a8:	21c00017 	ldw	r7,0(r4)
200272ac:	1815883a 	mov	r10,r3
200272b0:	18c00104 	addi	r3,r3,4
200272b4:	398e983a 	sll	r7,r7,r6
200272b8:	21000104 	addi	r4,r4,4
200272bc:	394ab03a 	or	r5,r7,r5
200272c0:	197fff15 	stw	r5,-4(r3)
200272c4:	217fff17 	ldw	r5,-4(r4)
200272c8:	2a4ad83a 	srl	r5,r5,r9
200272cc:	223ff636 	bltu	r4,r8,200272a8 <__alt_data_end+0xfffe7ea8>
200272d0:	51400115 	stw	r5,4(r10)
200272d4:	28001a1e 	bne	r5,zero,20027340 <__lshift+0x140>
200272d8:	843fffc4 	addi	r16,r16,-1
200272dc:	14000415 	stw	r16,16(r2)
200272e0:	88000826 	beq	r17,zero,20027304 <__lshift+0x104>
200272e4:	89000117 	ldw	r4,4(r17)
200272e8:	90c01317 	ldw	r3,76(r18)
200272ec:	2109883a 	add	r4,r4,r4
200272f0:	2109883a 	add	r4,r4,r4
200272f4:	1907883a 	add	r3,r3,r4
200272f8:	19000017 	ldw	r4,0(r3)
200272fc:	89000015 	stw	r4,0(r17)
20027300:	1c400015 	stw	r17,0(r3)
20027304:	dfc00617 	ldw	ra,24(sp)
20027308:	dd400517 	ldw	r21,20(sp)
2002730c:	dd000417 	ldw	r20,16(sp)
20027310:	dcc00317 	ldw	r19,12(sp)
20027314:	dc800217 	ldw	r18,8(sp)
20027318:	dc400117 	ldw	r17,4(sp)
2002731c:	dc000017 	ldw	r16,0(sp)
20027320:	dec00704 	addi	sp,sp,28
20027324:	f800283a 	ret
20027328:	21400017 	ldw	r5,0(r4)
2002732c:	18c00104 	addi	r3,r3,4
20027330:	21000104 	addi	r4,r4,4
20027334:	197fff15 	stw	r5,-4(r3)
20027338:	223ffb36 	bltu	r4,r8,20027328 <__alt_data_end+0xfffe7f28>
2002733c:	003fe606 	br	200272d8 <__alt_data_end+0xfffe7ed8>
20027340:	9c000084 	addi	r16,r19,2
20027344:	003fe406 	br	200272d8 <__alt_data_end+0xfffe7ed8>

20027348 <__mcmp>:
20027348:	20800417 	ldw	r2,16(r4)
2002734c:	28c00417 	ldw	r3,16(r5)
20027350:	10c5c83a 	sub	r2,r2,r3
20027354:	1000111e 	bne	r2,zero,2002739c <__mcmp+0x54>
20027358:	18c7883a 	add	r3,r3,r3
2002735c:	18c7883a 	add	r3,r3,r3
20027360:	21000504 	addi	r4,r4,20
20027364:	29400504 	addi	r5,r5,20
20027368:	20c5883a 	add	r2,r4,r3
2002736c:	28cb883a 	add	r5,r5,r3
20027370:	00000106 	br	20027378 <__mcmp+0x30>
20027374:	20800a2e 	bgeu	r4,r2,200273a0 <__mcmp+0x58>
20027378:	10bfff04 	addi	r2,r2,-4
2002737c:	297fff04 	addi	r5,r5,-4
20027380:	11800017 	ldw	r6,0(r2)
20027384:	28c00017 	ldw	r3,0(r5)
20027388:	30fffa26 	beq	r6,r3,20027374 <__alt_data_end+0xfffe7f74>
2002738c:	30c00236 	bltu	r6,r3,20027398 <__mcmp+0x50>
20027390:	00800044 	movi	r2,1
20027394:	f800283a 	ret
20027398:	00bfffc4 	movi	r2,-1
2002739c:	f800283a 	ret
200273a0:	0005883a 	mov	r2,zero
200273a4:	f800283a 	ret

200273a8 <__mdiff>:
200273a8:	28c00417 	ldw	r3,16(r5)
200273ac:	30800417 	ldw	r2,16(r6)
200273b0:	defffa04 	addi	sp,sp,-24
200273b4:	dcc00315 	stw	r19,12(sp)
200273b8:	dc800215 	stw	r18,8(sp)
200273bc:	dfc00515 	stw	ra,20(sp)
200273c0:	dd000415 	stw	r20,16(sp)
200273c4:	dc400115 	stw	r17,4(sp)
200273c8:	dc000015 	stw	r16,0(sp)
200273cc:	1887c83a 	sub	r3,r3,r2
200273d0:	2825883a 	mov	r18,r5
200273d4:	3027883a 	mov	r19,r6
200273d8:	1800141e 	bne	r3,zero,2002742c <__mdiff+0x84>
200273dc:	1085883a 	add	r2,r2,r2
200273e0:	1085883a 	add	r2,r2,r2
200273e4:	2a000504 	addi	r8,r5,20
200273e8:	34000504 	addi	r16,r6,20
200273ec:	4087883a 	add	r3,r8,r2
200273f0:	8085883a 	add	r2,r16,r2
200273f4:	00000106 	br	200273fc <__mdiff+0x54>
200273f8:	40c0592e 	bgeu	r8,r3,20027560 <__mdiff+0x1b8>
200273fc:	18ffff04 	addi	r3,r3,-4
20027400:	10bfff04 	addi	r2,r2,-4
20027404:	19c00017 	ldw	r7,0(r3)
20027408:	11400017 	ldw	r5,0(r2)
2002740c:	397ffa26 	beq	r7,r5,200273f8 <__alt_data_end+0xfffe7ff8>
20027410:	3940592e 	bgeu	r7,r5,20027578 <__mdiff+0x1d0>
20027414:	9005883a 	mov	r2,r18
20027418:	4023883a 	mov	r17,r8
2002741c:	9825883a 	mov	r18,r19
20027420:	05000044 	movi	r20,1
20027424:	1027883a 	mov	r19,r2
20027428:	00000406 	br	2002743c <__mdiff+0x94>
2002742c:	18005616 	blt	r3,zero,20027588 <__mdiff+0x1e0>
20027430:	34400504 	addi	r17,r6,20
20027434:	2c000504 	addi	r16,r5,20
20027438:	0029883a 	mov	r20,zero
2002743c:	91400117 	ldw	r5,4(r18)
20027440:	0026a800 	call	20026a80 <_Balloc>
20027444:	92400417 	ldw	r9,16(r18)
20027448:	9b000417 	ldw	r12,16(r19)
2002744c:	12c00504 	addi	r11,r2,20
20027450:	4a51883a 	add	r8,r9,r9
20027454:	6319883a 	add	r12,r12,r12
20027458:	4211883a 	add	r8,r8,r8
2002745c:	6319883a 	add	r12,r12,r12
20027460:	15000315 	stw	r20,12(r2)
20027464:	8211883a 	add	r8,r16,r8
20027468:	8b19883a 	add	r12,r17,r12
2002746c:	0007883a 	mov	r3,zero
20027470:	81400017 	ldw	r5,0(r16)
20027474:	89c00017 	ldw	r7,0(r17)
20027478:	59800104 	addi	r6,r11,4
2002747c:	293fffcc 	andi	r4,r5,65535
20027480:	20c7883a 	add	r3,r4,r3
20027484:	393fffcc 	andi	r4,r7,65535
20027488:	1909c83a 	sub	r4,r3,r4
2002748c:	280ad43a 	srli	r5,r5,16
20027490:	380ed43a 	srli	r7,r7,16
20027494:	2007d43a 	srai	r3,r4,16
20027498:	213fffcc 	andi	r4,r4,65535
2002749c:	29cbc83a 	sub	r5,r5,r7
200274a0:	28c7883a 	add	r3,r5,r3
200274a4:	180a943a 	slli	r5,r3,16
200274a8:	8c400104 	addi	r17,r17,4
200274ac:	84000104 	addi	r16,r16,4
200274b0:	2908b03a 	or	r4,r5,r4
200274b4:	59000015 	stw	r4,0(r11)
200274b8:	1807d43a 	srai	r3,r3,16
200274bc:	3015883a 	mov	r10,r6
200274c0:	3017883a 	mov	r11,r6
200274c4:	8b3fea36 	bltu	r17,r12,20027470 <__alt_data_end+0xfffe8070>
200274c8:	8200162e 	bgeu	r16,r8,20027524 <__mdiff+0x17c>
200274cc:	8017883a 	mov	r11,r16
200274d0:	59400017 	ldw	r5,0(r11)
200274d4:	31800104 	addi	r6,r6,4
200274d8:	5ac00104 	addi	r11,r11,4
200274dc:	293fffcc 	andi	r4,r5,65535
200274e0:	20c7883a 	add	r3,r4,r3
200274e4:	280ed43a 	srli	r7,r5,16
200274e8:	180bd43a 	srai	r5,r3,16
200274ec:	193fffcc 	andi	r4,r3,65535
200274f0:	3947883a 	add	r3,r7,r5
200274f4:	180a943a 	slli	r5,r3,16
200274f8:	1807d43a 	srai	r3,r3,16
200274fc:	2908b03a 	or	r4,r5,r4
20027500:	313fff15 	stw	r4,-4(r6)
20027504:	5a3ff236 	bltu	r11,r8,200274d0 <__alt_data_end+0xfffe80d0>
20027508:	0406303a 	nor	r3,zero,r16
2002750c:	1a07883a 	add	r3,r3,r8
20027510:	1806d0ba 	srli	r3,r3,2
20027514:	18c00044 	addi	r3,r3,1
20027518:	18c7883a 	add	r3,r3,r3
2002751c:	18c7883a 	add	r3,r3,r3
20027520:	50d5883a 	add	r10,r10,r3
20027524:	50ffff04 	addi	r3,r10,-4
20027528:	2000041e 	bne	r4,zero,2002753c <__mdiff+0x194>
2002752c:	18ffff04 	addi	r3,r3,-4
20027530:	19000017 	ldw	r4,0(r3)
20027534:	4a7fffc4 	addi	r9,r9,-1
20027538:	203ffc26 	beq	r4,zero,2002752c <__alt_data_end+0xfffe812c>
2002753c:	12400415 	stw	r9,16(r2)
20027540:	dfc00517 	ldw	ra,20(sp)
20027544:	dd000417 	ldw	r20,16(sp)
20027548:	dcc00317 	ldw	r19,12(sp)
2002754c:	dc800217 	ldw	r18,8(sp)
20027550:	dc400117 	ldw	r17,4(sp)
20027554:	dc000017 	ldw	r16,0(sp)
20027558:	dec00604 	addi	sp,sp,24
2002755c:	f800283a 	ret
20027560:	000b883a 	mov	r5,zero
20027564:	0026a800 	call	20026a80 <_Balloc>
20027568:	00c00044 	movi	r3,1
2002756c:	10c00415 	stw	r3,16(r2)
20027570:	10000515 	stw	zero,20(r2)
20027574:	003ff206 	br	20027540 <__alt_data_end+0xfffe8140>
20027578:	8023883a 	mov	r17,r16
2002757c:	0029883a 	mov	r20,zero
20027580:	4021883a 	mov	r16,r8
20027584:	003fad06 	br	2002743c <__alt_data_end+0xfffe803c>
20027588:	9005883a 	mov	r2,r18
2002758c:	94400504 	addi	r17,r18,20
20027590:	9c000504 	addi	r16,r19,20
20027594:	9825883a 	mov	r18,r19
20027598:	05000044 	movi	r20,1
2002759c:	1027883a 	mov	r19,r2
200275a0:	003fa606 	br	2002743c <__alt_data_end+0xfffe803c>

200275a4 <__ulp>:
200275a4:	295ffc2c 	andhi	r5,r5,32752
200275a8:	00bf3034 	movhi	r2,64704
200275ac:	2887883a 	add	r3,r5,r2
200275b0:	00c0020e 	bge	zero,r3,200275bc <__ulp+0x18>
200275b4:	0005883a 	mov	r2,zero
200275b8:	f800283a 	ret
200275bc:	00c7c83a 	sub	r3,zero,r3
200275c0:	1807d53a 	srai	r3,r3,20
200275c4:	008004c4 	movi	r2,19
200275c8:	10c00b0e 	bge	r2,r3,200275f8 <__ulp+0x54>
200275cc:	18bffb04 	addi	r2,r3,-20
200275d0:	01000784 	movi	r4,30
200275d4:	0007883a 	mov	r3,zero
200275d8:	20800516 	blt	r4,r2,200275f0 <__ulp+0x4c>
200275dc:	010007c4 	movi	r4,31
200275e0:	2089c83a 	sub	r4,r4,r2
200275e4:	00800044 	movi	r2,1
200275e8:	1104983a 	sll	r2,r2,r4
200275ec:	f800283a 	ret
200275f0:	00800044 	movi	r2,1
200275f4:	f800283a 	ret
200275f8:	01400234 	movhi	r5,8
200275fc:	28c7d83a 	sra	r3,r5,r3
20027600:	0005883a 	mov	r2,zero
20027604:	f800283a 	ret

20027608 <__b2d>:
20027608:	defffa04 	addi	sp,sp,-24
2002760c:	dc000015 	stw	r16,0(sp)
20027610:	24000417 	ldw	r16,16(r4)
20027614:	dc400115 	stw	r17,4(sp)
20027618:	24400504 	addi	r17,r4,20
2002761c:	8421883a 	add	r16,r16,r16
20027620:	8421883a 	add	r16,r16,r16
20027624:	8c21883a 	add	r16,r17,r16
20027628:	dc800215 	stw	r18,8(sp)
2002762c:	84bfff17 	ldw	r18,-4(r16)
20027630:	dd000415 	stw	r20,16(sp)
20027634:	dcc00315 	stw	r19,12(sp)
20027638:	9009883a 	mov	r4,r18
2002763c:	2829883a 	mov	r20,r5
20027640:	dfc00515 	stw	ra,20(sp)
20027644:	0026d740 	call	20026d74 <__hi0bits>
20027648:	00c00804 	movi	r3,32
2002764c:	1889c83a 	sub	r4,r3,r2
20027650:	a1000015 	stw	r4,0(r20)
20027654:	01000284 	movi	r4,10
20027658:	84ffff04 	addi	r19,r16,-4
2002765c:	20801216 	blt	r4,r2,200276a8 <__b2d+0xa0>
20027660:	018002c4 	movi	r6,11
20027664:	308dc83a 	sub	r6,r6,r2
20027668:	9186d83a 	srl	r3,r18,r6
2002766c:	18cffc34 	orhi	r3,r3,16368
20027670:	8cc0212e 	bgeu	r17,r19,200276f8 <__b2d+0xf0>
20027674:	813ffe17 	ldw	r4,-8(r16)
20027678:	218cd83a 	srl	r6,r4,r6
2002767c:	10800544 	addi	r2,r2,21
20027680:	9084983a 	sll	r2,r18,r2
20027684:	1184b03a 	or	r2,r2,r6
20027688:	dfc00517 	ldw	ra,20(sp)
2002768c:	dd000417 	ldw	r20,16(sp)
20027690:	dcc00317 	ldw	r19,12(sp)
20027694:	dc800217 	ldw	r18,8(sp)
20027698:	dc400117 	ldw	r17,4(sp)
2002769c:	dc000017 	ldw	r16,0(sp)
200276a0:	dec00604 	addi	sp,sp,24
200276a4:	f800283a 	ret
200276a8:	8cc00f2e 	bgeu	r17,r19,200276e8 <__b2d+0xe0>
200276ac:	117ffd44 	addi	r5,r2,-11
200276b0:	80bffe17 	ldw	r2,-8(r16)
200276b4:	28000e26 	beq	r5,zero,200276f0 <__b2d+0xe8>
200276b8:	1949c83a 	sub	r4,r3,r5
200276bc:	9164983a 	sll	r18,r18,r5
200276c0:	1106d83a 	srl	r3,r2,r4
200276c4:	81bffe04 	addi	r6,r16,-8
200276c8:	948ffc34 	orhi	r18,r18,16368
200276cc:	90c6b03a 	or	r3,r18,r3
200276d0:	89800e2e 	bgeu	r17,r6,2002770c <__b2d+0x104>
200276d4:	81bffd17 	ldw	r6,-12(r16)
200276d8:	1144983a 	sll	r2,r2,r5
200276dc:	310ad83a 	srl	r5,r6,r4
200276e0:	2884b03a 	or	r2,r5,r2
200276e4:	003fe806 	br	20027688 <__alt_data_end+0xfffe8288>
200276e8:	10bffd44 	addi	r2,r2,-11
200276ec:	1000041e 	bne	r2,zero,20027700 <__b2d+0xf8>
200276f0:	90cffc34 	orhi	r3,r18,16368
200276f4:	003fe406 	br	20027688 <__alt_data_end+0xfffe8288>
200276f8:	000d883a 	mov	r6,zero
200276fc:	003fdf06 	br	2002767c <__alt_data_end+0xfffe827c>
20027700:	90a4983a 	sll	r18,r18,r2
20027704:	0005883a 	mov	r2,zero
20027708:	003ff906 	br	200276f0 <__alt_data_end+0xfffe82f0>
2002770c:	1144983a 	sll	r2,r2,r5
20027710:	003fdd06 	br	20027688 <__alt_data_end+0xfffe8288>

20027714 <__d2b>:
20027714:	defff804 	addi	sp,sp,-32
20027718:	dc000215 	stw	r16,8(sp)
2002771c:	3021883a 	mov	r16,r6
20027720:	dc400315 	stw	r17,12(sp)
20027724:	8022907a 	slli	r17,r16,1
20027728:	dd000615 	stw	r20,24(sp)
2002772c:	2829883a 	mov	r20,r5
20027730:	01400044 	movi	r5,1
20027734:	dcc00515 	stw	r19,20(sp)
20027738:	dc800415 	stw	r18,16(sp)
2002773c:	dfc00715 	stw	ra,28(sp)
20027740:	3825883a 	mov	r18,r7
20027744:	8822d57a 	srli	r17,r17,21
20027748:	0026a800 	call	20026a80 <_Balloc>
2002774c:	1027883a 	mov	r19,r2
20027750:	00800434 	movhi	r2,16
20027754:	10bfffc4 	addi	r2,r2,-1
20027758:	808c703a 	and	r6,r16,r2
2002775c:	88000126 	beq	r17,zero,20027764 <__d2b+0x50>
20027760:	31800434 	orhi	r6,r6,16
20027764:	d9800015 	stw	r6,0(sp)
20027768:	a0002426 	beq	r20,zero,200277fc <__d2b+0xe8>
2002776c:	d9000104 	addi	r4,sp,4
20027770:	dd000115 	stw	r20,4(sp)
20027774:	0026ddc0 	call	20026ddc <__lo0bits>
20027778:	d8c00017 	ldw	r3,0(sp)
2002777c:	10002f1e 	bne	r2,zero,2002783c <__d2b+0x128>
20027780:	d9000117 	ldw	r4,4(sp)
20027784:	99000515 	stw	r4,20(r19)
20027788:	1821003a 	cmpeq	r16,r3,zero
2002778c:	01000084 	movi	r4,2
20027790:	2421c83a 	sub	r16,r4,r16
20027794:	98c00615 	stw	r3,24(r19)
20027798:	9c000415 	stw	r16,16(r19)
2002779c:	88001f1e 	bne	r17,zero,2002781c <__d2b+0x108>
200277a0:	10bef384 	addi	r2,r2,-1074
200277a4:	90800015 	stw	r2,0(r18)
200277a8:	00900034 	movhi	r2,16384
200277ac:	10bfffc4 	addi	r2,r2,-1
200277b0:	8085883a 	add	r2,r16,r2
200277b4:	1085883a 	add	r2,r2,r2
200277b8:	1085883a 	add	r2,r2,r2
200277bc:	9885883a 	add	r2,r19,r2
200277c0:	11000517 	ldw	r4,20(r2)
200277c4:	8020917a 	slli	r16,r16,5
200277c8:	0026d740 	call	20026d74 <__hi0bits>
200277cc:	d8c00817 	ldw	r3,32(sp)
200277d0:	8085c83a 	sub	r2,r16,r2
200277d4:	18800015 	stw	r2,0(r3)
200277d8:	9805883a 	mov	r2,r19
200277dc:	dfc00717 	ldw	ra,28(sp)
200277e0:	dd000617 	ldw	r20,24(sp)
200277e4:	dcc00517 	ldw	r19,20(sp)
200277e8:	dc800417 	ldw	r18,16(sp)
200277ec:	dc400317 	ldw	r17,12(sp)
200277f0:	dc000217 	ldw	r16,8(sp)
200277f4:	dec00804 	addi	sp,sp,32
200277f8:	f800283a 	ret
200277fc:	d809883a 	mov	r4,sp
20027800:	0026ddc0 	call	20026ddc <__lo0bits>
20027804:	d8c00017 	ldw	r3,0(sp)
20027808:	04000044 	movi	r16,1
2002780c:	9c000415 	stw	r16,16(r19)
20027810:	98c00515 	stw	r3,20(r19)
20027814:	10800804 	addi	r2,r2,32
20027818:	883fe126 	beq	r17,zero,200277a0 <__alt_data_end+0xfffe83a0>
2002781c:	00c00d44 	movi	r3,53
20027820:	8c7ef344 	addi	r17,r17,-1075
20027824:	88a3883a 	add	r17,r17,r2
20027828:	1885c83a 	sub	r2,r3,r2
2002782c:	d8c00817 	ldw	r3,32(sp)
20027830:	94400015 	stw	r17,0(r18)
20027834:	18800015 	stw	r2,0(r3)
20027838:	003fe706 	br	200277d8 <__alt_data_end+0xfffe83d8>
2002783c:	01000804 	movi	r4,32
20027840:	2089c83a 	sub	r4,r4,r2
20027844:	1908983a 	sll	r4,r3,r4
20027848:	d9400117 	ldw	r5,4(sp)
2002784c:	1886d83a 	srl	r3,r3,r2
20027850:	2148b03a 	or	r4,r4,r5
20027854:	99000515 	stw	r4,20(r19)
20027858:	d8c00015 	stw	r3,0(sp)
2002785c:	003fca06 	br	20027788 <__alt_data_end+0xfffe8388>

20027860 <__ratio>:
20027860:	defff904 	addi	sp,sp,-28
20027864:	dc400315 	stw	r17,12(sp)
20027868:	2823883a 	mov	r17,r5
2002786c:	d9400104 	addi	r5,sp,4
20027870:	dfc00615 	stw	ra,24(sp)
20027874:	dcc00515 	stw	r19,20(sp)
20027878:	dc800415 	stw	r18,16(sp)
2002787c:	2027883a 	mov	r19,r4
20027880:	dc000215 	stw	r16,8(sp)
20027884:	00276080 	call	20027608 <__b2d>
20027888:	d80b883a 	mov	r5,sp
2002788c:	8809883a 	mov	r4,r17
20027890:	1025883a 	mov	r18,r2
20027894:	1821883a 	mov	r16,r3
20027898:	00276080 	call	20027608 <__b2d>
2002789c:	8a000417 	ldw	r8,16(r17)
200278a0:	99000417 	ldw	r4,16(r19)
200278a4:	d9400117 	ldw	r5,4(sp)
200278a8:	2209c83a 	sub	r4,r4,r8
200278ac:	2010917a 	slli	r8,r4,5
200278b0:	d9000017 	ldw	r4,0(sp)
200278b4:	2909c83a 	sub	r4,r5,r4
200278b8:	4109883a 	add	r4,r8,r4
200278bc:	01000e0e 	bge	zero,r4,200278f8 <__ratio+0x98>
200278c0:	2008953a 	slli	r4,r4,20
200278c4:	2421883a 	add	r16,r4,r16
200278c8:	100d883a 	mov	r6,r2
200278cc:	180f883a 	mov	r7,r3
200278d0:	9009883a 	mov	r4,r18
200278d4:	800b883a 	mov	r5,r16
200278d8:	002b7600 	call	2002b760 <__divdf3>
200278dc:	dfc00617 	ldw	ra,24(sp)
200278e0:	dcc00517 	ldw	r19,20(sp)
200278e4:	dc800417 	ldw	r18,16(sp)
200278e8:	dc400317 	ldw	r17,12(sp)
200278ec:	dc000217 	ldw	r16,8(sp)
200278f0:	dec00704 	addi	sp,sp,28
200278f4:	f800283a 	ret
200278f8:	2008953a 	slli	r4,r4,20
200278fc:	1907c83a 	sub	r3,r3,r4
20027900:	003ff106 	br	200278c8 <__alt_data_end+0xfffe84c8>

20027904 <_mprec_log10>:
20027904:	defffe04 	addi	sp,sp,-8
20027908:	dc000015 	stw	r16,0(sp)
2002790c:	dfc00115 	stw	ra,4(sp)
20027910:	008005c4 	movi	r2,23
20027914:	2021883a 	mov	r16,r4
20027918:	11000d0e 	bge	r2,r4,20027950 <_mprec_log10+0x4c>
2002791c:	0005883a 	mov	r2,zero
20027920:	00cffc34 	movhi	r3,16368
20027924:	843fffc4 	addi	r16,r16,-1
20027928:	000d883a 	mov	r6,zero
2002792c:	01d00934 	movhi	r7,16420
20027930:	1009883a 	mov	r4,r2
20027934:	180b883a 	mov	r5,r3
20027938:	002c2a00 	call	2002c2a0 <__muldf3>
2002793c:	803ff91e 	bne	r16,zero,20027924 <__alt_data_end+0xfffe8524>
20027940:	dfc00117 	ldw	ra,4(sp)
20027944:	dc000017 	ldw	r16,0(sp)
20027948:	dec00204 	addi	sp,sp,8
2002794c:	f800283a 	ret
20027950:	202090fa 	slli	r16,r4,3
20027954:	008800f4 	movhi	r2,8195
20027958:	10bfc904 	addi	r2,r2,-220
2002795c:	1421883a 	add	r16,r2,r16
20027960:	80800017 	ldw	r2,0(r16)
20027964:	80c00117 	ldw	r3,4(r16)
20027968:	dfc00117 	ldw	ra,4(sp)
2002796c:	dc000017 	ldw	r16,0(sp)
20027970:	dec00204 	addi	sp,sp,8
20027974:	f800283a 	ret

20027978 <__copybits>:
20027978:	297fffc4 	addi	r5,r5,-1
2002797c:	280fd17a 	srai	r7,r5,5
20027980:	30c00417 	ldw	r3,16(r6)
20027984:	30800504 	addi	r2,r6,20
20027988:	39c00044 	addi	r7,r7,1
2002798c:	18c7883a 	add	r3,r3,r3
20027990:	39cf883a 	add	r7,r7,r7
20027994:	18c7883a 	add	r3,r3,r3
20027998:	39cf883a 	add	r7,r7,r7
2002799c:	10c7883a 	add	r3,r2,r3
200279a0:	21cf883a 	add	r7,r4,r7
200279a4:	10c00d2e 	bgeu	r2,r3,200279dc <__copybits+0x64>
200279a8:	200b883a 	mov	r5,r4
200279ac:	12000017 	ldw	r8,0(r2)
200279b0:	29400104 	addi	r5,r5,4
200279b4:	10800104 	addi	r2,r2,4
200279b8:	2a3fff15 	stw	r8,-4(r5)
200279bc:	10fffb36 	bltu	r2,r3,200279ac <__alt_data_end+0xfffe85ac>
200279c0:	1985c83a 	sub	r2,r3,r6
200279c4:	10bffac4 	addi	r2,r2,-21
200279c8:	1004d0ba 	srli	r2,r2,2
200279cc:	10800044 	addi	r2,r2,1
200279d0:	1085883a 	add	r2,r2,r2
200279d4:	1085883a 	add	r2,r2,r2
200279d8:	2089883a 	add	r4,r4,r2
200279dc:	21c0032e 	bgeu	r4,r7,200279ec <__copybits+0x74>
200279e0:	20000015 	stw	zero,0(r4)
200279e4:	21000104 	addi	r4,r4,4
200279e8:	21fffd36 	bltu	r4,r7,200279e0 <__alt_data_end+0xfffe85e0>
200279ec:	f800283a 	ret

200279f0 <__any_on>:
200279f0:	20c00417 	ldw	r3,16(r4)
200279f4:	2805d17a 	srai	r2,r5,5
200279f8:	21000504 	addi	r4,r4,20
200279fc:	18800d0e 	bge	r3,r2,20027a34 <__any_on+0x44>
20027a00:	18c7883a 	add	r3,r3,r3
20027a04:	18c7883a 	add	r3,r3,r3
20027a08:	20c7883a 	add	r3,r4,r3
20027a0c:	20c0192e 	bgeu	r4,r3,20027a74 <__any_on+0x84>
20027a10:	18bfff17 	ldw	r2,-4(r3)
20027a14:	18ffff04 	addi	r3,r3,-4
20027a18:	1000041e 	bne	r2,zero,20027a2c <__any_on+0x3c>
20027a1c:	20c0142e 	bgeu	r4,r3,20027a70 <__any_on+0x80>
20027a20:	18ffff04 	addi	r3,r3,-4
20027a24:	19400017 	ldw	r5,0(r3)
20027a28:	283ffc26 	beq	r5,zero,20027a1c <__alt_data_end+0xfffe861c>
20027a2c:	00800044 	movi	r2,1
20027a30:	f800283a 	ret
20027a34:	10c00a0e 	bge	r2,r3,20027a60 <__any_on+0x70>
20027a38:	1085883a 	add	r2,r2,r2
20027a3c:	1085883a 	add	r2,r2,r2
20027a40:	294007cc 	andi	r5,r5,31
20027a44:	2087883a 	add	r3,r4,r2
20027a48:	283ff026 	beq	r5,zero,20027a0c <__alt_data_end+0xfffe860c>
20027a4c:	19800017 	ldw	r6,0(r3)
20027a50:	3144d83a 	srl	r2,r6,r5
20027a54:	114a983a 	sll	r5,r2,r5
20027a58:	317ff41e 	bne	r6,r5,20027a2c <__alt_data_end+0xfffe862c>
20027a5c:	003feb06 	br	20027a0c <__alt_data_end+0xfffe860c>
20027a60:	1085883a 	add	r2,r2,r2
20027a64:	1085883a 	add	r2,r2,r2
20027a68:	2087883a 	add	r3,r4,r2
20027a6c:	003fe706 	br	20027a0c <__alt_data_end+0xfffe860c>
20027a70:	f800283a 	ret
20027a74:	0005883a 	mov	r2,zero
20027a78:	f800283a 	ret

20027a7c <_putc_r>:
20027a7c:	defffc04 	addi	sp,sp,-16
20027a80:	dc000215 	stw	r16,8(sp)
20027a84:	dfc00315 	stw	ra,12(sp)
20027a88:	2021883a 	mov	r16,r4
20027a8c:	20000226 	beq	r4,zero,20027a98 <_putc_r+0x1c>
20027a90:	20800e17 	ldw	r2,56(r4)
20027a94:	10001b26 	beq	r2,zero,20027b04 <_putc_r+0x88>
20027a98:	30800217 	ldw	r2,8(r6)
20027a9c:	10bfffc4 	addi	r2,r2,-1
20027aa0:	30800215 	stw	r2,8(r6)
20027aa4:	10000a16 	blt	r2,zero,20027ad0 <_putc_r+0x54>
20027aa8:	30800017 	ldw	r2,0(r6)
20027aac:	11400005 	stb	r5,0(r2)
20027ab0:	30800017 	ldw	r2,0(r6)
20027ab4:	10c00044 	addi	r3,r2,1
20027ab8:	30c00015 	stw	r3,0(r6)
20027abc:	10800003 	ldbu	r2,0(r2)
20027ac0:	dfc00317 	ldw	ra,12(sp)
20027ac4:	dc000217 	ldw	r16,8(sp)
20027ac8:	dec00404 	addi	sp,sp,16
20027acc:	f800283a 	ret
20027ad0:	30c00617 	ldw	r3,24(r6)
20027ad4:	10c00616 	blt	r2,r3,20027af0 <_putc_r+0x74>
20027ad8:	30800017 	ldw	r2,0(r6)
20027adc:	00c00284 	movi	r3,10
20027ae0:	11400005 	stb	r5,0(r2)
20027ae4:	30800017 	ldw	r2,0(r6)
20027ae8:	11400003 	ldbu	r5,0(r2)
20027aec:	28fff11e 	bne	r5,r3,20027ab4 <__alt_data_end+0xfffe86b4>
20027af0:	8009883a 	mov	r4,r16
20027af4:	dfc00317 	ldw	ra,12(sp)
20027af8:	dc000217 	ldw	r16,8(sp)
20027afc:	dec00404 	addi	sp,sp,16
20027b00:	0029a701 	jmpi	20029a70 <__swbuf_r>
20027b04:	d9400015 	stw	r5,0(sp)
20027b08:	d9800115 	stw	r6,4(sp)
20027b0c:	00251ac0 	call	200251ac <__sinit>
20027b10:	d9800117 	ldw	r6,4(sp)
20027b14:	d9400017 	ldw	r5,0(sp)
20027b18:	003fdf06 	br	20027a98 <__alt_data_end+0xfffe8698>

20027b1c <putc>:
20027b1c:	008800f4 	movhi	r2,8195
20027b20:	defffc04 	addi	sp,sp,-16
20027b24:	1086fa04 	addi	r2,r2,7144
20027b28:	dc000115 	stw	r16,4(sp)
20027b2c:	14000017 	ldw	r16,0(r2)
20027b30:	dc400215 	stw	r17,8(sp)
20027b34:	dfc00315 	stw	ra,12(sp)
20027b38:	2023883a 	mov	r17,r4
20027b3c:	80000226 	beq	r16,zero,20027b48 <putc+0x2c>
20027b40:	80800e17 	ldw	r2,56(r16)
20027b44:	10001a26 	beq	r2,zero,20027bb0 <putc+0x94>
20027b48:	28800217 	ldw	r2,8(r5)
20027b4c:	10bfffc4 	addi	r2,r2,-1
20027b50:	28800215 	stw	r2,8(r5)
20027b54:	10000b16 	blt	r2,zero,20027b84 <putc+0x68>
20027b58:	28800017 	ldw	r2,0(r5)
20027b5c:	14400005 	stb	r17,0(r2)
20027b60:	28800017 	ldw	r2,0(r5)
20027b64:	10c00044 	addi	r3,r2,1
20027b68:	28c00015 	stw	r3,0(r5)
20027b6c:	10800003 	ldbu	r2,0(r2)
20027b70:	dfc00317 	ldw	ra,12(sp)
20027b74:	dc400217 	ldw	r17,8(sp)
20027b78:	dc000117 	ldw	r16,4(sp)
20027b7c:	dec00404 	addi	sp,sp,16
20027b80:	f800283a 	ret
20027b84:	28c00617 	ldw	r3,24(r5)
20027b88:	10c00e16 	blt	r2,r3,20027bc4 <putc+0xa8>
20027b8c:	28800017 	ldw	r2,0(r5)
20027b90:	01000284 	movi	r4,10
20027b94:	14400005 	stb	r17,0(r2)
20027b98:	28800017 	ldw	r2,0(r5)
20027b9c:	10c00003 	ldbu	r3,0(r2)
20027ba0:	193ff01e 	bne	r3,r4,20027b64 <__alt_data_end+0xfffe8764>
20027ba4:	280d883a 	mov	r6,r5
20027ba8:	180b883a 	mov	r5,r3
20027bac:	00000706 	br	20027bcc <putc+0xb0>
20027bb0:	8009883a 	mov	r4,r16
20027bb4:	d9400015 	stw	r5,0(sp)
20027bb8:	00251ac0 	call	200251ac <__sinit>
20027bbc:	d9400017 	ldw	r5,0(sp)
20027bc0:	003fe106 	br	20027b48 <__alt_data_end+0xfffe8748>
20027bc4:	280d883a 	mov	r6,r5
20027bc8:	880b883a 	mov	r5,r17
20027bcc:	8009883a 	mov	r4,r16
20027bd0:	dfc00317 	ldw	ra,12(sp)
20027bd4:	dc400217 	ldw	r17,8(sp)
20027bd8:	dc000117 	ldw	r16,4(sp)
20027bdc:	dec00404 	addi	sp,sp,16
20027be0:	0029a701 	jmpi	20029a70 <__swbuf_r>

20027be4 <_realloc_r>:
20027be4:	defff604 	addi	sp,sp,-40
20027be8:	dc800215 	stw	r18,8(sp)
20027bec:	dfc00915 	stw	ra,36(sp)
20027bf0:	df000815 	stw	fp,32(sp)
20027bf4:	ddc00715 	stw	r23,28(sp)
20027bf8:	dd800615 	stw	r22,24(sp)
20027bfc:	dd400515 	stw	r21,20(sp)
20027c00:	dd000415 	stw	r20,16(sp)
20027c04:	dcc00315 	stw	r19,12(sp)
20027c08:	dc400115 	stw	r17,4(sp)
20027c0c:	dc000015 	stw	r16,0(sp)
20027c10:	3025883a 	mov	r18,r6
20027c14:	2800b726 	beq	r5,zero,20027ef4 <_realloc_r+0x310>
20027c18:	282b883a 	mov	r21,r5
20027c1c:	2029883a 	mov	r20,r4
20027c20:	002dae00 	call	2002dae0 <__malloc_lock>
20027c24:	a8bfff17 	ldw	r2,-4(r21)
20027c28:	043fff04 	movi	r16,-4
20027c2c:	90c002c4 	addi	r3,r18,11
20027c30:	01000584 	movi	r4,22
20027c34:	acfffe04 	addi	r19,r21,-8
20027c38:	1420703a 	and	r16,r2,r16
20027c3c:	20c0332e 	bgeu	r4,r3,20027d0c <_realloc_r+0x128>
20027c40:	047ffe04 	movi	r17,-8
20027c44:	1c62703a 	and	r17,r3,r17
20027c48:	8807883a 	mov	r3,r17
20027c4c:	88005816 	blt	r17,zero,20027db0 <_realloc_r+0x1cc>
20027c50:	8c805736 	bltu	r17,r18,20027db0 <_realloc_r+0x1cc>
20027c54:	80c0300e 	bge	r16,r3,20027d18 <_realloc_r+0x134>
20027c58:	070800f4 	movhi	fp,8195
20027c5c:	e7017504 	addi	fp,fp,1492
20027c60:	e1c00217 	ldw	r7,8(fp)
20027c64:	9c09883a 	add	r4,r19,r16
20027c68:	22000117 	ldw	r8,4(r4)
20027c6c:	21c06326 	beq	r4,r7,20027dfc <_realloc_r+0x218>
20027c70:	017fff84 	movi	r5,-2
20027c74:	414a703a 	and	r5,r8,r5
20027c78:	214b883a 	add	r5,r4,r5
20027c7c:	29800117 	ldw	r6,4(r5)
20027c80:	3180004c 	andi	r6,r6,1
20027c84:	30003f26 	beq	r6,zero,20027d84 <_realloc_r+0x1a0>
20027c88:	1080004c 	andi	r2,r2,1
20027c8c:	10008326 	beq	r2,zero,20027e9c <_realloc_r+0x2b8>
20027c90:	900b883a 	mov	r5,r18
20027c94:	a009883a 	mov	r4,r20
20027c98:	0025f0c0 	call	20025f0c <_malloc_r>
20027c9c:	1025883a 	mov	r18,r2
20027ca0:	10011e26 	beq	r2,zero,2002811c <_realloc_r+0x538>
20027ca4:	a93fff17 	ldw	r4,-4(r21)
20027ca8:	10fffe04 	addi	r3,r2,-8
20027cac:	00bfff84 	movi	r2,-2
20027cb0:	2084703a 	and	r2,r4,r2
20027cb4:	9885883a 	add	r2,r19,r2
20027cb8:	1880ee26 	beq	r3,r2,20028074 <_realloc_r+0x490>
20027cbc:	81bfff04 	addi	r6,r16,-4
20027cc0:	00800904 	movi	r2,36
20027cc4:	1180b836 	bltu	r2,r6,20027fa8 <_realloc_r+0x3c4>
20027cc8:	00c004c4 	movi	r3,19
20027ccc:	19809636 	bltu	r3,r6,20027f28 <_realloc_r+0x344>
20027cd0:	9005883a 	mov	r2,r18
20027cd4:	a807883a 	mov	r3,r21
20027cd8:	19000017 	ldw	r4,0(r3)
20027cdc:	11000015 	stw	r4,0(r2)
20027ce0:	19000117 	ldw	r4,4(r3)
20027ce4:	11000115 	stw	r4,4(r2)
20027ce8:	18c00217 	ldw	r3,8(r3)
20027cec:	10c00215 	stw	r3,8(r2)
20027cf0:	a80b883a 	mov	r5,r21
20027cf4:	a009883a 	mov	r4,r20
20027cf8:	00253200 	call	20025320 <_free_r>
20027cfc:	a009883a 	mov	r4,r20
20027d00:	002db040 	call	2002db04 <__malloc_unlock>
20027d04:	9005883a 	mov	r2,r18
20027d08:	00001206 	br	20027d54 <_realloc_r+0x170>
20027d0c:	00c00404 	movi	r3,16
20027d10:	1823883a 	mov	r17,r3
20027d14:	003fce06 	br	20027c50 <__alt_data_end+0xfffe8850>
20027d18:	a825883a 	mov	r18,r21
20027d1c:	8445c83a 	sub	r2,r16,r17
20027d20:	00c003c4 	movi	r3,15
20027d24:	18802636 	bltu	r3,r2,20027dc0 <_realloc_r+0x1dc>
20027d28:	99800117 	ldw	r6,4(r19)
20027d2c:	9c07883a 	add	r3,r19,r16
20027d30:	3180004c 	andi	r6,r6,1
20027d34:	3420b03a 	or	r16,r6,r16
20027d38:	9c000115 	stw	r16,4(r19)
20027d3c:	18800117 	ldw	r2,4(r3)
20027d40:	10800054 	ori	r2,r2,1
20027d44:	18800115 	stw	r2,4(r3)
20027d48:	a009883a 	mov	r4,r20
20027d4c:	002db040 	call	2002db04 <__malloc_unlock>
20027d50:	9005883a 	mov	r2,r18
20027d54:	dfc00917 	ldw	ra,36(sp)
20027d58:	df000817 	ldw	fp,32(sp)
20027d5c:	ddc00717 	ldw	r23,28(sp)
20027d60:	dd800617 	ldw	r22,24(sp)
20027d64:	dd400517 	ldw	r21,20(sp)
20027d68:	dd000417 	ldw	r20,16(sp)
20027d6c:	dcc00317 	ldw	r19,12(sp)
20027d70:	dc800217 	ldw	r18,8(sp)
20027d74:	dc400117 	ldw	r17,4(sp)
20027d78:	dc000017 	ldw	r16,0(sp)
20027d7c:	dec00a04 	addi	sp,sp,40
20027d80:	f800283a 	ret
20027d84:	017fff04 	movi	r5,-4
20027d88:	414a703a 	and	r5,r8,r5
20027d8c:	814d883a 	add	r6,r16,r5
20027d90:	30c01f16 	blt	r6,r3,20027e10 <_realloc_r+0x22c>
20027d94:	20800317 	ldw	r2,12(r4)
20027d98:	20c00217 	ldw	r3,8(r4)
20027d9c:	a825883a 	mov	r18,r21
20027da0:	3021883a 	mov	r16,r6
20027da4:	18800315 	stw	r2,12(r3)
20027da8:	10c00215 	stw	r3,8(r2)
20027dac:	003fdb06 	br	20027d1c <__alt_data_end+0xfffe891c>
20027db0:	00800304 	movi	r2,12
20027db4:	a0800015 	stw	r2,0(r20)
20027db8:	0005883a 	mov	r2,zero
20027dbc:	003fe506 	br	20027d54 <__alt_data_end+0xfffe8954>
20027dc0:	98c00117 	ldw	r3,4(r19)
20027dc4:	9c4b883a 	add	r5,r19,r17
20027dc8:	11000054 	ori	r4,r2,1
20027dcc:	18c0004c 	andi	r3,r3,1
20027dd0:	1c62b03a 	or	r17,r3,r17
20027dd4:	9c400115 	stw	r17,4(r19)
20027dd8:	29000115 	stw	r4,4(r5)
20027ddc:	2885883a 	add	r2,r5,r2
20027de0:	10c00117 	ldw	r3,4(r2)
20027de4:	29400204 	addi	r5,r5,8
20027de8:	a009883a 	mov	r4,r20
20027dec:	18c00054 	ori	r3,r3,1
20027df0:	10c00115 	stw	r3,4(r2)
20027df4:	00253200 	call	20025320 <_free_r>
20027df8:	003fd306 	br	20027d48 <__alt_data_end+0xfffe8948>
20027dfc:	017fff04 	movi	r5,-4
20027e00:	414a703a 	and	r5,r8,r5
20027e04:	89800404 	addi	r6,r17,16
20027e08:	8151883a 	add	r8,r16,r5
20027e0c:	4180590e 	bge	r8,r6,20027f74 <_realloc_r+0x390>
20027e10:	1080004c 	andi	r2,r2,1
20027e14:	103f9e1e 	bne	r2,zero,20027c90 <__alt_data_end+0xfffe8890>
20027e18:	adbffe17 	ldw	r22,-8(r21)
20027e1c:	00bfff04 	movi	r2,-4
20027e20:	9dadc83a 	sub	r22,r19,r22
20027e24:	b1800117 	ldw	r6,4(r22)
20027e28:	3084703a 	and	r2,r6,r2
20027e2c:	20002026 	beq	r4,zero,20027eb0 <_realloc_r+0x2cc>
20027e30:	80af883a 	add	r23,r16,r2
20027e34:	b96f883a 	add	r23,r23,r5
20027e38:	21c05f26 	beq	r4,r7,20027fb8 <_realloc_r+0x3d4>
20027e3c:	b8c01c16 	blt	r23,r3,20027eb0 <_realloc_r+0x2cc>
20027e40:	20800317 	ldw	r2,12(r4)
20027e44:	20c00217 	ldw	r3,8(r4)
20027e48:	81bfff04 	addi	r6,r16,-4
20027e4c:	01000904 	movi	r4,36
20027e50:	18800315 	stw	r2,12(r3)
20027e54:	10c00215 	stw	r3,8(r2)
20027e58:	b0c00217 	ldw	r3,8(r22)
20027e5c:	b0800317 	ldw	r2,12(r22)
20027e60:	b4800204 	addi	r18,r22,8
20027e64:	18800315 	stw	r2,12(r3)
20027e68:	10c00215 	stw	r3,8(r2)
20027e6c:	21801b36 	bltu	r4,r6,20027edc <_realloc_r+0x2f8>
20027e70:	008004c4 	movi	r2,19
20027e74:	1180352e 	bgeu	r2,r6,20027f4c <_realloc_r+0x368>
20027e78:	a8800017 	ldw	r2,0(r21)
20027e7c:	b0800215 	stw	r2,8(r22)
20027e80:	a8800117 	ldw	r2,4(r21)
20027e84:	b0800315 	stw	r2,12(r22)
20027e88:	008006c4 	movi	r2,27
20027e8c:	11807f36 	bltu	r2,r6,2002808c <_realloc_r+0x4a8>
20027e90:	b0800404 	addi	r2,r22,16
20027e94:	ad400204 	addi	r21,r21,8
20027e98:	00002d06 	br	20027f50 <_realloc_r+0x36c>
20027e9c:	adbffe17 	ldw	r22,-8(r21)
20027ea0:	00bfff04 	movi	r2,-4
20027ea4:	9dadc83a 	sub	r22,r19,r22
20027ea8:	b1000117 	ldw	r4,4(r22)
20027eac:	2084703a 	and	r2,r4,r2
20027eb0:	b03f7726 	beq	r22,zero,20027c90 <__alt_data_end+0xfffe8890>
20027eb4:	80af883a 	add	r23,r16,r2
20027eb8:	b8ff7516 	blt	r23,r3,20027c90 <__alt_data_end+0xfffe8890>
20027ebc:	b0800317 	ldw	r2,12(r22)
20027ec0:	b0c00217 	ldw	r3,8(r22)
20027ec4:	81bfff04 	addi	r6,r16,-4
20027ec8:	01000904 	movi	r4,36
20027ecc:	18800315 	stw	r2,12(r3)
20027ed0:	10c00215 	stw	r3,8(r2)
20027ed4:	b4800204 	addi	r18,r22,8
20027ed8:	21bfe52e 	bgeu	r4,r6,20027e70 <__alt_data_end+0xfffe8a70>
20027edc:	a80b883a 	mov	r5,r21
20027ee0:	9009883a 	mov	r4,r18
20027ee4:	00267fc0 	call	200267fc <memmove>
20027ee8:	b821883a 	mov	r16,r23
20027eec:	b027883a 	mov	r19,r22
20027ef0:	003f8a06 	br	20027d1c <__alt_data_end+0xfffe891c>
20027ef4:	300b883a 	mov	r5,r6
20027ef8:	dfc00917 	ldw	ra,36(sp)
20027efc:	df000817 	ldw	fp,32(sp)
20027f00:	ddc00717 	ldw	r23,28(sp)
20027f04:	dd800617 	ldw	r22,24(sp)
20027f08:	dd400517 	ldw	r21,20(sp)
20027f0c:	dd000417 	ldw	r20,16(sp)
20027f10:	dcc00317 	ldw	r19,12(sp)
20027f14:	dc800217 	ldw	r18,8(sp)
20027f18:	dc400117 	ldw	r17,4(sp)
20027f1c:	dc000017 	ldw	r16,0(sp)
20027f20:	dec00a04 	addi	sp,sp,40
20027f24:	0025f0c1 	jmpi	20025f0c <_malloc_r>
20027f28:	a8c00017 	ldw	r3,0(r21)
20027f2c:	90c00015 	stw	r3,0(r18)
20027f30:	a8c00117 	ldw	r3,4(r21)
20027f34:	90c00115 	stw	r3,4(r18)
20027f38:	00c006c4 	movi	r3,27
20027f3c:	19804536 	bltu	r3,r6,20028054 <_realloc_r+0x470>
20027f40:	90800204 	addi	r2,r18,8
20027f44:	a8c00204 	addi	r3,r21,8
20027f48:	003f6306 	br	20027cd8 <__alt_data_end+0xfffe88d8>
20027f4c:	9005883a 	mov	r2,r18
20027f50:	a8c00017 	ldw	r3,0(r21)
20027f54:	b821883a 	mov	r16,r23
20027f58:	b027883a 	mov	r19,r22
20027f5c:	10c00015 	stw	r3,0(r2)
20027f60:	a8c00117 	ldw	r3,4(r21)
20027f64:	10c00115 	stw	r3,4(r2)
20027f68:	a8c00217 	ldw	r3,8(r21)
20027f6c:	10c00215 	stw	r3,8(r2)
20027f70:	003f6a06 	br	20027d1c <__alt_data_end+0xfffe891c>
20027f74:	9c67883a 	add	r19,r19,r17
20027f78:	4445c83a 	sub	r2,r8,r17
20027f7c:	e4c00215 	stw	r19,8(fp)
20027f80:	10800054 	ori	r2,r2,1
20027f84:	98800115 	stw	r2,4(r19)
20027f88:	a8bfff17 	ldw	r2,-4(r21)
20027f8c:	a009883a 	mov	r4,r20
20027f90:	1080004c 	andi	r2,r2,1
20027f94:	1462b03a 	or	r17,r2,r17
20027f98:	ac7fff15 	stw	r17,-4(r21)
20027f9c:	002db040 	call	2002db04 <__malloc_unlock>
20027fa0:	a805883a 	mov	r2,r21
20027fa4:	003f6b06 	br	20027d54 <__alt_data_end+0xfffe8954>
20027fa8:	a80b883a 	mov	r5,r21
20027fac:	9009883a 	mov	r4,r18
20027fb0:	00267fc0 	call	200267fc <memmove>
20027fb4:	003f4e06 	br	20027cf0 <__alt_data_end+0xfffe88f0>
20027fb8:	89000404 	addi	r4,r17,16
20027fbc:	b93fbc16 	blt	r23,r4,20027eb0 <__alt_data_end+0xfffe8ab0>
20027fc0:	b0800317 	ldw	r2,12(r22)
20027fc4:	b0c00217 	ldw	r3,8(r22)
20027fc8:	81bfff04 	addi	r6,r16,-4
20027fcc:	01000904 	movi	r4,36
20027fd0:	18800315 	stw	r2,12(r3)
20027fd4:	10c00215 	stw	r3,8(r2)
20027fd8:	b4800204 	addi	r18,r22,8
20027fdc:	21804336 	bltu	r4,r6,200280ec <_realloc_r+0x508>
20027fe0:	008004c4 	movi	r2,19
20027fe4:	11803f2e 	bgeu	r2,r6,200280e4 <_realloc_r+0x500>
20027fe8:	a8800017 	ldw	r2,0(r21)
20027fec:	b0800215 	stw	r2,8(r22)
20027ff0:	a8800117 	ldw	r2,4(r21)
20027ff4:	b0800315 	stw	r2,12(r22)
20027ff8:	008006c4 	movi	r2,27
20027ffc:	11803f36 	bltu	r2,r6,200280fc <_realloc_r+0x518>
20028000:	b0800404 	addi	r2,r22,16
20028004:	ad400204 	addi	r21,r21,8
20028008:	a8c00017 	ldw	r3,0(r21)
2002800c:	10c00015 	stw	r3,0(r2)
20028010:	a8c00117 	ldw	r3,4(r21)
20028014:	10c00115 	stw	r3,4(r2)
20028018:	a8c00217 	ldw	r3,8(r21)
2002801c:	10c00215 	stw	r3,8(r2)
20028020:	b447883a 	add	r3,r22,r17
20028024:	bc45c83a 	sub	r2,r23,r17
20028028:	e0c00215 	stw	r3,8(fp)
2002802c:	10800054 	ori	r2,r2,1
20028030:	18800115 	stw	r2,4(r3)
20028034:	b0800117 	ldw	r2,4(r22)
20028038:	a009883a 	mov	r4,r20
2002803c:	1080004c 	andi	r2,r2,1
20028040:	1462b03a 	or	r17,r2,r17
20028044:	b4400115 	stw	r17,4(r22)
20028048:	002db040 	call	2002db04 <__malloc_unlock>
2002804c:	9005883a 	mov	r2,r18
20028050:	003f4006 	br	20027d54 <__alt_data_end+0xfffe8954>
20028054:	a8c00217 	ldw	r3,8(r21)
20028058:	90c00215 	stw	r3,8(r18)
2002805c:	a8c00317 	ldw	r3,12(r21)
20028060:	90c00315 	stw	r3,12(r18)
20028064:	30801126 	beq	r6,r2,200280ac <_realloc_r+0x4c8>
20028068:	90800404 	addi	r2,r18,16
2002806c:	a8c00404 	addi	r3,r21,16
20028070:	003f1906 	br	20027cd8 <__alt_data_end+0xfffe88d8>
20028074:	90ffff17 	ldw	r3,-4(r18)
20028078:	00bfff04 	movi	r2,-4
2002807c:	a825883a 	mov	r18,r21
20028080:	1884703a 	and	r2,r3,r2
20028084:	80a1883a 	add	r16,r16,r2
20028088:	003f2406 	br	20027d1c <__alt_data_end+0xfffe891c>
2002808c:	a8800217 	ldw	r2,8(r21)
20028090:	b0800415 	stw	r2,16(r22)
20028094:	a8800317 	ldw	r2,12(r21)
20028098:	b0800515 	stw	r2,20(r22)
2002809c:	31000a26 	beq	r6,r4,200280c8 <_realloc_r+0x4e4>
200280a0:	b0800604 	addi	r2,r22,24
200280a4:	ad400404 	addi	r21,r21,16
200280a8:	003fa906 	br	20027f50 <__alt_data_end+0xfffe8b50>
200280ac:	a9000417 	ldw	r4,16(r21)
200280b0:	90800604 	addi	r2,r18,24
200280b4:	a8c00604 	addi	r3,r21,24
200280b8:	91000415 	stw	r4,16(r18)
200280bc:	a9000517 	ldw	r4,20(r21)
200280c0:	91000515 	stw	r4,20(r18)
200280c4:	003f0406 	br	20027cd8 <__alt_data_end+0xfffe88d8>
200280c8:	a8c00417 	ldw	r3,16(r21)
200280cc:	ad400604 	addi	r21,r21,24
200280d0:	b0800804 	addi	r2,r22,32
200280d4:	b0c00615 	stw	r3,24(r22)
200280d8:	a8ffff17 	ldw	r3,-4(r21)
200280dc:	b0c00715 	stw	r3,28(r22)
200280e0:	003f9b06 	br	20027f50 <__alt_data_end+0xfffe8b50>
200280e4:	9005883a 	mov	r2,r18
200280e8:	003fc706 	br	20028008 <__alt_data_end+0xfffe8c08>
200280ec:	a80b883a 	mov	r5,r21
200280f0:	9009883a 	mov	r4,r18
200280f4:	00267fc0 	call	200267fc <memmove>
200280f8:	003fc906 	br	20028020 <__alt_data_end+0xfffe8c20>
200280fc:	a8800217 	ldw	r2,8(r21)
20028100:	b0800415 	stw	r2,16(r22)
20028104:	a8800317 	ldw	r2,12(r21)
20028108:	b0800515 	stw	r2,20(r22)
2002810c:	31000726 	beq	r6,r4,2002812c <_realloc_r+0x548>
20028110:	b0800604 	addi	r2,r22,24
20028114:	ad400404 	addi	r21,r21,16
20028118:	003fbb06 	br	20028008 <__alt_data_end+0xfffe8c08>
2002811c:	a009883a 	mov	r4,r20
20028120:	002db040 	call	2002db04 <__malloc_unlock>
20028124:	0005883a 	mov	r2,zero
20028128:	003f0a06 	br	20027d54 <__alt_data_end+0xfffe8954>
2002812c:	a8c00417 	ldw	r3,16(r21)
20028130:	ad400604 	addi	r21,r21,24
20028134:	b0800804 	addi	r2,r22,32
20028138:	b0c00615 	stw	r3,24(r22)
2002813c:	a8ffff17 	ldw	r3,-4(r21)
20028140:	b0c00715 	stw	r3,28(r22)
20028144:	003fb006 	br	20028008 <__alt_data_end+0xfffe8c08>

20028148 <__fpclassifyd>:
20028148:	00a00034 	movhi	r2,32768
2002814c:	10bfffc4 	addi	r2,r2,-1
20028150:	2884703a 	and	r2,r5,r2
20028154:	10000726 	beq	r2,zero,20028174 <__fpclassifyd+0x2c>
20028158:	00fffc34 	movhi	r3,65520
2002815c:	019ff834 	movhi	r6,32736
20028160:	28c7883a 	add	r3,r5,r3
20028164:	31bfffc4 	addi	r6,r6,-1
20028168:	30c00536 	bltu	r6,r3,20028180 <__fpclassifyd+0x38>
2002816c:	00800104 	movi	r2,4
20028170:	f800283a 	ret
20028174:	2000021e 	bne	r4,zero,20028180 <__fpclassifyd+0x38>
20028178:	00800084 	movi	r2,2
2002817c:	f800283a 	ret
20028180:	00dffc34 	movhi	r3,32752
20028184:	019ff834 	movhi	r6,32736
20028188:	28cb883a 	add	r5,r5,r3
2002818c:	31bfffc4 	addi	r6,r6,-1
20028190:	317ff62e 	bgeu	r6,r5,2002816c <__alt_data_end+0xfffe8d6c>
20028194:	01400434 	movhi	r5,16
20028198:	297fffc4 	addi	r5,r5,-1
2002819c:	28800236 	bltu	r5,r2,200281a8 <__fpclassifyd+0x60>
200281a0:	008000c4 	movi	r2,3
200281a4:	f800283a 	ret
200281a8:	10c00226 	beq	r2,r3,200281b4 <__fpclassifyd+0x6c>
200281ac:	0005883a 	mov	r2,zero
200281b0:	f800283a 	ret
200281b4:	2005003a 	cmpeq	r2,r4,zero
200281b8:	f800283a 	ret

200281bc <_sbrk_r>:
200281bc:	defffd04 	addi	sp,sp,-12
200281c0:	dc000015 	stw	r16,0(sp)
200281c4:	040800f4 	movhi	r16,8195
200281c8:	dc400115 	stw	r17,4(sp)
200281cc:	840dca04 	addi	r16,r16,14120
200281d0:	2023883a 	mov	r17,r4
200281d4:	2809883a 	mov	r4,r5
200281d8:	dfc00215 	stw	ra,8(sp)
200281dc:	80000015 	stw	zero,0(r16)
200281e0:	002dcc40 	call	2002dcc4 <sbrk>
200281e4:	00ffffc4 	movi	r3,-1
200281e8:	10c00526 	beq	r2,r3,20028200 <_sbrk_r+0x44>
200281ec:	dfc00217 	ldw	ra,8(sp)
200281f0:	dc400117 	ldw	r17,4(sp)
200281f4:	dc000017 	ldw	r16,0(sp)
200281f8:	dec00304 	addi	sp,sp,12
200281fc:	f800283a 	ret
20028200:	80c00017 	ldw	r3,0(r16)
20028204:	183ff926 	beq	r3,zero,200281ec <__alt_data_end+0xfffe8dec>
20028208:	88c00015 	stw	r3,0(r17)
2002820c:	003ff706 	br	200281ec <__alt_data_end+0xfffe8dec>

20028210 <__sread>:
20028210:	defffe04 	addi	sp,sp,-8
20028214:	dc000015 	stw	r16,0(sp)
20028218:	2821883a 	mov	r16,r5
2002821c:	2940038f 	ldh	r5,14(r5)
20028220:	dfc00115 	stw	ra,4(sp)
20028224:	002a15c0 	call	2002a15c <_read_r>
20028228:	10000716 	blt	r2,zero,20028248 <__sread+0x38>
2002822c:	80c01417 	ldw	r3,80(r16)
20028230:	1887883a 	add	r3,r3,r2
20028234:	80c01415 	stw	r3,80(r16)
20028238:	dfc00117 	ldw	ra,4(sp)
2002823c:	dc000017 	ldw	r16,0(sp)
20028240:	dec00204 	addi	sp,sp,8
20028244:	f800283a 	ret
20028248:	80c0030b 	ldhu	r3,12(r16)
2002824c:	18fbffcc 	andi	r3,r3,61439
20028250:	80c0030d 	sth	r3,12(r16)
20028254:	dfc00117 	ldw	ra,4(sp)
20028258:	dc000017 	ldw	r16,0(sp)
2002825c:	dec00204 	addi	sp,sp,8
20028260:	f800283a 	ret

20028264 <__seofread>:
20028264:	0005883a 	mov	r2,zero
20028268:	f800283a 	ret

2002826c <__swrite>:
2002826c:	2880030b 	ldhu	r2,12(r5)
20028270:	defffb04 	addi	sp,sp,-20
20028274:	dcc00315 	stw	r19,12(sp)
20028278:	dc800215 	stw	r18,8(sp)
2002827c:	dc400115 	stw	r17,4(sp)
20028280:	dc000015 	stw	r16,0(sp)
20028284:	dfc00415 	stw	ra,16(sp)
20028288:	10c0400c 	andi	r3,r2,256
2002828c:	2821883a 	mov	r16,r5
20028290:	2023883a 	mov	r17,r4
20028294:	3025883a 	mov	r18,r6
20028298:	3827883a 	mov	r19,r7
2002829c:	18000526 	beq	r3,zero,200282b4 <__swrite+0x48>
200282a0:	2940038f 	ldh	r5,14(r5)
200282a4:	01c00084 	movi	r7,2
200282a8:	000d883a 	mov	r6,zero
200282ac:	002a0fc0 	call	2002a0fc <_lseek_r>
200282b0:	8080030b 	ldhu	r2,12(r16)
200282b4:	8140038f 	ldh	r5,14(r16)
200282b8:	10bbffcc 	andi	r2,r2,61439
200282bc:	980f883a 	mov	r7,r19
200282c0:	900d883a 	mov	r6,r18
200282c4:	8809883a 	mov	r4,r17
200282c8:	8080030d 	sth	r2,12(r16)
200282cc:	dfc00417 	ldw	ra,16(sp)
200282d0:	dcc00317 	ldw	r19,12(sp)
200282d4:	dc800217 	ldw	r18,8(sp)
200282d8:	dc400117 	ldw	r17,4(sp)
200282dc:	dc000017 	ldw	r16,0(sp)
200282e0:	dec00504 	addi	sp,sp,20
200282e4:	0029bc81 	jmpi	20029bc8 <_write_r>

200282e8 <__sseek>:
200282e8:	defffe04 	addi	sp,sp,-8
200282ec:	dc000015 	stw	r16,0(sp)
200282f0:	2821883a 	mov	r16,r5
200282f4:	2940038f 	ldh	r5,14(r5)
200282f8:	dfc00115 	stw	ra,4(sp)
200282fc:	002a0fc0 	call	2002a0fc <_lseek_r>
20028300:	00ffffc4 	movi	r3,-1
20028304:	10c00826 	beq	r2,r3,20028328 <__sseek+0x40>
20028308:	80c0030b 	ldhu	r3,12(r16)
2002830c:	80801415 	stw	r2,80(r16)
20028310:	18c40014 	ori	r3,r3,4096
20028314:	80c0030d 	sth	r3,12(r16)
20028318:	dfc00117 	ldw	ra,4(sp)
2002831c:	dc000017 	ldw	r16,0(sp)
20028320:	dec00204 	addi	sp,sp,8
20028324:	f800283a 	ret
20028328:	80c0030b 	ldhu	r3,12(r16)
2002832c:	18fbffcc 	andi	r3,r3,61439
20028330:	80c0030d 	sth	r3,12(r16)
20028334:	dfc00117 	ldw	ra,4(sp)
20028338:	dc000017 	ldw	r16,0(sp)
2002833c:	dec00204 	addi	sp,sp,8
20028340:	f800283a 	ret

20028344 <__sclose>:
20028344:	2940038f 	ldh	r5,14(r5)
20028348:	0029c281 	jmpi	20029c28 <_close_r>

2002834c <strcmp>:
2002834c:	2144b03a 	or	r2,r4,r5
20028350:	108000cc 	andi	r2,r2,3
20028354:	1000171e 	bne	r2,zero,200283b4 <strcmp+0x68>
20028358:	20800017 	ldw	r2,0(r4)
2002835c:	28c00017 	ldw	r3,0(r5)
20028360:	10c0141e 	bne	r2,r3,200283b4 <strcmp+0x68>
20028364:	027fbff4 	movhi	r9,65279
20028368:	4a7fbfc4 	addi	r9,r9,-257
2002836c:	0086303a 	nor	r3,zero,r2
20028370:	02202074 	movhi	r8,32897
20028374:	1245883a 	add	r2,r2,r9
20028378:	42202004 	addi	r8,r8,-32640
2002837c:	10c4703a 	and	r2,r2,r3
20028380:	1204703a 	and	r2,r2,r8
20028384:	10000226 	beq	r2,zero,20028390 <strcmp+0x44>
20028388:	00002306 	br	20028418 <strcmp+0xcc>
2002838c:	1000221e 	bne	r2,zero,20028418 <strcmp+0xcc>
20028390:	21000104 	addi	r4,r4,4
20028394:	20c00017 	ldw	r3,0(r4)
20028398:	29400104 	addi	r5,r5,4
2002839c:	29800017 	ldw	r6,0(r5)
200283a0:	1a4f883a 	add	r7,r3,r9
200283a4:	00c4303a 	nor	r2,zero,r3
200283a8:	3884703a 	and	r2,r7,r2
200283ac:	1204703a 	and	r2,r2,r8
200283b0:	19bff626 	beq	r3,r6,2002838c <__alt_data_end+0xfffe8f8c>
200283b4:	20800003 	ldbu	r2,0(r4)
200283b8:	10c03fcc 	andi	r3,r2,255
200283bc:	18c0201c 	xori	r3,r3,128
200283c0:	18ffe004 	addi	r3,r3,-128
200283c4:	18000c26 	beq	r3,zero,200283f8 <strcmp+0xac>
200283c8:	29800007 	ldb	r6,0(r5)
200283cc:	19800326 	beq	r3,r6,200283dc <strcmp+0x90>
200283d0:	00001306 	br	20028420 <strcmp+0xd4>
200283d4:	29800007 	ldb	r6,0(r5)
200283d8:	11800b1e 	bne	r2,r6,20028408 <strcmp+0xbc>
200283dc:	21000044 	addi	r4,r4,1
200283e0:	20c00003 	ldbu	r3,0(r4)
200283e4:	29400044 	addi	r5,r5,1
200283e8:	18803fcc 	andi	r2,r3,255
200283ec:	1080201c 	xori	r2,r2,128
200283f0:	10bfe004 	addi	r2,r2,-128
200283f4:	103ff71e 	bne	r2,zero,200283d4 <__alt_data_end+0xfffe8fd4>
200283f8:	0007883a 	mov	r3,zero
200283fc:	28800003 	ldbu	r2,0(r5)
20028400:	1885c83a 	sub	r2,r3,r2
20028404:	f800283a 	ret
20028408:	28800003 	ldbu	r2,0(r5)
2002840c:	18c03fcc 	andi	r3,r3,255
20028410:	1885c83a 	sub	r2,r3,r2
20028414:	f800283a 	ret
20028418:	0005883a 	mov	r2,zero
2002841c:	f800283a 	ret
20028420:	10c03fcc 	andi	r3,r2,255
20028424:	003ff506 	br	200283fc <__alt_data_end+0xfffe8ffc>

20028428 <__sprint_r.part.0>:
20028428:	28801917 	ldw	r2,100(r5)
2002842c:	defff604 	addi	sp,sp,-40
20028430:	dd400515 	stw	r21,20(sp)
20028434:	dfc00915 	stw	ra,36(sp)
20028438:	df000815 	stw	fp,32(sp)
2002843c:	ddc00715 	stw	r23,28(sp)
20028440:	dd800615 	stw	r22,24(sp)
20028444:	dd000415 	stw	r20,16(sp)
20028448:	dcc00315 	stw	r19,12(sp)
2002844c:	dc800215 	stw	r18,8(sp)
20028450:	dc400115 	stw	r17,4(sp)
20028454:	dc000015 	stw	r16,0(sp)
20028458:	1088000c 	andi	r2,r2,8192
2002845c:	302b883a 	mov	r21,r6
20028460:	10002e26 	beq	r2,zero,2002851c <__sprint_r.part.0+0xf4>
20028464:	30800217 	ldw	r2,8(r6)
20028468:	35800017 	ldw	r22,0(r6)
2002846c:	10002926 	beq	r2,zero,20028514 <__sprint_r.part.0+0xec>
20028470:	2827883a 	mov	r19,r5
20028474:	2029883a 	mov	r20,r4
20028478:	b5c00104 	addi	r23,r22,4
2002847c:	04bfffc4 	movi	r18,-1
20028480:	bc400017 	ldw	r17,0(r23)
20028484:	b4000017 	ldw	r16,0(r22)
20028488:	0039883a 	mov	fp,zero
2002848c:	8822d0ba 	srli	r17,r17,2
20028490:	8800031e 	bne	r17,zero,200284a0 <__sprint_r.part.0+0x78>
20028494:	00001806 	br	200284f8 <__sprint_r.part.0+0xd0>
20028498:	84000104 	addi	r16,r16,4
2002849c:	8f001526 	beq	r17,fp,200284f4 <__sprint_r.part.0+0xcc>
200284a0:	81400017 	ldw	r5,0(r16)
200284a4:	980d883a 	mov	r6,r19
200284a8:	a009883a 	mov	r4,r20
200284ac:	0029fa80 	call	20029fa8 <_fputwc_r>
200284b0:	e7000044 	addi	fp,fp,1
200284b4:	14bff81e 	bne	r2,r18,20028498 <__alt_data_end+0xfffe9098>
200284b8:	9005883a 	mov	r2,r18
200284bc:	a8000215 	stw	zero,8(r21)
200284c0:	a8000115 	stw	zero,4(r21)
200284c4:	dfc00917 	ldw	ra,36(sp)
200284c8:	df000817 	ldw	fp,32(sp)
200284cc:	ddc00717 	ldw	r23,28(sp)
200284d0:	dd800617 	ldw	r22,24(sp)
200284d4:	dd400517 	ldw	r21,20(sp)
200284d8:	dd000417 	ldw	r20,16(sp)
200284dc:	dcc00317 	ldw	r19,12(sp)
200284e0:	dc800217 	ldw	r18,8(sp)
200284e4:	dc400117 	ldw	r17,4(sp)
200284e8:	dc000017 	ldw	r16,0(sp)
200284ec:	dec00a04 	addi	sp,sp,40
200284f0:	f800283a 	ret
200284f4:	a8800217 	ldw	r2,8(r21)
200284f8:	8c63883a 	add	r17,r17,r17
200284fc:	8c63883a 	add	r17,r17,r17
20028500:	1445c83a 	sub	r2,r2,r17
20028504:	a8800215 	stw	r2,8(r21)
20028508:	b5800204 	addi	r22,r22,8
2002850c:	bdc00204 	addi	r23,r23,8
20028510:	103fdb1e 	bne	r2,zero,20028480 <__alt_data_end+0xfffe9080>
20028514:	0005883a 	mov	r2,zero
20028518:	003fe806 	br	200284bc <__alt_data_end+0xfffe90bc>
2002851c:	00256300 	call	20025630 <__sfvwrite_r>
20028520:	003fe606 	br	200284bc <__alt_data_end+0xfffe90bc>

20028524 <__sprint_r>:
20028524:	30c00217 	ldw	r3,8(r6)
20028528:	18000126 	beq	r3,zero,20028530 <__sprint_r+0xc>
2002852c:	00284281 	jmpi	20028428 <__sprint_r.part.0>
20028530:	30000115 	stw	zero,4(r6)
20028534:	0005883a 	mov	r2,zero
20028538:	f800283a 	ret

2002853c <___vfiprintf_internal_r>:
2002853c:	deffc904 	addi	sp,sp,-220
20028540:	df003515 	stw	fp,212(sp)
20028544:	dd003115 	stw	r20,196(sp)
20028548:	dfc03615 	stw	ra,216(sp)
2002854c:	ddc03415 	stw	r23,208(sp)
20028550:	dd803315 	stw	r22,204(sp)
20028554:	dd403215 	stw	r21,200(sp)
20028558:	dcc03015 	stw	r19,192(sp)
2002855c:	dc802f15 	stw	r18,188(sp)
20028560:	dc402e15 	stw	r17,184(sp)
20028564:	dc002d15 	stw	r16,180(sp)
20028568:	d9002015 	stw	r4,128(sp)
2002856c:	d9c02215 	stw	r7,136(sp)
20028570:	2829883a 	mov	r20,r5
20028574:	3039883a 	mov	fp,r6
20028578:	20000226 	beq	r4,zero,20028584 <___vfiprintf_internal_r+0x48>
2002857c:	20800e17 	ldw	r2,56(r4)
20028580:	1000cf26 	beq	r2,zero,200288c0 <___vfiprintf_internal_r+0x384>
20028584:	a080030b 	ldhu	r2,12(r20)
20028588:	10c8000c 	andi	r3,r2,8192
2002858c:	1800061e 	bne	r3,zero,200285a8 <___vfiprintf_internal_r+0x6c>
20028590:	a1001917 	ldw	r4,100(r20)
20028594:	00f7ffc4 	movi	r3,-8193
20028598:	10880014 	ori	r2,r2,8192
2002859c:	20c6703a 	and	r3,r4,r3
200285a0:	a080030d 	sth	r2,12(r20)
200285a4:	a0c01915 	stw	r3,100(r20)
200285a8:	10c0020c 	andi	r3,r2,8
200285ac:	1800a926 	beq	r3,zero,20028854 <___vfiprintf_internal_r+0x318>
200285b0:	a0c00417 	ldw	r3,16(r20)
200285b4:	1800a726 	beq	r3,zero,20028854 <___vfiprintf_internal_r+0x318>
200285b8:	1080068c 	andi	r2,r2,26
200285bc:	00c00284 	movi	r3,10
200285c0:	10c0ac26 	beq	r2,r3,20028874 <___vfiprintf_internal_r+0x338>
200285c4:	da801a04 	addi	r10,sp,104
200285c8:	da801e15 	stw	r10,120(sp)
200285cc:	d8801e17 	ldw	r2,120(sp)
200285d0:	da8019c4 	addi	r10,sp,103
200285d4:	058800f4 	movhi	r22,8195
200285d8:	05c800f4 	movhi	r23,8195
200285dc:	da801f15 	stw	r10,124(sp)
200285e0:	1295c83a 	sub	r10,r2,r10
200285e4:	b5bfff04 	addi	r22,r22,-4
200285e8:	bdfffb04 	addi	r23,r23,-20
200285ec:	dec01a15 	stw	sp,104(sp)
200285f0:	d8001c15 	stw	zero,112(sp)
200285f4:	d8001b15 	stw	zero,108(sp)
200285f8:	d8002615 	stw	zero,152(sp)
200285fc:	d8002315 	stw	zero,140(sp)
20028600:	da802715 	stw	r10,156(sp)
20028604:	d811883a 	mov	r8,sp
20028608:	dd002115 	stw	r20,132(sp)
2002860c:	e021883a 	mov	r16,fp
20028610:	80800007 	ldb	r2,0(r16)
20028614:	1003ea26 	beq	r2,zero,200295c0 <___vfiprintf_internal_r+0x1084>
20028618:	00c00944 	movi	r3,37
2002861c:	8025883a 	mov	r18,r16
20028620:	10c0021e 	bne	r2,r3,2002862c <___vfiprintf_internal_r+0xf0>
20028624:	00001606 	br	20028680 <___vfiprintf_internal_r+0x144>
20028628:	10c00326 	beq	r2,r3,20028638 <___vfiprintf_internal_r+0xfc>
2002862c:	94800044 	addi	r18,r18,1
20028630:	90800007 	ldb	r2,0(r18)
20028634:	103ffc1e 	bne	r2,zero,20028628 <__alt_data_end+0xfffe9228>
20028638:	9423c83a 	sub	r17,r18,r16
2002863c:	88001026 	beq	r17,zero,20028680 <___vfiprintf_internal_r+0x144>
20028640:	d8c01c17 	ldw	r3,112(sp)
20028644:	d8801b17 	ldw	r2,108(sp)
20028648:	44000015 	stw	r16,0(r8)
2002864c:	88c7883a 	add	r3,r17,r3
20028650:	10800044 	addi	r2,r2,1
20028654:	44400115 	stw	r17,4(r8)
20028658:	d8c01c15 	stw	r3,112(sp)
2002865c:	d8801b15 	stw	r2,108(sp)
20028660:	010001c4 	movi	r4,7
20028664:	2080760e 	bge	r4,r2,20028840 <___vfiprintf_internal_r+0x304>
20028668:	1803821e 	bne	r3,zero,20029474 <___vfiprintf_internal_r+0xf38>
2002866c:	da802317 	ldw	r10,140(sp)
20028670:	d8001b15 	stw	zero,108(sp)
20028674:	d811883a 	mov	r8,sp
20028678:	5455883a 	add	r10,r10,r17
2002867c:	da802315 	stw	r10,140(sp)
20028680:	90800007 	ldb	r2,0(r18)
20028684:	10044626 	beq	r2,zero,200297a0 <___vfiprintf_internal_r+0x1264>
20028688:	90c00047 	ldb	r3,1(r18)
2002868c:	94000044 	addi	r16,r18,1
20028690:	d8001d85 	stb	zero,118(sp)
20028694:	0009883a 	mov	r4,zero
20028698:	000f883a 	mov	r7,zero
2002869c:	027fffc4 	movi	r9,-1
200286a0:	0023883a 	mov	r17,zero
200286a4:	0029883a 	mov	r20,zero
200286a8:	01401604 	movi	r5,88
200286ac:	01800244 	movi	r6,9
200286b0:	03400a84 	movi	r13,42
200286b4:	03001b04 	movi	r12,108
200286b8:	84000044 	addi	r16,r16,1
200286bc:	18bff804 	addi	r2,r3,-32
200286c0:	28827336 	bltu	r5,r2,20029090 <___vfiprintf_internal_r+0xb54>
200286c4:	100490ba 	slli	r2,r2,2
200286c8:	028800f4 	movhi	r10,8195
200286cc:	52a1b704 	addi	r10,r10,-31012
200286d0:	1285883a 	add	r2,r2,r10
200286d4:	10800017 	ldw	r2,0(r2)
200286d8:	1000683a 	jmp	r2
200286dc:	20028dc4 	addi	zero,r4,2615
200286e0:	20029090 	cmplti	zero,r4,2626
200286e4:	20029090 	cmplti	zero,r4,2626
200286e8:	20028de4 	muli	zero,r4,2615
200286ec:	20029090 	cmplti	zero,r4,2626
200286f0:	20029090 	cmplti	zero,r4,2626
200286f4:	20029090 	cmplti	zero,r4,2626
200286f8:	20029090 	cmplti	zero,r4,2626
200286fc:	20029090 	cmplti	zero,r4,2626
20028700:	20029090 	cmplti	zero,r4,2626
20028704:	20028fcc 	andi	zero,r4,2623
20028708:	20028fe8 	cmpgeui	zero,r4,2623
2002870c:	20029090 	cmplti	zero,r4,2626
20028710:	200288d0 	cmplti	zero,r4,2595
20028714:	20028ff8 	rdprs	zero,r4,2623
20028718:	20029090 	cmplti	zero,r4,2626
2002871c:	20028df0 	cmpltui	zero,r4,2615
20028720:	20028dfc 	xorhi	zero,r4,2615
20028724:	20028dfc 	xorhi	zero,r4,2615
20028728:	20028dfc 	xorhi	zero,r4,2615
2002872c:	20028dfc 	xorhi	zero,r4,2615
20028730:	20028dfc 	xorhi	zero,r4,2615
20028734:	20028dfc 	xorhi	zero,r4,2615
20028738:	20028dfc 	xorhi	zero,r4,2615
2002873c:	20028dfc 	xorhi	zero,r4,2615
20028740:	20028dfc 	xorhi	zero,r4,2615
20028744:	20029090 	cmplti	zero,r4,2626
20028748:	20029090 	cmplti	zero,r4,2626
2002874c:	20029090 	cmplti	zero,r4,2626
20028750:	20029090 	cmplti	zero,r4,2626
20028754:	20029090 	cmplti	zero,r4,2626
20028758:	20029090 	cmplti	zero,r4,2626
2002875c:	20029090 	cmplti	zero,r4,2626
20028760:	20029090 	cmplti	zero,r4,2626
20028764:	20029090 	cmplti	zero,r4,2626
20028768:	20029090 	cmplti	zero,r4,2626
2002876c:	20028e28 	cmpgeui	zero,r4,2616
20028770:	20029090 	cmplti	zero,r4,2626
20028774:	20029090 	cmplti	zero,r4,2626
20028778:	20029090 	cmplti	zero,r4,2626
2002877c:	20029090 	cmplti	zero,r4,2626
20028780:	20029090 	cmplti	zero,r4,2626
20028784:	20029090 	cmplti	zero,r4,2626
20028788:	20029090 	cmplti	zero,r4,2626
2002878c:	20029090 	cmplti	zero,r4,2626
20028790:	20029090 	cmplti	zero,r4,2626
20028794:	20029090 	cmplti	zero,r4,2626
20028798:	20028e60 	cmpeqi	zero,r4,2617
2002879c:	20029090 	cmplti	zero,r4,2626
200287a0:	20029090 	cmplti	zero,r4,2626
200287a4:	20029090 	cmplti	zero,r4,2626
200287a8:	20029090 	cmplti	zero,r4,2626
200287ac:	20029090 	cmplti	zero,r4,2626
200287b0:	20028eb8 	rdprs	zero,r4,2618
200287b4:	20029090 	cmplti	zero,r4,2626
200287b8:	20029090 	cmplti	zero,r4,2626
200287bc:	20028f28 	cmpgeui	zero,r4,2620
200287c0:	20029090 	cmplti	zero,r4,2626
200287c4:	20029090 	cmplti	zero,r4,2626
200287c8:	20029090 	cmplti	zero,r4,2626
200287cc:	20029090 	cmplti	zero,r4,2626
200287d0:	20029090 	cmplti	zero,r4,2626
200287d4:	20029090 	cmplti	zero,r4,2626
200287d8:	20029090 	cmplti	zero,r4,2626
200287dc:	20029090 	cmplti	zero,r4,2626
200287e0:	20029090 	cmplti	zero,r4,2626
200287e4:	20029090 	cmplti	zero,r4,2626
200287e8:	20028cd4 	ori	zero,r4,2611
200287ec:	20028d00 	call	220028d0 <__alt_data_end+0x1fc34d0>
200287f0:	20029090 	cmplti	zero,r4,2626
200287f4:	20029090 	cmplti	zero,r4,2626
200287f8:	20029090 	cmplti	zero,r4,2626
200287fc:	20029038 	rdprs	zero,r4,2624
20028800:	20028d00 	call	220028d0 <__alt_data_end+0x1fc34d0>
20028804:	20029090 	cmplti	zero,r4,2626
20028808:	20029090 	cmplti	zero,r4,2626
2002880c:	20028b94 	ori	zero,r4,2606
20028810:	20029090 	cmplti	zero,r4,2626
20028814:	20028ba4 	muli	zero,r4,2606
20028818:	20028be0 	cmpeqi	zero,r4,2607
2002881c:	200288dc 	xori	zero,r4,2595
20028820:	20028b88 	cmpgei	zero,r4,2606
20028824:	20029090 	cmplti	zero,r4,2626
20028828:	20028f64 	muli	zero,r4,2621
2002882c:	20029090 	cmplti	zero,r4,2626
20028830:	20028fbc 	xorhi	zero,r4,2622
20028834:	20029090 	cmplti	zero,r4,2626
20028838:	20029090 	cmplti	zero,r4,2626
2002883c:	20028c80 	call	220028c8 <__alt_data_end+0x1fc34c8>
20028840:	42000204 	addi	r8,r8,8
20028844:	da802317 	ldw	r10,140(sp)
20028848:	5455883a 	add	r10,r10,r17
2002884c:	da802315 	stw	r10,140(sp)
20028850:	003f8b06 	br	20028680 <__alt_data_end+0xfffe9280>
20028854:	d9002017 	ldw	r4,128(sp)
20028858:	a00b883a 	mov	r5,r20
2002885c:	00231d80 	call	200231d8 <__swsetup_r>
20028860:	1003b11e 	bne	r2,zero,20029728 <___vfiprintf_internal_r+0x11ec>
20028864:	a080030b 	ldhu	r2,12(r20)
20028868:	00c00284 	movi	r3,10
2002886c:	1080068c 	andi	r2,r2,26
20028870:	10ff541e 	bne	r2,r3,200285c4 <__alt_data_end+0xfffe91c4>
20028874:	a080038f 	ldh	r2,14(r20)
20028878:	103f5216 	blt	r2,zero,200285c4 <__alt_data_end+0xfffe91c4>
2002887c:	d9c02217 	ldw	r7,136(sp)
20028880:	d9002017 	ldw	r4,128(sp)
20028884:	e00d883a 	mov	r6,fp
20028888:	a00b883a 	mov	r5,r20
2002888c:	00299b40 	call	200299b4 <__sbprintf>
20028890:	dfc03617 	ldw	ra,216(sp)
20028894:	df003517 	ldw	fp,212(sp)
20028898:	ddc03417 	ldw	r23,208(sp)
2002889c:	dd803317 	ldw	r22,204(sp)
200288a0:	dd403217 	ldw	r21,200(sp)
200288a4:	dd003117 	ldw	r20,196(sp)
200288a8:	dcc03017 	ldw	r19,192(sp)
200288ac:	dc802f17 	ldw	r18,188(sp)
200288b0:	dc402e17 	ldw	r17,184(sp)
200288b4:	dc002d17 	ldw	r16,180(sp)
200288b8:	dec03704 	addi	sp,sp,220
200288bc:	f800283a 	ret
200288c0:	00251ac0 	call	200251ac <__sinit>
200288c4:	003f2f06 	br	20028584 <__alt_data_end+0xfffe9184>
200288c8:	0463c83a 	sub	r17,zero,r17
200288cc:	d8802215 	stw	r2,136(sp)
200288d0:	a5000114 	ori	r20,r20,4
200288d4:	80c00007 	ldb	r3,0(r16)
200288d8:	003f7706 	br	200286b8 <__alt_data_end+0xfffe92b8>
200288dc:	00800c04 	movi	r2,48
200288e0:	da802217 	ldw	r10,136(sp)
200288e4:	d8801d05 	stb	r2,116(sp)
200288e8:	00801e04 	movi	r2,120
200288ec:	d8801d45 	stb	r2,117(sp)
200288f0:	d8001d85 	stb	zero,118(sp)
200288f4:	50c00104 	addi	r3,r10,4
200288f8:	54800017 	ldw	r18,0(r10)
200288fc:	0027883a 	mov	r19,zero
20028900:	a0800094 	ori	r2,r20,2
20028904:	48030b16 	blt	r9,zero,20029534 <___vfiprintf_internal_r+0xff8>
20028908:	00bfdfc4 	movi	r2,-129
2002890c:	a096703a 	and	r11,r20,r2
20028910:	d8c02215 	stw	r3,136(sp)
20028914:	5d000094 	ori	r20,r11,2
20028918:	90032b1e 	bne	r18,zero,200295c8 <___vfiprintf_internal_r+0x108c>
2002891c:	008800f4 	movhi	r2,8195
20028920:	10bf9a04 	addi	r2,r2,-408
20028924:	d8802615 	stw	r2,152(sp)
20028928:	0039883a 	mov	fp,zero
2002892c:	48017b1e 	bne	r9,zero,20028f1c <___vfiprintf_internal_r+0x9e0>
20028930:	0013883a 	mov	r9,zero
20028934:	0027883a 	mov	r19,zero
20028938:	dd401a04 	addi	r21,sp,104
2002893c:	4825883a 	mov	r18,r9
20028940:	4cc0010e 	bge	r9,r19,20028948 <___vfiprintf_internal_r+0x40c>
20028944:	9825883a 	mov	r18,r19
20028948:	e7003fcc 	andi	fp,fp,255
2002894c:	e700201c 	xori	fp,fp,128
20028950:	e73fe004 	addi	fp,fp,-128
20028954:	e0000126 	beq	fp,zero,2002895c <___vfiprintf_internal_r+0x420>
20028958:	94800044 	addi	r18,r18,1
2002895c:	a380008c 	andi	r14,r20,2
20028960:	70000126 	beq	r14,zero,20028968 <___vfiprintf_internal_r+0x42c>
20028964:	94800084 	addi	r18,r18,2
20028968:	a700210c 	andi	fp,r20,132
2002896c:	e001df1e 	bne	fp,zero,200290ec <___vfiprintf_internal_r+0xbb0>
20028970:	8c87c83a 	sub	r3,r17,r18
20028974:	00c1dd0e 	bge	zero,r3,200290ec <___vfiprintf_internal_r+0xbb0>
20028978:	01c00404 	movi	r7,16
2002897c:	d8801c17 	ldw	r2,112(sp)
20028980:	38c3ad0e 	bge	r7,r3,20029838 <___vfiprintf_internal_r+0x12fc>
20028984:	028800f4 	movhi	r10,8195
20028988:	52bfff04 	addi	r10,r10,-4
2002898c:	dc002915 	stw	r16,164(sp)
20028990:	d9801b17 	ldw	r6,108(sp)
20028994:	da802415 	stw	r10,144(sp)
20028998:	03c001c4 	movi	r15,7
2002899c:	da402515 	stw	r9,148(sp)
200289a0:	db802815 	stw	r14,160(sp)
200289a4:	1821883a 	mov	r16,r3
200289a8:	00000506 	br	200289c0 <___vfiprintf_internal_r+0x484>
200289ac:	31400084 	addi	r5,r6,2
200289b0:	42000204 	addi	r8,r8,8
200289b4:	200d883a 	mov	r6,r4
200289b8:	843ffc04 	addi	r16,r16,-16
200289bc:	3c000d0e 	bge	r7,r16,200289f4 <___vfiprintf_internal_r+0x4b8>
200289c0:	10800404 	addi	r2,r2,16
200289c4:	31000044 	addi	r4,r6,1
200289c8:	45800015 	stw	r22,0(r8)
200289cc:	41c00115 	stw	r7,4(r8)
200289d0:	d8801c15 	stw	r2,112(sp)
200289d4:	d9001b15 	stw	r4,108(sp)
200289d8:	793ff40e 	bge	r15,r4,200289ac <__alt_data_end+0xfffe95ac>
200289dc:	1001b51e 	bne	r2,zero,200290b4 <___vfiprintf_internal_r+0xb78>
200289e0:	843ffc04 	addi	r16,r16,-16
200289e4:	000d883a 	mov	r6,zero
200289e8:	01400044 	movi	r5,1
200289ec:	d811883a 	mov	r8,sp
200289f0:	3c3ff316 	blt	r7,r16,200289c0 <__alt_data_end+0xfffe95c0>
200289f4:	8007883a 	mov	r3,r16
200289f8:	da402517 	ldw	r9,148(sp)
200289fc:	db802817 	ldw	r14,160(sp)
20028a00:	dc002917 	ldw	r16,164(sp)
20028a04:	da802417 	ldw	r10,144(sp)
20028a08:	1885883a 	add	r2,r3,r2
20028a0c:	40c00115 	stw	r3,4(r8)
20028a10:	42800015 	stw	r10,0(r8)
20028a14:	d8801c15 	stw	r2,112(sp)
20028a18:	d9401b15 	stw	r5,108(sp)
20028a1c:	00c001c4 	movi	r3,7
20028a20:	19426016 	blt	r3,r5,200293a4 <___vfiprintf_internal_r+0xe68>
20028a24:	d8c01d87 	ldb	r3,118(sp)
20028a28:	42000204 	addi	r8,r8,8
20028a2c:	29000044 	addi	r4,r5,1
20028a30:	1801b31e 	bne	r3,zero,20029100 <___vfiprintf_internal_r+0xbc4>
20028a34:	7001c026 	beq	r14,zero,20029138 <___vfiprintf_internal_r+0xbfc>
20028a38:	d8c01d04 	addi	r3,sp,116
20028a3c:	10800084 	addi	r2,r2,2
20028a40:	40c00015 	stw	r3,0(r8)
20028a44:	00c00084 	movi	r3,2
20028a48:	40c00115 	stw	r3,4(r8)
20028a4c:	d8801c15 	stw	r2,112(sp)
20028a50:	d9001b15 	stw	r4,108(sp)
20028a54:	00c001c4 	movi	r3,7
20028a58:	1902650e 	bge	r3,r4,200293f0 <___vfiprintf_internal_r+0xeb4>
20028a5c:	10029a1e 	bne	r2,zero,200294c8 <___vfiprintf_internal_r+0xf8c>
20028a60:	00c02004 	movi	r3,128
20028a64:	01000044 	movi	r4,1
20028a68:	000b883a 	mov	r5,zero
20028a6c:	d811883a 	mov	r8,sp
20028a70:	e0c1b31e 	bne	fp,r3,20029140 <___vfiprintf_internal_r+0xc04>
20028a74:	8cb9c83a 	sub	fp,r17,r18
20028a78:	0701b10e 	bge	zero,fp,20029140 <___vfiprintf_internal_r+0xc04>
20028a7c:	01c00404 	movi	r7,16
20028a80:	3f03890e 	bge	r7,fp,200298a8 <___vfiprintf_internal_r+0x136c>
20028a84:	00c800f4 	movhi	r3,8195
20028a88:	18fffb04 	addi	r3,r3,-20
20028a8c:	d8c02415 	stw	r3,144(sp)
20028a90:	8007883a 	mov	r3,r16
20028a94:	034001c4 	movi	r13,7
20028a98:	e021883a 	mov	r16,fp
20028a9c:	da402515 	stw	r9,148(sp)
20028aa0:	1839883a 	mov	fp,r3
20028aa4:	00000506 	br	20028abc <___vfiprintf_internal_r+0x580>
20028aa8:	29800084 	addi	r6,r5,2
20028aac:	42000204 	addi	r8,r8,8
20028ab0:	180b883a 	mov	r5,r3
20028ab4:	843ffc04 	addi	r16,r16,-16
20028ab8:	3c000d0e 	bge	r7,r16,20028af0 <___vfiprintf_internal_r+0x5b4>
20028abc:	10800404 	addi	r2,r2,16
20028ac0:	28c00044 	addi	r3,r5,1
20028ac4:	45c00015 	stw	r23,0(r8)
20028ac8:	41c00115 	stw	r7,4(r8)
20028acc:	d8801c15 	stw	r2,112(sp)
20028ad0:	d8c01b15 	stw	r3,108(sp)
20028ad4:	68fff40e 	bge	r13,r3,20028aa8 <__alt_data_end+0xfffe96a8>
20028ad8:	1002241e 	bne	r2,zero,2002936c <___vfiprintf_internal_r+0xe30>
20028adc:	843ffc04 	addi	r16,r16,-16
20028ae0:	01800044 	movi	r6,1
20028ae4:	000b883a 	mov	r5,zero
20028ae8:	d811883a 	mov	r8,sp
20028aec:	3c3ff316 	blt	r7,r16,20028abc <__alt_data_end+0xfffe96bc>
20028af0:	da402517 	ldw	r9,148(sp)
20028af4:	e007883a 	mov	r3,fp
20028af8:	8039883a 	mov	fp,r16
20028afc:	1821883a 	mov	r16,r3
20028b00:	d8c02417 	ldw	r3,144(sp)
20028b04:	1705883a 	add	r2,r2,fp
20028b08:	47000115 	stw	fp,4(r8)
20028b0c:	40c00015 	stw	r3,0(r8)
20028b10:	d8801c15 	stw	r2,112(sp)
20028b14:	d9801b15 	stw	r6,108(sp)
20028b18:	00c001c4 	movi	r3,7
20028b1c:	19827616 	blt	r3,r6,200294f8 <___vfiprintf_internal_r+0xfbc>
20028b20:	4cf9c83a 	sub	fp,r9,r19
20028b24:	42000204 	addi	r8,r8,8
20028b28:	31000044 	addi	r4,r6,1
20028b2c:	300b883a 	mov	r5,r6
20028b30:	07018516 	blt	zero,fp,20029148 <___vfiprintf_internal_r+0xc0c>
20028b34:	9885883a 	add	r2,r19,r2
20028b38:	45400015 	stw	r21,0(r8)
20028b3c:	44c00115 	stw	r19,4(r8)
20028b40:	d8801c15 	stw	r2,112(sp)
20028b44:	d9001b15 	stw	r4,108(sp)
20028b48:	00c001c4 	movi	r3,7
20028b4c:	1901dd0e 	bge	r3,r4,200292c4 <___vfiprintf_internal_r+0xd88>
20028b50:	1002401e 	bne	r2,zero,20029454 <___vfiprintf_internal_r+0xf18>
20028b54:	d8001b15 	stw	zero,108(sp)
20028b58:	a2c0010c 	andi	r11,r20,4
20028b5c:	58000226 	beq	r11,zero,20028b68 <___vfiprintf_internal_r+0x62c>
20028b60:	8ca7c83a 	sub	r19,r17,r18
20028b64:	04c2f216 	blt	zero,r19,20029730 <___vfiprintf_internal_r+0x11f4>
20028b68:	8c80010e 	bge	r17,r18,20028b70 <___vfiprintf_internal_r+0x634>
20028b6c:	9023883a 	mov	r17,r18
20028b70:	da802317 	ldw	r10,140(sp)
20028b74:	5455883a 	add	r10,r10,r17
20028b78:	da802315 	stw	r10,140(sp)
20028b7c:	d8001b15 	stw	zero,108(sp)
20028b80:	d811883a 	mov	r8,sp
20028b84:	003ea206 	br	20028610 <__alt_data_end+0xfffe9210>
20028b88:	a5000814 	ori	r20,r20,32
20028b8c:	80c00007 	ldb	r3,0(r16)
20028b90:	003ec906 	br	200286b8 <__alt_data_end+0xfffe92b8>
20028b94:	80c00007 	ldb	r3,0(r16)
20028b98:	1b030926 	beq	r3,r12,200297c0 <___vfiprintf_internal_r+0x1284>
20028b9c:	a5000414 	ori	r20,r20,16
20028ba0:	003ec506 	br	200286b8 <__alt_data_end+0xfffe92b8>
20028ba4:	21003fcc 	andi	r4,r4,255
20028ba8:	20035e1e 	bne	r4,zero,20029924 <___vfiprintf_internal_r+0x13e8>
20028bac:	a080080c 	andi	r2,r20,32
20028bb0:	1002a526 	beq	r2,zero,20029648 <___vfiprintf_internal_r+0x110c>
20028bb4:	da802217 	ldw	r10,136(sp)
20028bb8:	50800017 	ldw	r2,0(r10)
20028bbc:	da802317 	ldw	r10,140(sp)
20028bc0:	5007d7fa 	srai	r3,r10,31
20028bc4:	da802217 	ldw	r10,136(sp)
20028bc8:	10c00115 	stw	r3,4(r2)
20028bcc:	52800104 	addi	r10,r10,4
20028bd0:	da802215 	stw	r10,136(sp)
20028bd4:	da802317 	ldw	r10,140(sp)
20028bd8:	12800015 	stw	r10,0(r2)
20028bdc:	003e8c06 	br	20028610 <__alt_data_end+0xfffe9210>
20028be0:	21003fcc 	andi	r4,r4,255
20028be4:	2003511e 	bne	r4,zero,2002992c <___vfiprintf_internal_r+0x13f0>
20028be8:	a080080c 	andi	r2,r20,32
20028bec:	1000a126 	beq	r2,zero,20028e74 <___vfiprintf_internal_r+0x938>
20028bf0:	da802217 	ldw	r10,136(sp)
20028bf4:	d8001d85 	stb	zero,118(sp)
20028bf8:	50800204 	addi	r2,r10,8
20028bfc:	54800017 	ldw	r18,0(r10)
20028c00:	54c00117 	ldw	r19,4(r10)
20028c04:	4802b416 	blt	r9,zero,200296d8 <___vfiprintf_internal_r+0x119c>
20028c08:	013fdfc4 	movi	r4,-129
20028c0c:	94c6b03a 	or	r3,r18,r19
20028c10:	d8802215 	stw	r2,136(sp)
20028c14:	a128703a 	and	r20,r20,r4
20028c18:	1800a226 	beq	r3,zero,20028ea4 <___vfiprintf_internal_r+0x968>
20028c1c:	0039883a 	mov	fp,zero
20028c20:	dd401a04 	addi	r21,sp,104
20028c24:	9006d0fa 	srli	r3,r18,3
20028c28:	9808977a 	slli	r4,r19,29
20028c2c:	9826d0fa 	srli	r19,r19,3
20028c30:	948001cc 	andi	r18,r18,7
20028c34:	90800c04 	addi	r2,r18,48
20028c38:	ad7fffc4 	addi	r21,r21,-1
20028c3c:	20e4b03a 	or	r18,r4,r3
20028c40:	a8800005 	stb	r2,0(r21)
20028c44:	94c6b03a 	or	r3,r18,r19
20028c48:	183ff61e 	bne	r3,zero,20028c24 <__alt_data_end+0xfffe9824>
20028c4c:	a0c0004c 	andi	r3,r20,1
20028c50:	18005926 	beq	r3,zero,20028db8 <___vfiprintf_internal_r+0x87c>
20028c54:	10803fcc 	andi	r2,r2,255
20028c58:	1080201c 	xori	r2,r2,128
20028c5c:	10bfe004 	addi	r2,r2,-128
20028c60:	00c00c04 	movi	r3,48
20028c64:	10c05426 	beq	r2,r3,20028db8 <___vfiprintf_internal_r+0x87c>
20028c68:	da801e17 	ldw	r10,120(sp)
20028c6c:	a8bfffc4 	addi	r2,r21,-1
20028c70:	a8ffffc5 	stb	r3,-1(r21)
20028c74:	50a7c83a 	sub	r19,r10,r2
20028c78:	102b883a 	mov	r21,r2
20028c7c:	003f2f06 	br	2002893c <__alt_data_end+0xfffe953c>
20028c80:	21003fcc 	andi	r4,r4,255
20028c84:	2003421e 	bne	r4,zero,20029990 <___vfiprintf_internal_r+0x1454>
20028c88:	008800f4 	movhi	r2,8195
20028c8c:	10bf9a04 	addi	r2,r2,-408
20028c90:	d8802615 	stw	r2,152(sp)
20028c94:	a080080c 	andi	r2,r20,32
20028c98:	1000aa26 	beq	r2,zero,20028f44 <___vfiprintf_internal_r+0xa08>
20028c9c:	da802217 	ldw	r10,136(sp)
20028ca0:	54800017 	ldw	r18,0(r10)
20028ca4:	54c00117 	ldw	r19,4(r10)
20028ca8:	52800204 	addi	r10,r10,8
20028cac:	da802215 	stw	r10,136(sp)
20028cb0:	a080004c 	andi	r2,r20,1
20028cb4:	1001d226 	beq	r2,zero,20029400 <___vfiprintf_internal_r+0xec4>
20028cb8:	94c4b03a 	or	r2,r18,r19
20028cbc:	1002351e 	bne	r2,zero,20029594 <___vfiprintf_internal_r+0x1058>
20028cc0:	d8001d85 	stb	zero,118(sp)
20028cc4:	48022216 	blt	r9,zero,20029550 <___vfiprintf_internal_r+0x1014>
20028cc8:	00bfdfc4 	movi	r2,-129
20028ccc:	a0a8703a 	and	r20,r20,r2
20028cd0:	003f1506 	br	20028928 <__alt_data_end+0xfffe9528>
20028cd4:	da802217 	ldw	r10,136(sp)
20028cd8:	04800044 	movi	r18,1
20028cdc:	d8001d85 	stb	zero,118(sp)
20028ce0:	50800017 	ldw	r2,0(r10)
20028ce4:	52800104 	addi	r10,r10,4
20028ce8:	da802215 	stw	r10,136(sp)
20028cec:	d8801005 	stb	r2,64(sp)
20028cf0:	9027883a 	mov	r19,r18
20028cf4:	dd401004 	addi	r21,sp,64
20028cf8:	0013883a 	mov	r9,zero
20028cfc:	003f1706 	br	2002895c <__alt_data_end+0xfffe955c>
20028d00:	21003fcc 	andi	r4,r4,255
20028d04:	2003201e 	bne	r4,zero,20029988 <___vfiprintf_internal_r+0x144c>
20028d08:	a080080c 	andi	r2,r20,32
20028d0c:	10004b26 	beq	r2,zero,20028e3c <___vfiprintf_internal_r+0x900>
20028d10:	da802217 	ldw	r10,136(sp)
20028d14:	50800117 	ldw	r2,4(r10)
20028d18:	54800017 	ldw	r18,0(r10)
20028d1c:	52800204 	addi	r10,r10,8
20028d20:	da802215 	stw	r10,136(sp)
20028d24:	1027883a 	mov	r19,r2
20028d28:	10022c16 	blt	r2,zero,200295dc <___vfiprintf_internal_r+0x10a0>
20028d2c:	df001d83 	ldbu	fp,118(sp)
20028d30:	48007216 	blt	r9,zero,20028efc <___vfiprintf_internal_r+0x9c0>
20028d34:	00ffdfc4 	movi	r3,-129
20028d38:	94c4b03a 	or	r2,r18,r19
20028d3c:	a0e8703a 	and	r20,r20,r3
20028d40:	1000cc26 	beq	r2,zero,20029074 <___vfiprintf_internal_r+0xb38>
20028d44:	98021026 	beq	r19,zero,20029588 <___vfiprintf_internal_r+0x104c>
20028d48:	dc402415 	stw	r17,144(sp)
20028d4c:	dc002515 	stw	r16,148(sp)
20028d50:	9823883a 	mov	r17,r19
20028d54:	9021883a 	mov	r16,r18
20028d58:	dd401a04 	addi	r21,sp,104
20028d5c:	4825883a 	mov	r18,r9
20028d60:	4027883a 	mov	r19,r8
20028d64:	8009883a 	mov	r4,r16
20028d68:	880b883a 	mov	r5,r17
20028d6c:	01800284 	movi	r6,10
20028d70:	000f883a 	mov	r7,zero
20028d74:	002a97c0 	call	2002a97c <__umoddi3>
20028d78:	10800c04 	addi	r2,r2,48
20028d7c:	ad7fffc4 	addi	r21,r21,-1
20028d80:	8009883a 	mov	r4,r16
20028d84:	880b883a 	mov	r5,r17
20028d88:	a8800005 	stb	r2,0(r21)
20028d8c:	01800284 	movi	r6,10
20028d90:	000f883a 	mov	r7,zero
20028d94:	002a4040 	call	2002a404 <__udivdi3>
20028d98:	1021883a 	mov	r16,r2
20028d9c:	10c4b03a 	or	r2,r2,r3
20028da0:	1823883a 	mov	r17,r3
20028da4:	103fef1e 	bne	r2,zero,20028d64 <__alt_data_end+0xfffe9964>
20028da8:	dc402417 	ldw	r17,144(sp)
20028dac:	dc002517 	ldw	r16,148(sp)
20028db0:	9013883a 	mov	r9,r18
20028db4:	9811883a 	mov	r8,r19
20028db8:	da801e17 	ldw	r10,120(sp)
20028dbc:	5567c83a 	sub	r19,r10,r21
20028dc0:	003ede06 	br	2002893c <__alt_data_end+0xfffe953c>
20028dc4:	38803fcc 	andi	r2,r7,255
20028dc8:	1080201c 	xori	r2,r2,128
20028dcc:	10bfe004 	addi	r2,r2,-128
20028dd0:	1002371e 	bne	r2,zero,200296b0 <___vfiprintf_internal_r+0x1174>
20028dd4:	01000044 	movi	r4,1
20028dd8:	01c00804 	movi	r7,32
20028ddc:	80c00007 	ldb	r3,0(r16)
20028de0:	003e3506 	br	200286b8 <__alt_data_end+0xfffe92b8>
20028de4:	a5000054 	ori	r20,r20,1
20028de8:	80c00007 	ldb	r3,0(r16)
20028dec:	003e3206 	br	200286b8 <__alt_data_end+0xfffe92b8>
20028df0:	a5002014 	ori	r20,r20,128
20028df4:	80c00007 	ldb	r3,0(r16)
20028df8:	003e2f06 	br	200286b8 <__alt_data_end+0xfffe92b8>
20028dfc:	8015883a 	mov	r10,r16
20028e00:	0023883a 	mov	r17,zero
20028e04:	18bff404 	addi	r2,r3,-48
20028e08:	50c00007 	ldb	r3,0(r10)
20028e0c:	8c4002a4 	muli	r17,r17,10
20028e10:	84000044 	addi	r16,r16,1
20028e14:	8015883a 	mov	r10,r16
20028e18:	1463883a 	add	r17,r2,r17
20028e1c:	18bff404 	addi	r2,r3,-48
20028e20:	30bff92e 	bgeu	r6,r2,20028e08 <__alt_data_end+0xfffe9a08>
20028e24:	003e2506 	br	200286bc <__alt_data_end+0xfffe92bc>
20028e28:	21003fcc 	andi	r4,r4,255
20028e2c:	2002d41e 	bne	r4,zero,20029980 <___vfiprintf_internal_r+0x1444>
20028e30:	a5000414 	ori	r20,r20,16
20028e34:	a080080c 	andi	r2,r20,32
20028e38:	103fb51e 	bne	r2,zero,20028d10 <__alt_data_end+0xfffe9910>
20028e3c:	a080040c 	andi	r2,r20,16
20028e40:	1001f826 	beq	r2,zero,20029624 <___vfiprintf_internal_r+0x10e8>
20028e44:	da802217 	ldw	r10,136(sp)
20028e48:	54800017 	ldw	r18,0(r10)
20028e4c:	52800104 	addi	r10,r10,4
20028e50:	da802215 	stw	r10,136(sp)
20028e54:	9027d7fa 	srai	r19,r18,31
20028e58:	9805883a 	mov	r2,r19
20028e5c:	003fb206 	br	20028d28 <__alt_data_end+0xfffe9928>
20028e60:	21003fcc 	andi	r4,r4,255
20028e64:	2002c41e 	bne	r4,zero,20029978 <___vfiprintf_internal_r+0x143c>
20028e68:	a5000414 	ori	r20,r20,16
20028e6c:	a080080c 	andi	r2,r20,32
20028e70:	103f5f1e 	bne	r2,zero,20028bf0 <__alt_data_end+0xfffe97f0>
20028e74:	a080040c 	andi	r2,r20,16
20028e78:	10020f26 	beq	r2,zero,200296b8 <___vfiprintf_internal_r+0x117c>
20028e7c:	da802217 	ldw	r10,136(sp)
20028e80:	d8001d85 	stb	zero,118(sp)
20028e84:	0027883a 	mov	r19,zero
20028e88:	50800104 	addi	r2,r10,4
20028e8c:	54800017 	ldw	r18,0(r10)
20028e90:	48021116 	blt	r9,zero,200296d8 <___vfiprintf_internal_r+0x119c>
20028e94:	00ffdfc4 	movi	r3,-129
20028e98:	d8802215 	stw	r2,136(sp)
20028e9c:	a0e8703a 	and	r20,r20,r3
20028ea0:	903f5e1e 	bne	r18,zero,20028c1c <__alt_data_end+0xfffe981c>
20028ea4:	0039883a 	mov	fp,zero
20028ea8:	4802a626 	beq	r9,zero,20029944 <___vfiprintf_internal_r+0x1408>
20028eac:	0025883a 	mov	r18,zero
20028eb0:	0027883a 	mov	r19,zero
20028eb4:	003f5a06 	br	20028c20 <__alt_data_end+0xfffe9820>
20028eb8:	21003fcc 	andi	r4,r4,255
20028ebc:	20029f1e 	bne	r4,zero,2002993c <___vfiprintf_internal_r+0x1400>
20028ec0:	a5000414 	ori	r20,r20,16
20028ec4:	a080080c 	andi	r2,r20,32
20028ec8:	10005e1e 	bne	r2,zero,20029044 <___vfiprintf_internal_r+0xb08>
20028ecc:	a080040c 	andi	r2,r20,16
20028ed0:	1001a21e 	bne	r2,zero,2002955c <___vfiprintf_internal_r+0x1020>
20028ed4:	a080100c 	andi	r2,r20,64
20028ed8:	d8001d85 	stb	zero,118(sp)
20028edc:	da802217 	ldw	r10,136(sp)
20028ee0:	1002231e 	bne	r2,zero,20029770 <___vfiprintf_internal_r+0x1234>
20028ee4:	50800104 	addi	r2,r10,4
20028ee8:	54800017 	ldw	r18,0(r10)
20028eec:	0027883a 	mov	r19,zero
20028ef0:	4801a00e 	bge	r9,zero,20029574 <___vfiprintf_internal_r+0x1038>
20028ef4:	d8802215 	stw	r2,136(sp)
20028ef8:	0039883a 	mov	fp,zero
20028efc:	94c4b03a 	or	r2,r18,r19
20028f00:	103f901e 	bne	r2,zero,20028d44 <__alt_data_end+0xfffe9944>
20028f04:	00800044 	movi	r2,1
20028f08:	10803fcc 	andi	r2,r2,255
20028f0c:	00c00044 	movi	r3,1
20028f10:	10c05926 	beq	r2,r3,20029078 <___vfiprintf_internal_r+0xb3c>
20028f14:	00c00084 	movi	r3,2
20028f18:	10ffe41e 	bne	r2,r3,20028eac <__alt_data_end+0xfffe9aac>
20028f1c:	0025883a 	mov	r18,zero
20028f20:	0027883a 	mov	r19,zero
20028f24:	00013d06 	br	2002941c <___vfiprintf_internal_r+0xee0>
20028f28:	21003fcc 	andi	r4,r4,255
20028f2c:	2002811e 	bne	r4,zero,20029934 <___vfiprintf_internal_r+0x13f8>
20028f30:	008800f4 	movhi	r2,8195
20028f34:	10bf9504 	addi	r2,r2,-428
20028f38:	d8802615 	stw	r2,152(sp)
20028f3c:	a080080c 	andi	r2,r20,32
20028f40:	103f561e 	bne	r2,zero,20028c9c <__alt_data_end+0xfffe989c>
20028f44:	a080040c 	andi	r2,r20,16
20028f48:	1001d126 	beq	r2,zero,20029690 <___vfiprintf_internal_r+0x1154>
20028f4c:	da802217 	ldw	r10,136(sp)
20028f50:	0027883a 	mov	r19,zero
20028f54:	54800017 	ldw	r18,0(r10)
20028f58:	52800104 	addi	r10,r10,4
20028f5c:	da802215 	stw	r10,136(sp)
20028f60:	003f5306 	br	20028cb0 <__alt_data_end+0xfffe98b0>
20028f64:	da802217 	ldw	r10,136(sp)
20028f68:	d8001d85 	stb	zero,118(sp)
20028f6c:	55400017 	ldw	r21,0(r10)
20028f70:	50c00104 	addi	r3,r10,4
20028f74:	a8024226 	beq	r21,zero,20029880 <___vfiprintf_internal_r+0x1344>
20028f78:	48021816 	blt	r9,zero,200297dc <___vfiprintf_internal_r+0x12a0>
20028f7c:	480d883a 	mov	r6,r9
20028f80:	000b883a 	mov	r5,zero
20028f84:	a809883a 	mov	r4,r21
20028f88:	d8c02a15 	stw	r3,168(sp)
20028f8c:	da002b15 	stw	r8,172(sp)
20028f90:	da402c15 	stw	r9,176(sp)
20028f94:	00267180 	call	20026718 <memchr>
20028f98:	d8c02a17 	ldw	r3,168(sp)
20028f9c:	da002b17 	ldw	r8,172(sp)
20028fa0:	da402c17 	ldw	r9,176(sp)
20028fa4:	10024826 	beq	r2,zero,200298c8 <___vfiprintf_internal_r+0x138c>
20028fa8:	1567c83a 	sub	r19,r2,r21
20028fac:	df001d83 	ldbu	fp,118(sp)
20028fb0:	d8c02215 	stw	r3,136(sp)
20028fb4:	0013883a 	mov	r9,zero
20028fb8:	003e6006 	br	2002893c <__alt_data_end+0xfffe953c>
20028fbc:	21003fcc 	andi	r4,r4,255
20028fc0:	203fc026 	beq	r4,zero,20028ec4 <__alt_data_end+0xfffe9ac4>
20028fc4:	d9c01d85 	stb	r7,118(sp)
20028fc8:	003fbe06 	br	20028ec4 <__alt_data_end+0xfffe9ac4>
20028fcc:	da802217 	ldw	r10,136(sp)
20028fd0:	54400017 	ldw	r17,0(r10)
20028fd4:	50800104 	addi	r2,r10,4
20028fd8:	883e3b16 	blt	r17,zero,200288c8 <__alt_data_end+0xfffe94c8>
20028fdc:	d8802215 	stw	r2,136(sp)
20028fe0:	80c00007 	ldb	r3,0(r16)
20028fe4:	003db406 	br	200286b8 <__alt_data_end+0xfffe92b8>
20028fe8:	01000044 	movi	r4,1
20028fec:	01c00ac4 	movi	r7,43
20028ff0:	80c00007 	ldb	r3,0(r16)
20028ff4:	003db006 	br	200286b8 <__alt_data_end+0xfffe92b8>
20028ff8:	80c00007 	ldb	r3,0(r16)
20028ffc:	82800044 	addi	r10,r16,1
20029000:	1b423c26 	beq	r3,r13,200298f4 <___vfiprintf_internal_r+0x13b8>
20029004:	18bff404 	addi	r2,r3,-48
20029008:	0013883a 	mov	r9,zero
2002900c:	30822b36 	bltu	r6,r2,200298bc <___vfiprintf_internal_r+0x1380>
20029010:	50c00007 	ldb	r3,0(r10)
20029014:	4a4002a4 	muli	r9,r9,10
20029018:	54000044 	addi	r16,r10,1
2002901c:	8015883a 	mov	r10,r16
20029020:	4893883a 	add	r9,r9,r2
20029024:	18bff404 	addi	r2,r3,-48
20029028:	30bff92e 	bgeu	r6,r2,20029010 <__alt_data_end+0xfffe9c10>
2002902c:	483da30e 	bge	r9,zero,200286bc <__alt_data_end+0xfffe92bc>
20029030:	027fffc4 	movi	r9,-1
20029034:	003da106 	br	200286bc <__alt_data_end+0xfffe92bc>
20029038:	a5001014 	ori	r20,r20,64
2002903c:	80c00007 	ldb	r3,0(r16)
20029040:	003d9d06 	br	200286b8 <__alt_data_end+0xfffe92b8>
20029044:	da802217 	ldw	r10,136(sp)
20029048:	d8001d85 	stb	zero,118(sp)
2002904c:	50c00204 	addi	r3,r10,8
20029050:	54800017 	ldw	r18,0(r10)
20029054:	54c00117 	ldw	r19,4(r10)
20029058:	4801ca16 	blt	r9,zero,20029784 <___vfiprintf_internal_r+0x1248>
2002905c:	013fdfc4 	movi	r4,-129
20029060:	94c4b03a 	or	r2,r18,r19
20029064:	d8c02215 	stw	r3,136(sp)
20029068:	a128703a 	and	r20,r20,r4
2002906c:	0039883a 	mov	fp,zero
20029070:	103f341e 	bne	r2,zero,20028d44 <__alt_data_end+0xfffe9944>
20029074:	483e2e26 	beq	r9,zero,20028930 <__alt_data_end+0xfffe9530>
20029078:	0025883a 	mov	r18,zero
2002907c:	94800c04 	addi	r18,r18,48
20029080:	dc8019c5 	stb	r18,103(sp)
20029084:	dcc02717 	ldw	r19,156(sp)
20029088:	dd4019c4 	addi	r21,sp,103
2002908c:	003e2b06 	br	2002893c <__alt_data_end+0xfffe953c>
20029090:	21003fcc 	andi	r4,r4,255
20029094:	2002361e 	bne	r4,zero,20029970 <___vfiprintf_internal_r+0x1434>
20029098:	1801c126 	beq	r3,zero,200297a0 <___vfiprintf_internal_r+0x1264>
2002909c:	04800044 	movi	r18,1
200290a0:	d8c01005 	stb	r3,64(sp)
200290a4:	d8001d85 	stb	zero,118(sp)
200290a8:	9027883a 	mov	r19,r18
200290ac:	dd401004 	addi	r21,sp,64
200290b0:	003f1106 	br	20028cf8 <__alt_data_end+0xfffe98f8>
200290b4:	d9402117 	ldw	r5,132(sp)
200290b8:	d9002017 	ldw	r4,128(sp)
200290bc:	d9801a04 	addi	r6,sp,104
200290c0:	d9c02b15 	stw	r7,172(sp)
200290c4:	dbc02a15 	stw	r15,168(sp)
200290c8:	00284280 	call	20028428 <__sprint_r.part.0>
200290cc:	d9c02b17 	ldw	r7,172(sp)
200290d0:	dbc02a17 	ldw	r15,168(sp)
200290d4:	10006d1e 	bne	r2,zero,2002928c <___vfiprintf_internal_r+0xd50>
200290d8:	d9801b17 	ldw	r6,108(sp)
200290dc:	d8801c17 	ldw	r2,112(sp)
200290e0:	d811883a 	mov	r8,sp
200290e4:	31400044 	addi	r5,r6,1
200290e8:	003e3306 	br	200289b8 <__alt_data_end+0xfffe95b8>
200290ec:	d9401b17 	ldw	r5,108(sp)
200290f0:	d8801c17 	ldw	r2,112(sp)
200290f4:	29000044 	addi	r4,r5,1
200290f8:	d8c01d87 	ldb	r3,118(sp)
200290fc:	183e4d26 	beq	r3,zero,20028a34 <__alt_data_end+0xfffe9634>
20029100:	00c00044 	movi	r3,1
20029104:	d9401d84 	addi	r5,sp,118
20029108:	10c5883a 	add	r2,r2,r3
2002910c:	41400015 	stw	r5,0(r8)
20029110:	40c00115 	stw	r3,4(r8)
20029114:	d8801c15 	stw	r2,112(sp)
20029118:	d9001b15 	stw	r4,108(sp)
2002911c:	014001c4 	movi	r5,7
20029120:	2900a90e 	bge	r5,r4,200293c8 <___vfiprintf_internal_r+0xe8c>
20029124:	1000da1e 	bne	r2,zero,20029490 <___vfiprintf_internal_r+0xf54>
20029128:	7000ab1e 	bne	r14,zero,200293d8 <___vfiprintf_internal_r+0xe9c>
2002912c:	000b883a 	mov	r5,zero
20029130:	1809883a 	mov	r4,r3
20029134:	d811883a 	mov	r8,sp
20029138:	00c02004 	movi	r3,128
2002913c:	e0fe4d26 	beq	fp,r3,20028a74 <__alt_data_end+0xfffe9674>
20029140:	4cf9c83a 	sub	fp,r9,r19
20029144:	073e7b0e 	bge	zero,fp,20028b34 <__alt_data_end+0xfffe9734>
20029148:	01c00404 	movi	r7,16
2002914c:	3f01900e 	bge	r7,fp,20029790 <___vfiprintf_internal_r+0x1254>
20029150:	00c800f4 	movhi	r3,8195
20029154:	18fffb04 	addi	r3,r3,-20
20029158:	d8c02415 	stw	r3,144(sp)
2002915c:	034001c4 	movi	r13,7
20029160:	00000506 	br	20029178 <___vfiprintf_internal_r+0xc3c>
20029164:	29000084 	addi	r4,r5,2
20029168:	42000204 	addi	r8,r8,8
2002916c:	180b883a 	mov	r5,r3
20029170:	e73ffc04 	addi	fp,fp,-16
20029174:	3f000d0e 	bge	r7,fp,200291ac <___vfiprintf_internal_r+0xc70>
20029178:	10800404 	addi	r2,r2,16
2002917c:	28c00044 	addi	r3,r5,1
20029180:	45c00015 	stw	r23,0(r8)
20029184:	41c00115 	stw	r7,4(r8)
20029188:	d8801c15 	stw	r2,112(sp)
2002918c:	d8c01b15 	stw	r3,108(sp)
20029190:	68fff40e 	bge	r13,r3,20029164 <__alt_data_end+0xfffe9d64>
20029194:	1000101e 	bne	r2,zero,200291d8 <___vfiprintf_internal_r+0xc9c>
20029198:	e73ffc04 	addi	fp,fp,-16
2002919c:	01000044 	movi	r4,1
200291a0:	000b883a 	mov	r5,zero
200291a4:	d811883a 	mov	r8,sp
200291a8:	3f3ff316 	blt	r7,fp,20029178 <__alt_data_end+0xfffe9d78>
200291ac:	da802417 	ldw	r10,144(sp)
200291b0:	1705883a 	add	r2,r2,fp
200291b4:	47000115 	stw	fp,4(r8)
200291b8:	42800015 	stw	r10,0(r8)
200291bc:	d8801c15 	stw	r2,112(sp)
200291c0:	d9001b15 	stw	r4,108(sp)
200291c4:	00c001c4 	movi	r3,7
200291c8:	19003616 	blt	r3,r4,200292a4 <___vfiprintf_internal_r+0xd68>
200291cc:	42000204 	addi	r8,r8,8
200291d0:	21000044 	addi	r4,r4,1
200291d4:	003e5706 	br	20028b34 <__alt_data_end+0xfffe9734>
200291d8:	d9402117 	ldw	r5,132(sp)
200291dc:	d9002017 	ldw	r4,128(sp)
200291e0:	d9801a04 	addi	r6,sp,104
200291e4:	d9c02b15 	stw	r7,172(sp)
200291e8:	db402a15 	stw	r13,168(sp)
200291ec:	00284280 	call	20028428 <__sprint_r.part.0>
200291f0:	d9c02b17 	ldw	r7,172(sp)
200291f4:	db402a17 	ldw	r13,168(sp)
200291f8:	1000241e 	bne	r2,zero,2002928c <___vfiprintf_internal_r+0xd50>
200291fc:	d9401b17 	ldw	r5,108(sp)
20029200:	d8801c17 	ldw	r2,112(sp)
20029204:	d811883a 	mov	r8,sp
20029208:	29000044 	addi	r4,r5,1
2002920c:	003fd806 	br	20029170 <__alt_data_end+0xfffe9d70>
20029210:	d9401b17 	ldw	r5,108(sp)
20029214:	00c800f4 	movhi	r3,8195
20029218:	18ffff04 	addi	r3,r3,-4
2002921c:	d8c02415 	stw	r3,144(sp)
20029220:	29400044 	addi	r5,r5,1
20029224:	d8c02417 	ldw	r3,144(sp)
20029228:	14c5883a 	add	r2,r2,r19
2002922c:	44c00115 	stw	r19,4(r8)
20029230:	40c00015 	stw	r3,0(r8)
20029234:	d8801c15 	stw	r2,112(sp)
20029238:	d9401b15 	stw	r5,108(sp)
2002923c:	00c001c4 	movi	r3,7
20029240:	1940070e 	bge	r3,r5,20029260 <___vfiprintf_internal_r+0xd24>
20029244:	103e4826 	beq	r2,zero,20028b68 <__alt_data_end+0xfffe9768>
20029248:	d9402117 	ldw	r5,132(sp)
2002924c:	d9002017 	ldw	r4,128(sp)
20029250:	d9801a04 	addi	r6,sp,104
20029254:	00284280 	call	20028428 <__sprint_r.part.0>
20029258:	10000c1e 	bne	r2,zero,2002928c <___vfiprintf_internal_r+0xd50>
2002925c:	d8801c17 	ldw	r2,112(sp)
20029260:	8c80010e 	bge	r17,r18,20029268 <___vfiprintf_internal_r+0xd2c>
20029264:	9023883a 	mov	r17,r18
20029268:	da802317 	ldw	r10,140(sp)
2002926c:	5455883a 	add	r10,r10,r17
20029270:	da802315 	stw	r10,140(sp)
20029274:	103e4126 	beq	r2,zero,20028b7c <__alt_data_end+0xfffe977c>
20029278:	d9402117 	ldw	r5,132(sp)
2002927c:	d9002017 	ldw	r4,128(sp)
20029280:	d9801a04 	addi	r6,sp,104
20029284:	00284280 	call	20028428 <__sprint_r.part.0>
20029288:	103e3c26 	beq	r2,zero,20028b7c <__alt_data_end+0xfffe977c>
2002928c:	dd002117 	ldw	r20,132(sp)
20029290:	a080030b 	ldhu	r2,12(r20)
20029294:	1080100c 	andi	r2,r2,64
20029298:	1001231e 	bne	r2,zero,20029728 <___vfiprintf_internal_r+0x11ec>
2002929c:	d8802317 	ldw	r2,140(sp)
200292a0:	003d7b06 	br	20028890 <__alt_data_end+0xfffe9490>
200292a4:	1000991e 	bne	r2,zero,2002950c <___vfiprintf_internal_r+0xfd0>
200292a8:	00c00044 	movi	r3,1
200292ac:	9805883a 	mov	r2,r19
200292b0:	dd400015 	stw	r21,0(sp)
200292b4:	dcc00115 	stw	r19,4(sp)
200292b8:	dcc01c15 	stw	r19,112(sp)
200292bc:	d8c01b15 	stw	r3,108(sp)
200292c0:	d811883a 	mov	r8,sp
200292c4:	42000204 	addi	r8,r8,8
200292c8:	a2c0010c 	andi	r11,r20,4
200292cc:	583fe426 	beq	r11,zero,20029260 <__alt_data_end+0xfffe9e60>
200292d0:	8ca7c83a 	sub	r19,r17,r18
200292d4:	04ffe20e 	bge	zero,r19,20029260 <__alt_data_end+0xfffe9e60>
200292d8:	01c00404 	movi	r7,16
200292dc:	3cffcc0e 	bge	r7,r19,20029210 <__alt_data_end+0xfffe9e10>
200292e0:	028800f4 	movhi	r10,8195
200292e4:	52bfff04 	addi	r10,r10,-4
200292e8:	d9001b17 	ldw	r4,108(sp)
200292ec:	da802415 	stw	r10,144(sp)
200292f0:	382b883a 	mov	r21,r7
200292f4:	050001c4 	movi	r20,7
200292f8:	df002017 	ldw	fp,128(sp)
200292fc:	00000506 	br	20029314 <___vfiprintf_internal_r+0xdd8>
20029300:	21400084 	addi	r5,r4,2
20029304:	42000204 	addi	r8,r8,8
20029308:	1809883a 	mov	r4,r3
2002930c:	9cfffc04 	addi	r19,r19,-16
20029310:	acffc40e 	bge	r21,r19,20029224 <__alt_data_end+0xfffe9e24>
20029314:	10800404 	addi	r2,r2,16
20029318:	20c00044 	addi	r3,r4,1
2002931c:	45800015 	stw	r22,0(r8)
20029320:	45400115 	stw	r21,4(r8)
20029324:	d8801c15 	stw	r2,112(sp)
20029328:	d8c01b15 	stw	r3,108(sp)
2002932c:	a0fff40e 	bge	r20,r3,20029300 <__alt_data_end+0xfffe9f00>
20029330:	1000041e 	bne	r2,zero,20029344 <___vfiprintf_internal_r+0xe08>
20029334:	01400044 	movi	r5,1
20029338:	0009883a 	mov	r4,zero
2002933c:	d811883a 	mov	r8,sp
20029340:	003ff206 	br	2002930c <__alt_data_end+0xfffe9f0c>
20029344:	d9402117 	ldw	r5,132(sp)
20029348:	d9801a04 	addi	r6,sp,104
2002934c:	e009883a 	mov	r4,fp
20029350:	00284280 	call	20028428 <__sprint_r.part.0>
20029354:	103fcd1e 	bne	r2,zero,2002928c <__alt_data_end+0xfffe9e8c>
20029358:	d9001b17 	ldw	r4,108(sp)
2002935c:	d8801c17 	ldw	r2,112(sp)
20029360:	d811883a 	mov	r8,sp
20029364:	21400044 	addi	r5,r4,1
20029368:	003fe806 	br	2002930c <__alt_data_end+0xfffe9f0c>
2002936c:	d9402117 	ldw	r5,132(sp)
20029370:	d9002017 	ldw	r4,128(sp)
20029374:	d9801a04 	addi	r6,sp,104
20029378:	d9c02b15 	stw	r7,172(sp)
2002937c:	db402a15 	stw	r13,168(sp)
20029380:	00284280 	call	20028428 <__sprint_r.part.0>
20029384:	d9c02b17 	ldw	r7,172(sp)
20029388:	db402a17 	ldw	r13,168(sp)
2002938c:	103fbf1e 	bne	r2,zero,2002928c <__alt_data_end+0xfffe9e8c>
20029390:	d9401b17 	ldw	r5,108(sp)
20029394:	d8801c17 	ldw	r2,112(sp)
20029398:	d811883a 	mov	r8,sp
2002939c:	29800044 	addi	r6,r5,1
200293a0:	003dc406 	br	20028ab4 <__alt_data_end+0xfffe96b4>
200293a4:	1000d21e 	bne	r2,zero,200296f0 <___vfiprintf_internal_r+0x11b4>
200293a8:	d8c01d87 	ldb	r3,118(sp)
200293ac:	18009526 	beq	r3,zero,20029604 <___vfiprintf_internal_r+0x10c8>
200293b0:	00800044 	movi	r2,1
200293b4:	d8c01d84 	addi	r3,sp,118
200293b8:	1009883a 	mov	r4,r2
200293bc:	d8c00015 	stw	r3,0(sp)
200293c0:	d8800115 	stw	r2,4(sp)
200293c4:	d811883a 	mov	r8,sp
200293c8:	200b883a 	mov	r5,r4
200293cc:	42000204 	addi	r8,r8,8
200293d0:	21000044 	addi	r4,r4,1
200293d4:	003d9706 	br	20028a34 <__alt_data_end+0xfffe9634>
200293d8:	d9001d04 	addi	r4,sp,116
200293dc:	00800084 	movi	r2,2
200293e0:	d9000015 	stw	r4,0(sp)
200293e4:	d8800115 	stw	r2,4(sp)
200293e8:	1809883a 	mov	r4,r3
200293ec:	d811883a 	mov	r8,sp
200293f0:	200b883a 	mov	r5,r4
200293f4:	42000204 	addi	r8,r8,8
200293f8:	21000044 	addi	r4,r4,1
200293fc:	003f4e06 	br	20029138 <__alt_data_end+0xfffe9d38>
20029400:	d8001d85 	stb	zero,118(sp)
20029404:	48005016 	blt	r9,zero,20029548 <___vfiprintf_internal_r+0x100c>
20029408:	00ffdfc4 	movi	r3,-129
2002940c:	94c4b03a 	or	r2,r18,r19
20029410:	a0e8703a 	and	r20,r20,r3
20029414:	103d4426 	beq	r2,zero,20028928 <__alt_data_end+0xfffe9528>
20029418:	0039883a 	mov	fp,zero
2002941c:	d9002617 	ldw	r4,152(sp)
20029420:	dd401a04 	addi	r21,sp,104
20029424:	908003cc 	andi	r2,r18,15
20029428:	9806973a 	slli	r3,r19,28
2002942c:	2085883a 	add	r2,r4,r2
20029430:	9024d13a 	srli	r18,r18,4
20029434:	10800003 	ldbu	r2,0(r2)
20029438:	9826d13a 	srli	r19,r19,4
2002943c:	ad7fffc4 	addi	r21,r21,-1
20029440:	1ca4b03a 	or	r18,r3,r18
20029444:	a8800005 	stb	r2,0(r21)
20029448:	94c4b03a 	or	r2,r18,r19
2002944c:	103ff51e 	bne	r2,zero,20029424 <__alt_data_end+0xfffea024>
20029450:	003e5906 	br	20028db8 <__alt_data_end+0xfffe99b8>
20029454:	d9402117 	ldw	r5,132(sp)
20029458:	d9002017 	ldw	r4,128(sp)
2002945c:	d9801a04 	addi	r6,sp,104
20029460:	00284280 	call	20028428 <__sprint_r.part.0>
20029464:	103f891e 	bne	r2,zero,2002928c <__alt_data_end+0xfffe9e8c>
20029468:	d8801c17 	ldw	r2,112(sp)
2002946c:	d811883a 	mov	r8,sp
20029470:	003f9506 	br	200292c8 <__alt_data_end+0xfffe9ec8>
20029474:	d9402117 	ldw	r5,132(sp)
20029478:	d9002017 	ldw	r4,128(sp)
2002947c:	d9801a04 	addi	r6,sp,104
20029480:	00284280 	call	20028428 <__sprint_r.part.0>
20029484:	103f811e 	bne	r2,zero,2002928c <__alt_data_end+0xfffe9e8c>
20029488:	d811883a 	mov	r8,sp
2002948c:	003ced06 	br	20028844 <__alt_data_end+0xfffe9444>
20029490:	d9402117 	ldw	r5,132(sp)
20029494:	d9002017 	ldw	r4,128(sp)
20029498:	d9801a04 	addi	r6,sp,104
2002949c:	da402c15 	stw	r9,176(sp)
200294a0:	db802a15 	stw	r14,168(sp)
200294a4:	00284280 	call	20028428 <__sprint_r.part.0>
200294a8:	da402c17 	ldw	r9,176(sp)
200294ac:	db802a17 	ldw	r14,168(sp)
200294b0:	103f761e 	bne	r2,zero,2002928c <__alt_data_end+0xfffe9e8c>
200294b4:	d9401b17 	ldw	r5,108(sp)
200294b8:	d8801c17 	ldw	r2,112(sp)
200294bc:	d811883a 	mov	r8,sp
200294c0:	29000044 	addi	r4,r5,1
200294c4:	003d5b06 	br	20028a34 <__alt_data_end+0xfffe9634>
200294c8:	d9402117 	ldw	r5,132(sp)
200294cc:	d9002017 	ldw	r4,128(sp)
200294d0:	d9801a04 	addi	r6,sp,104
200294d4:	da402c15 	stw	r9,176(sp)
200294d8:	00284280 	call	20028428 <__sprint_r.part.0>
200294dc:	da402c17 	ldw	r9,176(sp)
200294e0:	103f6a1e 	bne	r2,zero,2002928c <__alt_data_end+0xfffe9e8c>
200294e4:	d9401b17 	ldw	r5,108(sp)
200294e8:	d8801c17 	ldw	r2,112(sp)
200294ec:	d811883a 	mov	r8,sp
200294f0:	29000044 	addi	r4,r5,1
200294f4:	003f1006 	br	20029138 <__alt_data_end+0xfffe9d38>
200294f8:	1000c31e 	bne	r2,zero,20029808 <___vfiprintf_internal_r+0x12cc>
200294fc:	01000044 	movi	r4,1
20029500:	000b883a 	mov	r5,zero
20029504:	d811883a 	mov	r8,sp
20029508:	003f0d06 	br	20029140 <__alt_data_end+0xfffe9d40>
2002950c:	d9402117 	ldw	r5,132(sp)
20029510:	d9002017 	ldw	r4,128(sp)
20029514:	d9801a04 	addi	r6,sp,104
20029518:	00284280 	call	20028428 <__sprint_r.part.0>
2002951c:	103f5b1e 	bne	r2,zero,2002928c <__alt_data_end+0xfffe9e8c>
20029520:	d9001b17 	ldw	r4,108(sp)
20029524:	d8801c17 	ldw	r2,112(sp)
20029528:	d811883a 	mov	r8,sp
2002952c:	21000044 	addi	r4,r4,1
20029530:	003d8006 	br	20028b34 <__alt_data_end+0xfffe9734>
20029534:	010800f4 	movhi	r4,8195
20029538:	213f9a04 	addi	r4,r4,-408
2002953c:	d9002615 	stw	r4,152(sp)
20029540:	d8c02215 	stw	r3,136(sp)
20029544:	1029883a 	mov	r20,r2
20029548:	94c4b03a 	or	r2,r18,r19
2002954c:	103fb21e 	bne	r2,zero,20029418 <__alt_data_end+0xfffea018>
20029550:	0039883a 	mov	fp,zero
20029554:	00800084 	movi	r2,2
20029558:	003e6b06 	br	20028f08 <__alt_data_end+0xfffe9b08>
2002955c:	da802217 	ldw	r10,136(sp)
20029560:	d8001d85 	stb	zero,118(sp)
20029564:	0027883a 	mov	r19,zero
20029568:	50800104 	addi	r2,r10,4
2002956c:	54800017 	ldw	r18,0(r10)
20029570:	483e6016 	blt	r9,zero,20028ef4 <__alt_data_end+0xfffe9af4>
20029574:	00ffdfc4 	movi	r3,-129
20029578:	d8802215 	stw	r2,136(sp)
2002957c:	a0e8703a 	and	r20,r20,r3
20029580:	0039883a 	mov	fp,zero
20029584:	903ebb26 	beq	r18,zero,20029074 <__alt_data_end+0xfffe9c74>
20029588:	00800244 	movi	r2,9
2002958c:	14bdee36 	bltu	r2,r18,20028d48 <__alt_data_end+0xfffe9948>
20029590:	003eba06 	br	2002907c <__alt_data_end+0xfffe9c7c>
20029594:	00800c04 	movi	r2,48
20029598:	d8c01d45 	stb	r3,117(sp)
2002959c:	d8801d05 	stb	r2,116(sp)
200295a0:	d8001d85 	stb	zero,118(sp)
200295a4:	a0c00094 	ori	r3,r20,2
200295a8:	4800a916 	blt	r9,zero,20029850 <___vfiprintf_internal_r+0x1314>
200295ac:	00bfdfc4 	movi	r2,-129
200295b0:	a096703a 	and	r11,r20,r2
200295b4:	5d000094 	ori	r20,r11,2
200295b8:	0039883a 	mov	fp,zero
200295bc:	003f9706 	br	2002941c <__alt_data_end+0xfffea01c>
200295c0:	8025883a 	mov	r18,r16
200295c4:	003c2e06 	br	20028680 <__alt_data_end+0xfffe9280>
200295c8:	008800f4 	movhi	r2,8195
200295cc:	10bf9a04 	addi	r2,r2,-408
200295d0:	0039883a 	mov	fp,zero
200295d4:	d8802615 	stw	r2,152(sp)
200295d8:	003f9006 	br	2002941c <__alt_data_end+0xfffea01c>
200295dc:	04a5c83a 	sub	r18,zero,r18
200295e0:	07000b44 	movi	fp,45
200295e4:	9004c03a 	cmpne	r2,r18,zero
200295e8:	04e7c83a 	sub	r19,zero,r19
200295ec:	df001d85 	stb	fp,118(sp)
200295f0:	98a7c83a 	sub	r19,r19,r2
200295f4:	48009f16 	blt	r9,zero,20029874 <___vfiprintf_internal_r+0x1338>
200295f8:	00bfdfc4 	movi	r2,-129
200295fc:	a0a8703a 	and	r20,r20,r2
20029600:	003dd006 	br	20028d44 <__alt_data_end+0xfffe9944>
20029604:	70004c26 	beq	r14,zero,20029738 <___vfiprintf_internal_r+0x11fc>
20029608:	00800084 	movi	r2,2
2002960c:	d8c01d04 	addi	r3,sp,116
20029610:	d8c00015 	stw	r3,0(sp)
20029614:	d8800115 	stw	r2,4(sp)
20029618:	01000044 	movi	r4,1
2002961c:	d811883a 	mov	r8,sp
20029620:	003f7306 	br	200293f0 <__alt_data_end+0xfffe9ff0>
20029624:	a080100c 	andi	r2,r20,64
20029628:	da802217 	ldw	r10,136(sp)
2002962c:	103e0626 	beq	r2,zero,20028e48 <__alt_data_end+0xfffe9a48>
20029630:	5480000f 	ldh	r18,0(r10)
20029634:	52800104 	addi	r10,r10,4
20029638:	da802215 	stw	r10,136(sp)
2002963c:	9027d7fa 	srai	r19,r18,31
20029640:	9805883a 	mov	r2,r19
20029644:	003db806 	br	20028d28 <__alt_data_end+0xfffe9928>
20029648:	a080040c 	andi	r2,r20,16
2002964c:	1000091e 	bne	r2,zero,20029674 <___vfiprintf_internal_r+0x1138>
20029650:	a2c0100c 	andi	r11,r20,64
20029654:	58000726 	beq	r11,zero,20029674 <___vfiprintf_internal_r+0x1138>
20029658:	da802217 	ldw	r10,136(sp)
2002965c:	50800017 	ldw	r2,0(r10)
20029660:	52800104 	addi	r10,r10,4
20029664:	da802215 	stw	r10,136(sp)
20029668:	da802317 	ldw	r10,140(sp)
2002966c:	1280000d 	sth	r10,0(r2)
20029670:	003be706 	br	20028610 <__alt_data_end+0xfffe9210>
20029674:	da802217 	ldw	r10,136(sp)
20029678:	50800017 	ldw	r2,0(r10)
2002967c:	52800104 	addi	r10,r10,4
20029680:	da802215 	stw	r10,136(sp)
20029684:	da802317 	ldw	r10,140(sp)
20029688:	12800015 	stw	r10,0(r2)
2002968c:	003be006 	br	20028610 <__alt_data_end+0xfffe9210>
20029690:	a080100c 	andi	r2,r20,64
20029694:	da802217 	ldw	r10,136(sp)
20029698:	10003026 	beq	r2,zero,2002975c <___vfiprintf_internal_r+0x1220>
2002969c:	5480000b 	ldhu	r18,0(r10)
200296a0:	52800104 	addi	r10,r10,4
200296a4:	0027883a 	mov	r19,zero
200296a8:	da802215 	stw	r10,136(sp)
200296ac:	003d8006 	br	20028cb0 <__alt_data_end+0xfffe98b0>
200296b0:	80c00007 	ldb	r3,0(r16)
200296b4:	003c0006 	br	200286b8 <__alt_data_end+0xfffe92b8>
200296b8:	a080100c 	andi	r2,r20,64
200296bc:	d8001d85 	stb	zero,118(sp)
200296c0:	da802217 	ldw	r10,136(sp)
200296c4:	1000201e 	bne	r2,zero,20029748 <___vfiprintf_internal_r+0x120c>
200296c8:	50800104 	addi	r2,r10,4
200296cc:	54800017 	ldw	r18,0(r10)
200296d0:	0027883a 	mov	r19,zero
200296d4:	483def0e 	bge	r9,zero,20028e94 <__alt_data_end+0xfffe9a94>
200296d8:	94c6b03a 	or	r3,r18,r19
200296dc:	d8802215 	stw	r2,136(sp)
200296e0:	183d4e1e 	bne	r3,zero,20028c1c <__alt_data_end+0xfffe981c>
200296e4:	0039883a 	mov	fp,zero
200296e8:	0005883a 	mov	r2,zero
200296ec:	003e0606 	br	20028f08 <__alt_data_end+0xfffe9b08>
200296f0:	d9402117 	ldw	r5,132(sp)
200296f4:	d9002017 	ldw	r4,128(sp)
200296f8:	d9801a04 	addi	r6,sp,104
200296fc:	da402c15 	stw	r9,176(sp)
20029700:	db802a15 	stw	r14,168(sp)
20029704:	00284280 	call	20028428 <__sprint_r.part.0>
20029708:	da402c17 	ldw	r9,176(sp)
2002970c:	db802a17 	ldw	r14,168(sp)
20029710:	103ede1e 	bne	r2,zero,2002928c <__alt_data_end+0xfffe9e8c>
20029714:	d9401b17 	ldw	r5,108(sp)
20029718:	d8801c17 	ldw	r2,112(sp)
2002971c:	d811883a 	mov	r8,sp
20029720:	29000044 	addi	r4,r5,1
20029724:	003e7406 	br	200290f8 <__alt_data_end+0xfffe9cf8>
20029728:	00bfffc4 	movi	r2,-1
2002972c:	003c5806 	br	20028890 <__alt_data_end+0xfffe9490>
20029730:	d811883a 	mov	r8,sp
20029734:	003ee806 	br	200292d8 <__alt_data_end+0xfffe9ed8>
20029738:	000b883a 	mov	r5,zero
2002973c:	01000044 	movi	r4,1
20029740:	d811883a 	mov	r8,sp
20029744:	003e7c06 	br	20029138 <__alt_data_end+0xfffe9d38>
20029748:	50800104 	addi	r2,r10,4
2002974c:	5480000b 	ldhu	r18,0(r10)
20029750:	0027883a 	mov	r19,zero
20029754:	483dcf0e 	bge	r9,zero,20028e94 <__alt_data_end+0xfffe9a94>
20029758:	003fdf06 	br	200296d8 <__alt_data_end+0xfffea2d8>
2002975c:	54800017 	ldw	r18,0(r10)
20029760:	52800104 	addi	r10,r10,4
20029764:	0027883a 	mov	r19,zero
20029768:	da802215 	stw	r10,136(sp)
2002976c:	003d5006 	br	20028cb0 <__alt_data_end+0xfffe98b0>
20029770:	50800104 	addi	r2,r10,4
20029774:	5480000b 	ldhu	r18,0(r10)
20029778:	0027883a 	mov	r19,zero
2002977c:	483f7d0e 	bge	r9,zero,20029574 <__alt_data_end+0xfffea174>
20029780:	003ddc06 	br	20028ef4 <__alt_data_end+0xfffe9af4>
20029784:	d8c02215 	stw	r3,136(sp)
20029788:	0039883a 	mov	fp,zero
2002978c:	003ddb06 	br	20028efc <__alt_data_end+0xfffe9afc>
20029790:	028800f4 	movhi	r10,8195
20029794:	52bffb04 	addi	r10,r10,-20
20029798:	da802415 	stw	r10,144(sp)
2002979c:	003e8306 	br	200291ac <__alt_data_end+0xfffe9dac>
200297a0:	d8801c17 	ldw	r2,112(sp)
200297a4:	dd002117 	ldw	r20,132(sp)
200297a8:	103eb926 	beq	r2,zero,20029290 <__alt_data_end+0xfffe9e90>
200297ac:	d9002017 	ldw	r4,128(sp)
200297b0:	d9801a04 	addi	r6,sp,104
200297b4:	a00b883a 	mov	r5,r20
200297b8:	00284280 	call	20028428 <__sprint_r.part.0>
200297bc:	003eb406 	br	20029290 <__alt_data_end+0xfffe9e90>
200297c0:	80c00043 	ldbu	r3,1(r16)
200297c4:	a5000814 	ori	r20,r20,32
200297c8:	84000044 	addi	r16,r16,1
200297cc:	18c03fcc 	andi	r3,r3,255
200297d0:	18c0201c 	xori	r3,r3,128
200297d4:	18ffe004 	addi	r3,r3,-128
200297d8:	003bb706 	br	200286b8 <__alt_data_end+0xfffe92b8>
200297dc:	a809883a 	mov	r4,r21
200297e0:	d8c02a15 	stw	r3,168(sp)
200297e4:	da002b15 	stw	r8,172(sp)
200297e8:	0020e700 	call	20020e70 <strlen>
200297ec:	d8c02a17 	ldw	r3,168(sp)
200297f0:	1027883a 	mov	r19,r2
200297f4:	df001d83 	ldbu	fp,118(sp)
200297f8:	d8c02215 	stw	r3,136(sp)
200297fc:	0013883a 	mov	r9,zero
20029800:	da002b17 	ldw	r8,172(sp)
20029804:	003c4d06 	br	2002893c <__alt_data_end+0xfffe953c>
20029808:	d9402117 	ldw	r5,132(sp)
2002980c:	d9002017 	ldw	r4,128(sp)
20029810:	d9801a04 	addi	r6,sp,104
20029814:	da402c15 	stw	r9,176(sp)
20029818:	00284280 	call	20028428 <__sprint_r.part.0>
2002981c:	da402c17 	ldw	r9,176(sp)
20029820:	103e9a1e 	bne	r2,zero,2002928c <__alt_data_end+0xfffe9e8c>
20029824:	d9401b17 	ldw	r5,108(sp)
20029828:	d8801c17 	ldw	r2,112(sp)
2002982c:	d811883a 	mov	r8,sp
20029830:	29000044 	addi	r4,r5,1
20029834:	003e4206 	br	20029140 <__alt_data_end+0xfffe9d40>
20029838:	d9401b17 	ldw	r5,108(sp)
2002983c:	010800f4 	movhi	r4,8195
20029840:	213fff04 	addi	r4,r4,-4
20029844:	d9002415 	stw	r4,144(sp)
20029848:	29400044 	addi	r5,r5,1
2002984c:	003c6d06 	br	20028a04 <__alt_data_end+0xfffe9604>
20029850:	0039883a 	mov	fp,zero
20029854:	00800084 	movi	r2,2
20029858:	10803fcc 	andi	r2,r2,255
2002985c:	01000044 	movi	r4,1
20029860:	11001e26 	beq	r2,r4,200298dc <___vfiprintf_internal_r+0x13a0>
20029864:	01000084 	movi	r4,2
20029868:	11001e1e 	bne	r2,r4,200298e4 <___vfiprintf_internal_r+0x13a8>
2002986c:	1829883a 	mov	r20,r3
20029870:	003eea06 	br	2002941c <__alt_data_end+0xfffea01c>
20029874:	a007883a 	mov	r3,r20
20029878:	00800044 	movi	r2,1
2002987c:	003ff606 	br	20029858 <__alt_data_end+0xfffea458>
20029880:	00800184 	movi	r2,6
20029884:	1240012e 	bgeu	r2,r9,2002988c <___vfiprintf_internal_r+0x1350>
20029888:	1013883a 	mov	r9,r2
2002988c:	4827883a 	mov	r19,r9
20029890:	4825883a 	mov	r18,r9
20029894:	48001516 	blt	r9,zero,200298ec <___vfiprintf_internal_r+0x13b0>
20029898:	054800f4 	movhi	r21,8195
2002989c:	d8c02215 	stw	r3,136(sp)
200298a0:	ad7f9f04 	addi	r21,r21,-388
200298a4:	003d1406 	br	20028cf8 <__alt_data_end+0xfffe98f8>
200298a8:	028800f4 	movhi	r10,8195
200298ac:	52bffb04 	addi	r10,r10,-20
200298b0:	da802415 	stw	r10,144(sp)
200298b4:	200d883a 	mov	r6,r4
200298b8:	003c9106 	br	20028b00 <__alt_data_end+0xfffe9700>
200298bc:	5021883a 	mov	r16,r10
200298c0:	0013883a 	mov	r9,zero
200298c4:	003b7d06 	br	200286bc <__alt_data_end+0xfffe92bc>
200298c8:	4827883a 	mov	r19,r9
200298cc:	df001d83 	ldbu	fp,118(sp)
200298d0:	d8c02215 	stw	r3,136(sp)
200298d4:	0013883a 	mov	r9,zero
200298d8:	003c1806 	br	2002893c <__alt_data_end+0xfffe953c>
200298dc:	1829883a 	mov	r20,r3
200298e0:	003d1806 	br	20028d44 <__alt_data_end+0xfffe9944>
200298e4:	1829883a 	mov	r20,r3
200298e8:	003ccd06 	br	20028c20 <__alt_data_end+0xfffe9820>
200298ec:	0025883a 	mov	r18,zero
200298f0:	003fe906 	br	20029898 <__alt_data_end+0xfffea498>
200298f4:	d8802217 	ldw	r2,136(sp)
200298f8:	80c00043 	ldbu	r3,1(r16)
200298fc:	5021883a 	mov	r16,r10
20029900:	12400017 	ldw	r9,0(r2)
20029904:	10800104 	addi	r2,r2,4
20029908:	d8802215 	stw	r2,136(sp)
2002990c:	483faf0e 	bge	r9,zero,200297cc <__alt_data_end+0xfffea3cc>
20029910:	18c03fcc 	andi	r3,r3,255
20029914:	18c0201c 	xori	r3,r3,128
20029918:	027fffc4 	movi	r9,-1
2002991c:	18ffe004 	addi	r3,r3,-128
20029920:	003b6506 	br	200286b8 <__alt_data_end+0xfffe92b8>
20029924:	d9c01d85 	stb	r7,118(sp)
20029928:	003ca006 	br	20028bac <__alt_data_end+0xfffe97ac>
2002992c:	d9c01d85 	stb	r7,118(sp)
20029930:	003cad06 	br	20028be8 <__alt_data_end+0xfffe97e8>
20029934:	d9c01d85 	stb	r7,118(sp)
20029938:	003d7d06 	br	20028f30 <__alt_data_end+0xfffe9b30>
2002993c:	d9c01d85 	stb	r7,118(sp)
20029940:	003d5f06 	br	20028ec0 <__alt_data_end+0xfffe9ac0>
20029944:	a080004c 	andi	r2,r20,1
20029948:	0039883a 	mov	fp,zero
2002994c:	10000526 	beq	r2,zero,20029964 <___vfiprintf_internal_r+0x1428>
20029950:	00800c04 	movi	r2,48
20029954:	d88019c5 	stb	r2,103(sp)
20029958:	dcc02717 	ldw	r19,156(sp)
2002995c:	dd4019c4 	addi	r21,sp,103
20029960:	003bf606 	br	2002893c <__alt_data_end+0xfffe953c>
20029964:	0027883a 	mov	r19,zero
20029968:	dd401a04 	addi	r21,sp,104
2002996c:	003bf306 	br	2002893c <__alt_data_end+0xfffe953c>
20029970:	d9c01d85 	stb	r7,118(sp)
20029974:	003dc806 	br	20029098 <__alt_data_end+0xfffe9c98>
20029978:	d9c01d85 	stb	r7,118(sp)
2002997c:	003d3a06 	br	20028e68 <__alt_data_end+0xfffe9a68>
20029980:	d9c01d85 	stb	r7,118(sp)
20029984:	003d2a06 	br	20028e30 <__alt_data_end+0xfffe9a30>
20029988:	d9c01d85 	stb	r7,118(sp)
2002998c:	003cde06 	br	20028d08 <__alt_data_end+0xfffe9908>
20029990:	d9c01d85 	stb	r7,118(sp)
20029994:	003cbc06 	br	20028c88 <__alt_data_end+0xfffe9888>

20029998 <__vfiprintf_internal>:
20029998:	008800f4 	movhi	r2,8195
2002999c:	1086fa04 	addi	r2,r2,7144
200299a0:	300f883a 	mov	r7,r6
200299a4:	280d883a 	mov	r6,r5
200299a8:	200b883a 	mov	r5,r4
200299ac:	11000017 	ldw	r4,0(r2)
200299b0:	002853c1 	jmpi	2002853c <___vfiprintf_internal_r>

200299b4 <__sbprintf>:
200299b4:	2880030b 	ldhu	r2,12(r5)
200299b8:	2ac01917 	ldw	r11,100(r5)
200299bc:	2a80038b 	ldhu	r10,14(r5)
200299c0:	2a400717 	ldw	r9,28(r5)
200299c4:	2a000917 	ldw	r8,36(r5)
200299c8:	defee204 	addi	sp,sp,-1144
200299cc:	00c10004 	movi	r3,1024
200299d0:	dc011a15 	stw	r16,1128(sp)
200299d4:	10bfff4c 	andi	r2,r2,65533
200299d8:	2821883a 	mov	r16,r5
200299dc:	d8cb883a 	add	r5,sp,r3
200299e0:	dc811c15 	stw	r18,1136(sp)
200299e4:	dc411b15 	stw	r17,1132(sp)
200299e8:	dfc11d15 	stw	ra,1140(sp)
200299ec:	2025883a 	mov	r18,r4
200299f0:	d881030d 	sth	r2,1036(sp)
200299f4:	dac11915 	stw	r11,1124(sp)
200299f8:	da81038d 	sth	r10,1038(sp)
200299fc:	da410715 	stw	r9,1052(sp)
20029a00:	da010915 	stw	r8,1060(sp)
20029a04:	dec10015 	stw	sp,1024(sp)
20029a08:	dec10415 	stw	sp,1040(sp)
20029a0c:	d8c10215 	stw	r3,1032(sp)
20029a10:	d8c10515 	stw	r3,1044(sp)
20029a14:	d8010615 	stw	zero,1048(sp)
20029a18:	002853c0 	call	2002853c <___vfiprintf_internal_r>
20029a1c:	1023883a 	mov	r17,r2
20029a20:	10000416 	blt	r2,zero,20029a34 <__sbprintf+0x80>
20029a24:	d9410004 	addi	r5,sp,1024
20029a28:	9009883a 	mov	r4,r18
20029a2c:	0024dd00 	call	20024dd0 <_fflush_r>
20029a30:	10000d1e 	bne	r2,zero,20029a68 <__sbprintf+0xb4>
20029a34:	d881030b 	ldhu	r2,1036(sp)
20029a38:	1080100c 	andi	r2,r2,64
20029a3c:	10000326 	beq	r2,zero,20029a4c <__sbprintf+0x98>
20029a40:	8080030b 	ldhu	r2,12(r16)
20029a44:	10801014 	ori	r2,r2,64
20029a48:	8080030d 	sth	r2,12(r16)
20029a4c:	8805883a 	mov	r2,r17
20029a50:	dfc11d17 	ldw	ra,1140(sp)
20029a54:	dc811c17 	ldw	r18,1136(sp)
20029a58:	dc411b17 	ldw	r17,1132(sp)
20029a5c:	dc011a17 	ldw	r16,1128(sp)
20029a60:	dec11e04 	addi	sp,sp,1144
20029a64:	f800283a 	ret
20029a68:	047fffc4 	movi	r17,-1
20029a6c:	003ff106 	br	20029a34 <__alt_data_end+0xfffea634>

20029a70 <__swbuf_r>:
20029a70:	defffb04 	addi	sp,sp,-20
20029a74:	dcc00315 	stw	r19,12(sp)
20029a78:	dc800215 	stw	r18,8(sp)
20029a7c:	dc000015 	stw	r16,0(sp)
20029a80:	dfc00415 	stw	ra,16(sp)
20029a84:	dc400115 	stw	r17,4(sp)
20029a88:	2025883a 	mov	r18,r4
20029a8c:	2827883a 	mov	r19,r5
20029a90:	3021883a 	mov	r16,r6
20029a94:	20000226 	beq	r4,zero,20029aa0 <__swbuf_r+0x30>
20029a98:	20800e17 	ldw	r2,56(r4)
20029a9c:	10004226 	beq	r2,zero,20029ba8 <__swbuf_r+0x138>
20029aa0:	80800617 	ldw	r2,24(r16)
20029aa4:	8100030b 	ldhu	r4,12(r16)
20029aa8:	80800215 	stw	r2,8(r16)
20029aac:	2080020c 	andi	r2,r4,8
20029ab0:	10003626 	beq	r2,zero,20029b8c <__swbuf_r+0x11c>
20029ab4:	80c00417 	ldw	r3,16(r16)
20029ab8:	18003426 	beq	r3,zero,20029b8c <__swbuf_r+0x11c>
20029abc:	2088000c 	andi	r2,r4,8192
20029ac0:	9c403fcc 	andi	r17,r19,255
20029ac4:	10001a26 	beq	r2,zero,20029b30 <__swbuf_r+0xc0>
20029ac8:	80800017 	ldw	r2,0(r16)
20029acc:	81000517 	ldw	r4,20(r16)
20029ad0:	10c7c83a 	sub	r3,r2,r3
20029ad4:	1900200e 	bge	r3,r4,20029b58 <__swbuf_r+0xe8>
20029ad8:	18c00044 	addi	r3,r3,1
20029adc:	81000217 	ldw	r4,8(r16)
20029ae0:	11400044 	addi	r5,r2,1
20029ae4:	81400015 	stw	r5,0(r16)
20029ae8:	213fffc4 	addi	r4,r4,-1
20029aec:	81000215 	stw	r4,8(r16)
20029af0:	14c00005 	stb	r19,0(r2)
20029af4:	80800517 	ldw	r2,20(r16)
20029af8:	10c01e26 	beq	r2,r3,20029b74 <__swbuf_r+0x104>
20029afc:	8080030b 	ldhu	r2,12(r16)
20029b00:	1080004c 	andi	r2,r2,1
20029b04:	10000226 	beq	r2,zero,20029b10 <__swbuf_r+0xa0>
20029b08:	00800284 	movi	r2,10
20029b0c:	88801926 	beq	r17,r2,20029b74 <__swbuf_r+0x104>
20029b10:	8805883a 	mov	r2,r17
20029b14:	dfc00417 	ldw	ra,16(sp)
20029b18:	dcc00317 	ldw	r19,12(sp)
20029b1c:	dc800217 	ldw	r18,8(sp)
20029b20:	dc400117 	ldw	r17,4(sp)
20029b24:	dc000017 	ldw	r16,0(sp)
20029b28:	dec00504 	addi	sp,sp,20
20029b2c:	f800283a 	ret
20029b30:	81401917 	ldw	r5,100(r16)
20029b34:	00b7ffc4 	movi	r2,-8193
20029b38:	21080014 	ori	r4,r4,8192
20029b3c:	2884703a 	and	r2,r5,r2
20029b40:	80801915 	stw	r2,100(r16)
20029b44:	80800017 	ldw	r2,0(r16)
20029b48:	8100030d 	sth	r4,12(r16)
20029b4c:	81000517 	ldw	r4,20(r16)
20029b50:	10c7c83a 	sub	r3,r2,r3
20029b54:	193fe016 	blt	r3,r4,20029ad8 <__alt_data_end+0xfffea6d8>
20029b58:	800b883a 	mov	r5,r16
20029b5c:	9009883a 	mov	r4,r18
20029b60:	0024dd00 	call	20024dd0 <_fflush_r>
20029b64:	1000071e 	bne	r2,zero,20029b84 <__swbuf_r+0x114>
20029b68:	80800017 	ldw	r2,0(r16)
20029b6c:	00c00044 	movi	r3,1
20029b70:	003fda06 	br	20029adc <__alt_data_end+0xfffea6dc>
20029b74:	800b883a 	mov	r5,r16
20029b78:	9009883a 	mov	r4,r18
20029b7c:	0024dd00 	call	20024dd0 <_fflush_r>
20029b80:	103fe326 	beq	r2,zero,20029b10 <__alt_data_end+0xfffea710>
20029b84:	00bfffc4 	movi	r2,-1
20029b88:	003fe206 	br	20029b14 <__alt_data_end+0xfffea714>
20029b8c:	800b883a 	mov	r5,r16
20029b90:	9009883a 	mov	r4,r18
20029b94:	00231d80 	call	200231d8 <__swsetup_r>
20029b98:	103ffa1e 	bne	r2,zero,20029b84 <__alt_data_end+0xfffea784>
20029b9c:	8100030b 	ldhu	r4,12(r16)
20029ba0:	80c00417 	ldw	r3,16(r16)
20029ba4:	003fc506 	br	20029abc <__alt_data_end+0xfffea6bc>
20029ba8:	00251ac0 	call	200251ac <__sinit>
20029bac:	003fbc06 	br	20029aa0 <__alt_data_end+0xfffea6a0>

20029bb0 <__swbuf>:
20029bb0:	008800f4 	movhi	r2,8195
20029bb4:	1086fa04 	addi	r2,r2,7144
20029bb8:	280d883a 	mov	r6,r5
20029bbc:	200b883a 	mov	r5,r4
20029bc0:	11000017 	ldw	r4,0(r2)
20029bc4:	0029a701 	jmpi	20029a70 <__swbuf_r>

20029bc8 <_write_r>:
20029bc8:	defffd04 	addi	sp,sp,-12
20029bcc:	2805883a 	mov	r2,r5
20029bd0:	dc000015 	stw	r16,0(sp)
20029bd4:	040800f4 	movhi	r16,8195
20029bd8:	dc400115 	stw	r17,4(sp)
20029bdc:	300b883a 	mov	r5,r6
20029be0:	840dca04 	addi	r16,r16,14120
20029be4:	2023883a 	mov	r17,r4
20029be8:	380d883a 	mov	r6,r7
20029bec:	1009883a 	mov	r4,r2
20029bf0:	dfc00215 	stw	ra,8(sp)
20029bf4:	80000015 	stw	zero,0(r16)
20029bf8:	002df840 	call	2002df84 <write>
20029bfc:	00ffffc4 	movi	r3,-1
20029c00:	10c00526 	beq	r2,r3,20029c18 <_write_r+0x50>
20029c04:	dfc00217 	ldw	ra,8(sp)
20029c08:	dc400117 	ldw	r17,4(sp)
20029c0c:	dc000017 	ldw	r16,0(sp)
20029c10:	dec00304 	addi	sp,sp,12
20029c14:	f800283a 	ret
20029c18:	80c00017 	ldw	r3,0(r16)
20029c1c:	183ff926 	beq	r3,zero,20029c04 <__alt_data_end+0xfffea804>
20029c20:	88c00015 	stw	r3,0(r17)
20029c24:	003ff706 	br	20029c04 <__alt_data_end+0xfffea804>

20029c28 <_close_r>:
20029c28:	defffd04 	addi	sp,sp,-12
20029c2c:	dc000015 	stw	r16,0(sp)
20029c30:	040800f4 	movhi	r16,8195
20029c34:	dc400115 	stw	r17,4(sp)
20029c38:	840dca04 	addi	r16,r16,14120
20029c3c:	2023883a 	mov	r17,r4
20029c40:	2809883a 	mov	r4,r5
20029c44:	dfc00215 	stw	ra,8(sp)
20029c48:	80000015 	stw	zero,0(r16)
20029c4c:	002d5580 	call	2002d558 <close>
20029c50:	00ffffc4 	movi	r3,-1
20029c54:	10c00526 	beq	r2,r3,20029c6c <_close_r+0x44>
20029c58:	dfc00217 	ldw	ra,8(sp)
20029c5c:	dc400117 	ldw	r17,4(sp)
20029c60:	dc000017 	ldw	r16,0(sp)
20029c64:	dec00304 	addi	sp,sp,12
20029c68:	f800283a 	ret
20029c6c:	80c00017 	ldw	r3,0(r16)
20029c70:	183ff926 	beq	r3,zero,20029c58 <__alt_data_end+0xfffea858>
20029c74:	88c00015 	stw	r3,0(r17)
20029c78:	003ff706 	br	20029c58 <__alt_data_end+0xfffea858>

20029c7c <_calloc_r>:
20029c7c:	298b383a 	mul	r5,r5,r6
20029c80:	defffe04 	addi	sp,sp,-8
20029c84:	dfc00115 	stw	ra,4(sp)
20029c88:	dc000015 	stw	r16,0(sp)
20029c8c:	0025f0c0 	call	20025f0c <_malloc_r>
20029c90:	10002926 	beq	r2,zero,20029d38 <_calloc_r+0xbc>
20029c94:	11bfff17 	ldw	r6,-4(r2)
20029c98:	1021883a 	mov	r16,r2
20029c9c:	00bfff04 	movi	r2,-4
20029ca0:	308c703a 	and	r6,r6,r2
20029ca4:	00c00904 	movi	r3,36
20029ca8:	308d883a 	add	r6,r6,r2
20029cac:	19801636 	bltu	r3,r6,20029d08 <_calloc_r+0x8c>
20029cb0:	008004c4 	movi	r2,19
20029cb4:	11800b2e 	bgeu	r2,r6,20029ce4 <_calloc_r+0x68>
20029cb8:	80000015 	stw	zero,0(r16)
20029cbc:	80000115 	stw	zero,4(r16)
20029cc0:	008006c4 	movi	r2,27
20029cc4:	11801a2e 	bgeu	r2,r6,20029d30 <_calloc_r+0xb4>
20029cc8:	80000215 	stw	zero,8(r16)
20029ccc:	80000315 	stw	zero,12(r16)
20029cd0:	30c0151e 	bne	r6,r3,20029d28 <_calloc_r+0xac>
20029cd4:	80000415 	stw	zero,16(r16)
20029cd8:	80800604 	addi	r2,r16,24
20029cdc:	80000515 	stw	zero,20(r16)
20029ce0:	00000106 	br	20029ce8 <_calloc_r+0x6c>
20029ce4:	8005883a 	mov	r2,r16
20029ce8:	10000015 	stw	zero,0(r2)
20029cec:	10000115 	stw	zero,4(r2)
20029cf0:	10000215 	stw	zero,8(r2)
20029cf4:	8005883a 	mov	r2,r16
20029cf8:	dfc00117 	ldw	ra,4(sp)
20029cfc:	dc000017 	ldw	r16,0(sp)
20029d00:	dec00204 	addi	sp,sp,8
20029d04:	f800283a 	ret
20029d08:	000b883a 	mov	r5,zero
20029d0c:	8009883a 	mov	r4,r16
20029d10:	00269580 	call	20026958 <memset>
20029d14:	8005883a 	mov	r2,r16
20029d18:	dfc00117 	ldw	ra,4(sp)
20029d1c:	dc000017 	ldw	r16,0(sp)
20029d20:	dec00204 	addi	sp,sp,8
20029d24:	f800283a 	ret
20029d28:	80800404 	addi	r2,r16,16
20029d2c:	003fee06 	br	20029ce8 <__alt_data_end+0xfffea8e8>
20029d30:	80800204 	addi	r2,r16,8
20029d34:	003fec06 	br	20029ce8 <__alt_data_end+0xfffea8e8>
20029d38:	0005883a 	mov	r2,zero
20029d3c:	003fee06 	br	20029cf8 <__alt_data_end+0xfffea8f8>

20029d40 <_fclose_r>:
20029d40:	28003926 	beq	r5,zero,20029e28 <_fclose_r+0xe8>
20029d44:	defffc04 	addi	sp,sp,-16
20029d48:	dc400115 	stw	r17,4(sp)
20029d4c:	dc000015 	stw	r16,0(sp)
20029d50:	dfc00315 	stw	ra,12(sp)
20029d54:	dc800215 	stw	r18,8(sp)
20029d58:	2023883a 	mov	r17,r4
20029d5c:	2821883a 	mov	r16,r5
20029d60:	20000226 	beq	r4,zero,20029d6c <_fclose_r+0x2c>
20029d64:	20800e17 	ldw	r2,56(r4)
20029d68:	10002726 	beq	r2,zero,20029e08 <_fclose_r+0xc8>
20029d6c:	8080030f 	ldh	r2,12(r16)
20029d70:	1000071e 	bne	r2,zero,20029d90 <_fclose_r+0x50>
20029d74:	0005883a 	mov	r2,zero
20029d78:	dfc00317 	ldw	ra,12(sp)
20029d7c:	dc800217 	ldw	r18,8(sp)
20029d80:	dc400117 	ldw	r17,4(sp)
20029d84:	dc000017 	ldw	r16,0(sp)
20029d88:	dec00404 	addi	sp,sp,16
20029d8c:	f800283a 	ret
20029d90:	800b883a 	mov	r5,r16
20029d94:	8809883a 	mov	r4,r17
20029d98:	0024bb40 	call	20024bb4 <__sflush_r>
20029d9c:	1025883a 	mov	r18,r2
20029da0:	80800b17 	ldw	r2,44(r16)
20029da4:	10000426 	beq	r2,zero,20029db8 <_fclose_r+0x78>
20029da8:	81400717 	ldw	r5,28(r16)
20029dac:	8809883a 	mov	r4,r17
20029db0:	103ee83a 	callr	r2
20029db4:	10001616 	blt	r2,zero,20029e10 <_fclose_r+0xd0>
20029db8:	8080030b 	ldhu	r2,12(r16)
20029dbc:	1080200c 	andi	r2,r2,128
20029dc0:	1000151e 	bne	r2,zero,20029e18 <_fclose_r+0xd8>
20029dc4:	81400c17 	ldw	r5,48(r16)
20029dc8:	28000526 	beq	r5,zero,20029de0 <_fclose_r+0xa0>
20029dcc:	80801004 	addi	r2,r16,64
20029dd0:	28800226 	beq	r5,r2,20029ddc <_fclose_r+0x9c>
20029dd4:	8809883a 	mov	r4,r17
20029dd8:	00253200 	call	20025320 <_free_r>
20029ddc:	80000c15 	stw	zero,48(r16)
20029de0:	81401117 	ldw	r5,68(r16)
20029de4:	28000326 	beq	r5,zero,20029df4 <_fclose_r+0xb4>
20029de8:	8809883a 	mov	r4,r17
20029dec:	00253200 	call	20025320 <_free_r>
20029df0:	80001115 	stw	zero,68(r16)
20029df4:	00251bc0 	call	200251bc <__sfp_lock_acquire>
20029df8:	8000030d 	sth	zero,12(r16)
20029dfc:	00251c00 	call	200251c0 <__sfp_lock_release>
20029e00:	9005883a 	mov	r2,r18
20029e04:	003fdc06 	br	20029d78 <__alt_data_end+0xfffea978>
20029e08:	00251ac0 	call	200251ac <__sinit>
20029e0c:	003fd706 	br	20029d6c <__alt_data_end+0xfffea96c>
20029e10:	04bfffc4 	movi	r18,-1
20029e14:	003fe806 	br	20029db8 <__alt_data_end+0xfffea9b8>
20029e18:	81400417 	ldw	r5,16(r16)
20029e1c:	8809883a 	mov	r4,r17
20029e20:	00253200 	call	20025320 <_free_r>
20029e24:	003fe706 	br	20029dc4 <__alt_data_end+0xfffea9c4>
20029e28:	0005883a 	mov	r2,zero
20029e2c:	f800283a 	ret

20029e30 <fclose>:
20029e30:	008800f4 	movhi	r2,8195
20029e34:	1086fa04 	addi	r2,r2,7144
20029e38:	200b883a 	mov	r5,r4
20029e3c:	11000017 	ldw	r4,0(r2)
20029e40:	0029d401 	jmpi	20029d40 <_fclose_r>

20029e44 <__fputwc>:
20029e44:	defff804 	addi	sp,sp,-32
20029e48:	dcc00415 	stw	r19,16(sp)
20029e4c:	dc800315 	stw	r18,12(sp)
20029e50:	dc000115 	stw	r16,4(sp)
20029e54:	dfc00715 	stw	ra,28(sp)
20029e58:	dd400615 	stw	r21,24(sp)
20029e5c:	dd000515 	stw	r20,20(sp)
20029e60:	dc400215 	stw	r17,8(sp)
20029e64:	2027883a 	mov	r19,r4
20029e68:	2825883a 	mov	r18,r5
20029e6c:	3021883a 	mov	r16,r6
20029e70:	0025cfc0 	call	20025cfc <__locale_mb_cur_max>
20029e74:	00c00044 	movi	r3,1
20029e78:	10c03e26 	beq	r2,r3,20029f74 <__fputwc+0x130>
20029e7c:	81c01704 	addi	r7,r16,92
20029e80:	900d883a 	mov	r6,r18
20029e84:	d80b883a 	mov	r5,sp
20029e88:	9809883a 	mov	r4,r19
20029e8c:	002a1bc0 	call	2002a1bc <_wcrtomb_r>
20029e90:	1029883a 	mov	r20,r2
20029e94:	00bfffc4 	movi	r2,-1
20029e98:	a0802026 	beq	r20,r2,20029f1c <__fputwc+0xd8>
20029e9c:	d9400003 	ldbu	r5,0(sp)
20029ea0:	a0001c26 	beq	r20,zero,20029f14 <__fputwc+0xd0>
20029ea4:	0023883a 	mov	r17,zero
20029ea8:	05400284 	movi	r21,10
20029eac:	00000906 	br	20029ed4 <__fputwc+0x90>
20029eb0:	80800017 	ldw	r2,0(r16)
20029eb4:	11400005 	stb	r5,0(r2)
20029eb8:	80c00017 	ldw	r3,0(r16)
20029ebc:	18c00044 	addi	r3,r3,1
20029ec0:	80c00015 	stw	r3,0(r16)
20029ec4:	8c400044 	addi	r17,r17,1
20029ec8:	dc45883a 	add	r2,sp,r17
20029ecc:	8d00112e 	bgeu	r17,r20,20029f14 <__fputwc+0xd0>
20029ed0:	11400003 	ldbu	r5,0(r2)
20029ed4:	80c00217 	ldw	r3,8(r16)
20029ed8:	18ffffc4 	addi	r3,r3,-1
20029edc:	80c00215 	stw	r3,8(r16)
20029ee0:	183ff30e 	bge	r3,zero,20029eb0 <__alt_data_end+0xfffeaab0>
20029ee4:	80800617 	ldw	r2,24(r16)
20029ee8:	18801916 	blt	r3,r2,20029f50 <__fputwc+0x10c>
20029eec:	80800017 	ldw	r2,0(r16)
20029ef0:	11400005 	stb	r5,0(r2)
20029ef4:	80800017 	ldw	r2,0(r16)
20029ef8:	10c00003 	ldbu	r3,0(r2)
20029efc:	10800044 	addi	r2,r2,1
20029f00:	1d402326 	beq	r3,r21,20029f90 <__fputwc+0x14c>
20029f04:	80800015 	stw	r2,0(r16)
20029f08:	8c400044 	addi	r17,r17,1
20029f0c:	dc45883a 	add	r2,sp,r17
20029f10:	8d3fef36 	bltu	r17,r20,20029ed0 <__alt_data_end+0xfffeaad0>
20029f14:	9005883a 	mov	r2,r18
20029f18:	00000406 	br	20029f2c <__fputwc+0xe8>
20029f1c:	80c0030b 	ldhu	r3,12(r16)
20029f20:	a005883a 	mov	r2,r20
20029f24:	18c01014 	ori	r3,r3,64
20029f28:	80c0030d 	sth	r3,12(r16)
20029f2c:	dfc00717 	ldw	ra,28(sp)
20029f30:	dd400617 	ldw	r21,24(sp)
20029f34:	dd000517 	ldw	r20,20(sp)
20029f38:	dcc00417 	ldw	r19,16(sp)
20029f3c:	dc800317 	ldw	r18,12(sp)
20029f40:	dc400217 	ldw	r17,8(sp)
20029f44:	dc000117 	ldw	r16,4(sp)
20029f48:	dec00804 	addi	sp,sp,32
20029f4c:	f800283a 	ret
20029f50:	800d883a 	mov	r6,r16
20029f54:	29403fcc 	andi	r5,r5,255
20029f58:	9809883a 	mov	r4,r19
20029f5c:	0029a700 	call	20029a70 <__swbuf_r>
20029f60:	10bfffe0 	cmpeqi	r2,r2,-1
20029f64:	10803fcc 	andi	r2,r2,255
20029f68:	103fd626 	beq	r2,zero,20029ec4 <__alt_data_end+0xfffeaac4>
20029f6c:	00bfffc4 	movi	r2,-1
20029f70:	003fee06 	br	20029f2c <__alt_data_end+0xfffeab2c>
20029f74:	90ffffc4 	addi	r3,r18,-1
20029f78:	01003f84 	movi	r4,254
20029f7c:	20ffbf36 	bltu	r4,r3,20029e7c <__alt_data_end+0xfffeaa7c>
20029f80:	900b883a 	mov	r5,r18
20029f84:	dc800005 	stb	r18,0(sp)
20029f88:	1029883a 	mov	r20,r2
20029f8c:	003fc506 	br	20029ea4 <__alt_data_end+0xfffeaaa4>
20029f90:	800d883a 	mov	r6,r16
20029f94:	a80b883a 	mov	r5,r21
20029f98:	9809883a 	mov	r4,r19
20029f9c:	0029a700 	call	20029a70 <__swbuf_r>
20029fa0:	10bfffe0 	cmpeqi	r2,r2,-1
20029fa4:	003fef06 	br	20029f64 <__alt_data_end+0xfffeab64>

20029fa8 <_fputwc_r>:
20029fa8:	3080030b 	ldhu	r2,12(r6)
20029fac:	10c8000c 	andi	r3,r2,8192
20029fb0:	1800051e 	bne	r3,zero,20029fc8 <_fputwc_r+0x20>
20029fb4:	30c01917 	ldw	r3,100(r6)
20029fb8:	10880014 	ori	r2,r2,8192
20029fbc:	3080030d 	sth	r2,12(r6)
20029fc0:	18880014 	ori	r2,r3,8192
20029fc4:	30801915 	stw	r2,100(r6)
20029fc8:	0029e441 	jmpi	20029e44 <__fputwc>

20029fcc <fputwc>:
20029fcc:	008800f4 	movhi	r2,8195
20029fd0:	defffc04 	addi	sp,sp,-16
20029fd4:	1086fa04 	addi	r2,r2,7144
20029fd8:	dc000115 	stw	r16,4(sp)
20029fdc:	14000017 	ldw	r16,0(r2)
20029fe0:	dc400215 	stw	r17,8(sp)
20029fe4:	dfc00315 	stw	ra,12(sp)
20029fe8:	2023883a 	mov	r17,r4
20029fec:	80000226 	beq	r16,zero,20029ff8 <fputwc+0x2c>
20029ff0:	80800e17 	ldw	r2,56(r16)
20029ff4:	10001026 	beq	r2,zero,2002a038 <fputwc+0x6c>
20029ff8:	2880030b 	ldhu	r2,12(r5)
20029ffc:	10c8000c 	andi	r3,r2,8192
2002a000:	1800051e 	bne	r3,zero,2002a018 <fputwc+0x4c>
2002a004:	28c01917 	ldw	r3,100(r5)
2002a008:	10880014 	ori	r2,r2,8192
2002a00c:	2880030d 	sth	r2,12(r5)
2002a010:	18880014 	ori	r2,r3,8192
2002a014:	28801915 	stw	r2,100(r5)
2002a018:	280d883a 	mov	r6,r5
2002a01c:	8009883a 	mov	r4,r16
2002a020:	880b883a 	mov	r5,r17
2002a024:	dfc00317 	ldw	ra,12(sp)
2002a028:	dc400217 	ldw	r17,8(sp)
2002a02c:	dc000117 	ldw	r16,4(sp)
2002a030:	dec00404 	addi	sp,sp,16
2002a034:	0029e441 	jmpi	20029e44 <__fputwc>
2002a038:	8009883a 	mov	r4,r16
2002a03c:	d9400015 	stw	r5,0(sp)
2002a040:	00251ac0 	call	200251ac <__sinit>
2002a044:	d9400017 	ldw	r5,0(sp)
2002a048:	003feb06 	br	20029ff8 <__alt_data_end+0xfffeabf8>

2002a04c <_fstat_r>:
2002a04c:	defffd04 	addi	sp,sp,-12
2002a050:	2805883a 	mov	r2,r5
2002a054:	dc000015 	stw	r16,0(sp)
2002a058:	040800f4 	movhi	r16,8195
2002a05c:	dc400115 	stw	r17,4(sp)
2002a060:	840dca04 	addi	r16,r16,14120
2002a064:	2023883a 	mov	r17,r4
2002a068:	300b883a 	mov	r5,r6
2002a06c:	1009883a 	mov	r4,r2
2002a070:	dfc00215 	stw	ra,8(sp)
2002a074:	80000015 	stw	zero,0(r16)
2002a078:	002d6d80 	call	2002d6d8 <fstat>
2002a07c:	00ffffc4 	movi	r3,-1
2002a080:	10c00526 	beq	r2,r3,2002a098 <_fstat_r+0x4c>
2002a084:	dfc00217 	ldw	ra,8(sp)
2002a088:	dc400117 	ldw	r17,4(sp)
2002a08c:	dc000017 	ldw	r16,0(sp)
2002a090:	dec00304 	addi	sp,sp,12
2002a094:	f800283a 	ret
2002a098:	80c00017 	ldw	r3,0(r16)
2002a09c:	183ff926 	beq	r3,zero,2002a084 <__alt_data_end+0xfffeac84>
2002a0a0:	88c00015 	stw	r3,0(r17)
2002a0a4:	003ff706 	br	2002a084 <__alt_data_end+0xfffeac84>

2002a0a8 <_isatty_r>:
2002a0a8:	defffd04 	addi	sp,sp,-12
2002a0ac:	dc000015 	stw	r16,0(sp)
2002a0b0:	040800f4 	movhi	r16,8195
2002a0b4:	dc400115 	stw	r17,4(sp)
2002a0b8:	840dca04 	addi	r16,r16,14120
2002a0bc:	2023883a 	mov	r17,r4
2002a0c0:	2809883a 	mov	r4,r5
2002a0c4:	dfc00215 	stw	ra,8(sp)
2002a0c8:	80000015 	stw	zero,0(r16)
2002a0cc:	002d7c40 	call	2002d7c4 <isatty>
2002a0d0:	00ffffc4 	movi	r3,-1
2002a0d4:	10c00526 	beq	r2,r3,2002a0ec <_isatty_r+0x44>
2002a0d8:	dfc00217 	ldw	ra,8(sp)
2002a0dc:	dc400117 	ldw	r17,4(sp)
2002a0e0:	dc000017 	ldw	r16,0(sp)
2002a0e4:	dec00304 	addi	sp,sp,12
2002a0e8:	f800283a 	ret
2002a0ec:	80c00017 	ldw	r3,0(r16)
2002a0f0:	183ff926 	beq	r3,zero,2002a0d8 <__alt_data_end+0xfffeacd8>
2002a0f4:	88c00015 	stw	r3,0(r17)
2002a0f8:	003ff706 	br	2002a0d8 <__alt_data_end+0xfffeacd8>

2002a0fc <_lseek_r>:
2002a0fc:	defffd04 	addi	sp,sp,-12
2002a100:	2805883a 	mov	r2,r5
2002a104:	dc000015 	stw	r16,0(sp)
2002a108:	040800f4 	movhi	r16,8195
2002a10c:	dc400115 	stw	r17,4(sp)
2002a110:	300b883a 	mov	r5,r6
2002a114:	840dca04 	addi	r16,r16,14120
2002a118:	2023883a 	mov	r17,r4
2002a11c:	380d883a 	mov	r6,r7
2002a120:	1009883a 	mov	r4,r2
2002a124:	dfc00215 	stw	ra,8(sp)
2002a128:	80000015 	stw	zero,0(r16)
2002a12c:	002d9900 	call	2002d990 <lseek>
2002a130:	00ffffc4 	movi	r3,-1
2002a134:	10c00526 	beq	r2,r3,2002a14c <_lseek_r+0x50>
2002a138:	dfc00217 	ldw	ra,8(sp)
2002a13c:	dc400117 	ldw	r17,4(sp)
2002a140:	dc000017 	ldw	r16,0(sp)
2002a144:	dec00304 	addi	sp,sp,12
2002a148:	f800283a 	ret
2002a14c:	80c00017 	ldw	r3,0(r16)
2002a150:	183ff926 	beq	r3,zero,2002a138 <__alt_data_end+0xfffead38>
2002a154:	88c00015 	stw	r3,0(r17)
2002a158:	003ff706 	br	2002a138 <__alt_data_end+0xfffead38>

2002a15c <_read_r>:
2002a15c:	defffd04 	addi	sp,sp,-12
2002a160:	2805883a 	mov	r2,r5
2002a164:	dc000015 	stw	r16,0(sp)
2002a168:	040800f4 	movhi	r16,8195
2002a16c:	dc400115 	stw	r17,4(sp)
2002a170:	300b883a 	mov	r5,r6
2002a174:	840dca04 	addi	r16,r16,14120
2002a178:	2023883a 	mov	r17,r4
2002a17c:	380d883a 	mov	r6,r7
2002a180:	1009883a 	mov	r4,r2
2002a184:	dfc00215 	stw	ra,8(sp)
2002a188:	80000015 	stw	zero,0(r16)
2002a18c:	002db640 	call	2002db64 <read>
2002a190:	00ffffc4 	movi	r3,-1
2002a194:	10c00526 	beq	r2,r3,2002a1ac <_read_r+0x50>
2002a198:	dfc00217 	ldw	ra,8(sp)
2002a19c:	dc400117 	ldw	r17,4(sp)
2002a1a0:	dc000017 	ldw	r16,0(sp)
2002a1a4:	dec00304 	addi	sp,sp,12
2002a1a8:	f800283a 	ret
2002a1ac:	80c00017 	ldw	r3,0(r16)
2002a1b0:	183ff926 	beq	r3,zero,2002a198 <__alt_data_end+0xfffead98>
2002a1b4:	88c00015 	stw	r3,0(r17)
2002a1b8:	003ff706 	br	2002a198 <__alt_data_end+0xfffead98>

2002a1bc <_wcrtomb_r>:
2002a1bc:	defff604 	addi	sp,sp,-40
2002a1c0:	008800f4 	movhi	r2,8195
2002a1c4:	dc800815 	stw	r18,32(sp)
2002a1c8:	dc400715 	stw	r17,28(sp)
2002a1cc:	dc000615 	stw	r16,24(sp)
2002a1d0:	1086fe04 	addi	r2,r2,7160
2002a1d4:	dfc00915 	stw	ra,36(sp)
2002a1d8:	2021883a 	mov	r16,r4
2002a1dc:	3823883a 	mov	r17,r7
2002a1e0:	14800017 	ldw	r18,0(r2)
2002a1e4:	28001426 	beq	r5,zero,2002a238 <_wcrtomb_r+0x7c>
2002a1e8:	d9400415 	stw	r5,16(sp)
2002a1ec:	d9800515 	stw	r6,20(sp)
2002a1f0:	0025cf00 	call	20025cf0 <__locale_charset>
2002a1f4:	d9800517 	ldw	r6,20(sp)
2002a1f8:	d9400417 	ldw	r5,16(sp)
2002a1fc:	100f883a 	mov	r7,r2
2002a200:	dc400015 	stw	r17,0(sp)
2002a204:	8009883a 	mov	r4,r16
2002a208:	903ee83a 	callr	r18
2002a20c:	00ffffc4 	movi	r3,-1
2002a210:	10c0031e 	bne	r2,r3,2002a220 <_wcrtomb_r+0x64>
2002a214:	88000015 	stw	zero,0(r17)
2002a218:	00c02284 	movi	r3,138
2002a21c:	80c00015 	stw	r3,0(r16)
2002a220:	dfc00917 	ldw	ra,36(sp)
2002a224:	dc800817 	ldw	r18,32(sp)
2002a228:	dc400717 	ldw	r17,28(sp)
2002a22c:	dc000617 	ldw	r16,24(sp)
2002a230:	dec00a04 	addi	sp,sp,40
2002a234:	f800283a 	ret
2002a238:	0025cf00 	call	20025cf0 <__locale_charset>
2002a23c:	100f883a 	mov	r7,r2
2002a240:	dc400015 	stw	r17,0(sp)
2002a244:	000d883a 	mov	r6,zero
2002a248:	d9400104 	addi	r5,sp,4
2002a24c:	8009883a 	mov	r4,r16
2002a250:	903ee83a 	callr	r18
2002a254:	003fed06 	br	2002a20c <__alt_data_end+0xfffeae0c>

2002a258 <wcrtomb>:
2002a258:	defff604 	addi	sp,sp,-40
2002a25c:	008800f4 	movhi	r2,8195
2002a260:	dc800615 	stw	r18,24(sp)
2002a264:	dc400515 	stw	r17,20(sp)
2002a268:	1086fa04 	addi	r2,r2,7144
2002a26c:	dfc00915 	stw	ra,36(sp)
2002a270:	dd000815 	stw	r20,32(sp)
2002a274:	dcc00715 	stw	r19,28(sp)
2002a278:	dc000415 	stw	r16,16(sp)
2002a27c:	3025883a 	mov	r18,r6
2002a280:	14400017 	ldw	r17,0(r2)
2002a284:	20001926 	beq	r4,zero,2002a2ec <wcrtomb+0x94>
2002a288:	008800f4 	movhi	r2,8195
2002a28c:	1086fe04 	addi	r2,r2,7160
2002a290:	15000017 	ldw	r20,0(r2)
2002a294:	2021883a 	mov	r16,r4
2002a298:	2827883a 	mov	r19,r5
2002a29c:	0025cf00 	call	20025cf0 <__locale_charset>
2002a2a0:	100f883a 	mov	r7,r2
2002a2a4:	dc800015 	stw	r18,0(sp)
2002a2a8:	980d883a 	mov	r6,r19
2002a2ac:	800b883a 	mov	r5,r16
2002a2b0:	8809883a 	mov	r4,r17
2002a2b4:	a03ee83a 	callr	r20
2002a2b8:	00ffffc4 	movi	r3,-1
2002a2bc:	10c0031e 	bne	r2,r3,2002a2cc <wcrtomb+0x74>
2002a2c0:	90000015 	stw	zero,0(r18)
2002a2c4:	00c02284 	movi	r3,138
2002a2c8:	88c00015 	stw	r3,0(r17)
2002a2cc:	dfc00917 	ldw	ra,36(sp)
2002a2d0:	dd000817 	ldw	r20,32(sp)
2002a2d4:	dcc00717 	ldw	r19,28(sp)
2002a2d8:	dc800617 	ldw	r18,24(sp)
2002a2dc:	dc400517 	ldw	r17,20(sp)
2002a2e0:	dc000417 	ldw	r16,16(sp)
2002a2e4:	dec00a04 	addi	sp,sp,40
2002a2e8:	f800283a 	ret
2002a2ec:	008800f4 	movhi	r2,8195
2002a2f0:	1086fe04 	addi	r2,r2,7160
2002a2f4:	14000017 	ldw	r16,0(r2)
2002a2f8:	0025cf00 	call	20025cf0 <__locale_charset>
2002a2fc:	100f883a 	mov	r7,r2
2002a300:	dc800015 	stw	r18,0(sp)
2002a304:	000d883a 	mov	r6,zero
2002a308:	d9400104 	addi	r5,sp,4
2002a30c:	8809883a 	mov	r4,r17
2002a310:	803ee83a 	callr	r16
2002a314:	003fe806 	br	2002a2b8 <__alt_data_end+0xfffeaeb8>

2002a318 <__ascii_wctomb>:
2002a318:	28000526 	beq	r5,zero,2002a330 <__ascii_wctomb+0x18>
2002a31c:	00803fc4 	movi	r2,255
2002a320:	11800536 	bltu	r2,r6,2002a338 <__ascii_wctomb+0x20>
2002a324:	29800005 	stb	r6,0(r5)
2002a328:	00800044 	movi	r2,1
2002a32c:	f800283a 	ret
2002a330:	0005883a 	mov	r2,zero
2002a334:	f800283a 	ret
2002a338:	00802284 	movi	r2,138
2002a33c:	20800015 	stw	r2,0(r4)
2002a340:	00bfffc4 	movi	r2,-1
2002a344:	f800283a 	ret

2002a348 <_wctomb_r>:
2002a348:	008800f4 	movhi	r2,8195
2002a34c:	defff904 	addi	sp,sp,-28
2002a350:	1086fe04 	addi	r2,r2,7160
2002a354:	dfc00615 	stw	ra,24(sp)
2002a358:	dc400515 	stw	r17,20(sp)
2002a35c:	dc000415 	stw	r16,16(sp)
2002a360:	3823883a 	mov	r17,r7
2002a364:	14000017 	ldw	r16,0(r2)
2002a368:	d9000115 	stw	r4,4(sp)
2002a36c:	d9400215 	stw	r5,8(sp)
2002a370:	d9800315 	stw	r6,12(sp)
2002a374:	0025cf00 	call	20025cf0 <__locale_charset>
2002a378:	d9800317 	ldw	r6,12(sp)
2002a37c:	d9400217 	ldw	r5,8(sp)
2002a380:	d9000117 	ldw	r4,4(sp)
2002a384:	100f883a 	mov	r7,r2
2002a388:	dc400015 	stw	r17,0(sp)
2002a38c:	803ee83a 	callr	r16
2002a390:	dfc00617 	ldw	ra,24(sp)
2002a394:	dc400517 	ldw	r17,20(sp)
2002a398:	dc000417 	ldw	r16,16(sp)
2002a39c:	dec00704 	addi	sp,sp,28
2002a3a0:	f800283a 	ret

2002a3a4 <__muldi3>:
2002a3a4:	223fffcc 	andi	r8,r4,65535
2002a3a8:	2006d43a 	srli	r3,r4,16
2002a3ac:	32bfffcc 	andi	r10,r6,65535
2002a3b0:	3012d43a 	srli	r9,r6,16
2002a3b4:	4297383a 	mul	r11,r8,r10
2002a3b8:	1a95383a 	mul	r10,r3,r10
2002a3bc:	4251383a 	mul	r8,r8,r9
2002a3c0:	5804d43a 	srli	r2,r11,16
2002a3c4:	4291883a 	add	r8,r8,r10
2002a3c8:	1205883a 	add	r2,r2,r8
2002a3cc:	1a51383a 	mul	r8,r3,r9
2002a3d0:	1280022e 	bgeu	r2,r10,2002a3dc <__muldi3+0x38>
2002a3d4:	00c00074 	movhi	r3,1
2002a3d8:	40d1883a 	add	r8,r8,r3
2002a3dc:	1006d43a 	srli	r3,r2,16
2002a3e0:	21cf383a 	mul	r7,r4,r7
2002a3e4:	314b383a 	mul	r5,r6,r5
2002a3e8:	1004943a 	slli	r2,r2,16
2002a3ec:	1a11883a 	add	r8,r3,r8
2002a3f0:	5affffcc 	andi	r11,r11,65535
2002a3f4:	3947883a 	add	r3,r7,r5
2002a3f8:	12c5883a 	add	r2,r2,r11
2002a3fc:	1a07883a 	add	r3,r3,r8
2002a400:	f800283a 	ret

2002a404 <__udivdi3>:
2002a404:	defff504 	addi	sp,sp,-44
2002a408:	dcc00415 	stw	r19,16(sp)
2002a40c:	dc000115 	stw	r16,4(sp)
2002a410:	dfc00a15 	stw	ra,40(sp)
2002a414:	df000915 	stw	fp,36(sp)
2002a418:	ddc00815 	stw	r23,32(sp)
2002a41c:	dd800715 	stw	r22,28(sp)
2002a420:	dd400615 	stw	r21,24(sp)
2002a424:	dd000515 	stw	r20,20(sp)
2002a428:	dc800315 	stw	r18,12(sp)
2002a42c:	dc400215 	stw	r17,8(sp)
2002a430:	2027883a 	mov	r19,r4
2002a434:	2821883a 	mov	r16,r5
2002a438:	3800411e 	bne	r7,zero,2002a540 <__udivdi3+0x13c>
2002a43c:	3023883a 	mov	r17,r6
2002a440:	2025883a 	mov	r18,r4
2002a444:	2980522e 	bgeu	r5,r6,2002a590 <__udivdi3+0x18c>
2002a448:	00bfffd4 	movui	r2,65535
2002a44c:	282d883a 	mov	r22,r5
2002a450:	1180a836 	bltu	r2,r6,2002a6f4 <__udivdi3+0x2f0>
2002a454:	00803fc4 	movi	r2,255
2002a458:	1185803a 	cmpltu	r2,r2,r6
2002a45c:	100490fa 	slli	r2,r2,3
2002a460:	3086d83a 	srl	r3,r6,r2
2002a464:	010800f4 	movhi	r4,8195
2002a468:	21000304 	addi	r4,r4,12
2002a46c:	20c7883a 	add	r3,r4,r3
2002a470:	18c00003 	ldbu	r3,0(r3)
2002a474:	1885883a 	add	r2,r3,r2
2002a478:	00c00804 	movi	r3,32
2002a47c:	1887c83a 	sub	r3,r3,r2
2002a480:	18000526 	beq	r3,zero,2002a498 <__udivdi3+0x94>
2002a484:	80e0983a 	sll	r16,r16,r3
2002a488:	9884d83a 	srl	r2,r19,r2
2002a48c:	30e2983a 	sll	r17,r6,r3
2002a490:	98e4983a 	sll	r18,r19,r3
2002a494:	142cb03a 	or	r22,r2,r16
2002a498:	882ad43a 	srli	r21,r17,16
2002a49c:	b009883a 	mov	r4,r22
2002a4a0:	8d3fffcc 	andi	r20,r17,65535
2002a4a4:	a80b883a 	mov	r5,r21
2002a4a8:	0020af40 	call	20020af4 <__umodsi3>
2002a4ac:	b009883a 	mov	r4,r22
2002a4b0:	a80b883a 	mov	r5,r21
2002a4b4:	1027883a 	mov	r19,r2
2002a4b8:	0020a900 	call	20020a90 <__udivsi3>
2002a4bc:	102d883a 	mov	r22,r2
2002a4c0:	9826943a 	slli	r19,r19,16
2002a4c4:	9004d43a 	srli	r2,r18,16
2002a4c8:	a5a1383a 	mul	r16,r20,r22
2002a4cc:	14c4b03a 	or	r2,r2,r19
2002a4d0:	1400052e 	bgeu	r2,r16,2002a4e8 <__udivdi3+0xe4>
2002a4d4:	1445883a 	add	r2,r2,r17
2002a4d8:	b0ffffc4 	addi	r3,r22,-1
2002a4dc:	14400136 	bltu	r2,r17,2002a4e4 <__udivdi3+0xe0>
2002a4e0:	14012336 	bltu	r2,r16,2002a970 <__udivdi3+0x56c>
2002a4e4:	182d883a 	mov	r22,r3
2002a4e8:	1421c83a 	sub	r16,r2,r16
2002a4ec:	a80b883a 	mov	r5,r21
2002a4f0:	8009883a 	mov	r4,r16
2002a4f4:	0020af40 	call	20020af4 <__umodsi3>
2002a4f8:	1027883a 	mov	r19,r2
2002a4fc:	a80b883a 	mov	r5,r21
2002a500:	8009883a 	mov	r4,r16
2002a504:	0020a900 	call	20020a90 <__udivsi3>
2002a508:	9826943a 	slli	r19,r19,16
2002a50c:	a0a9383a 	mul	r20,r20,r2
2002a510:	94bfffcc 	andi	r18,r18,65535
2002a514:	94e4b03a 	or	r18,r18,r19
2002a518:	9500052e 	bgeu	r18,r20,2002a530 <__udivdi3+0x12c>
2002a51c:	8ca5883a 	add	r18,r17,r18
2002a520:	10ffffc4 	addi	r3,r2,-1
2002a524:	9440f136 	bltu	r18,r17,2002a8ec <__udivdi3+0x4e8>
2002a528:	9500f02e 	bgeu	r18,r20,2002a8ec <__udivdi3+0x4e8>
2002a52c:	10bfff84 	addi	r2,r2,-2
2002a530:	b00c943a 	slli	r6,r22,16
2002a534:	0007883a 	mov	r3,zero
2002a538:	3084b03a 	or	r2,r6,r2
2002a53c:	00005906 	br	2002a6a4 <__udivdi3+0x2a0>
2002a540:	29c05636 	bltu	r5,r7,2002a69c <__udivdi3+0x298>
2002a544:	00bfffd4 	movui	r2,65535
2002a548:	11c0622e 	bgeu	r2,r7,2002a6d4 <__udivdi3+0x2d0>
2002a54c:	00804034 	movhi	r2,256
2002a550:	10bfffc4 	addi	r2,r2,-1
2002a554:	11c0ee36 	bltu	r2,r7,2002a910 <__udivdi3+0x50c>
2002a558:	00800404 	movi	r2,16
2002a55c:	3886d83a 	srl	r3,r7,r2
2002a560:	010800f4 	movhi	r4,8195
2002a564:	21000304 	addi	r4,r4,12
2002a568:	20c7883a 	add	r3,r4,r3
2002a56c:	18c00003 	ldbu	r3,0(r3)
2002a570:	05400804 	movi	r21,32
2002a574:	1885883a 	add	r2,r3,r2
2002a578:	a8abc83a 	sub	r21,r21,r2
2002a57c:	a800621e 	bne	r21,zero,2002a708 <__udivdi3+0x304>
2002a580:	3c00e936 	bltu	r7,r16,2002a928 <__udivdi3+0x524>
2002a584:	9985403a 	cmpgeu	r2,r19,r6
2002a588:	0007883a 	mov	r3,zero
2002a58c:	00004506 	br	2002a6a4 <__udivdi3+0x2a0>
2002a590:	3000041e 	bne	r6,zero,2002a5a4 <__udivdi3+0x1a0>
2002a594:	000b883a 	mov	r5,zero
2002a598:	01000044 	movi	r4,1
2002a59c:	0020a900 	call	20020a90 <__udivsi3>
2002a5a0:	1023883a 	mov	r17,r2
2002a5a4:	00bfffd4 	movui	r2,65535
2002a5a8:	14404e2e 	bgeu	r2,r17,2002a6e4 <__udivdi3+0x2e0>
2002a5ac:	00804034 	movhi	r2,256
2002a5b0:	10bfffc4 	addi	r2,r2,-1
2002a5b4:	1440d836 	bltu	r2,r17,2002a918 <__udivdi3+0x514>
2002a5b8:	00800404 	movi	r2,16
2002a5bc:	8886d83a 	srl	r3,r17,r2
2002a5c0:	010800f4 	movhi	r4,8195
2002a5c4:	21000304 	addi	r4,r4,12
2002a5c8:	20c7883a 	add	r3,r4,r3
2002a5cc:	18c00003 	ldbu	r3,0(r3)
2002a5d0:	1885883a 	add	r2,r3,r2
2002a5d4:	00c00804 	movi	r3,32
2002a5d8:	1887c83a 	sub	r3,r3,r2
2002a5dc:	18008f1e 	bne	r3,zero,2002a81c <__udivdi3+0x418>
2002a5e0:	882ad43a 	srli	r21,r17,16
2002a5e4:	8461c83a 	sub	r16,r16,r17
2002a5e8:	8d3fffcc 	andi	r20,r17,65535
2002a5ec:	00c00044 	movi	r3,1
2002a5f0:	8009883a 	mov	r4,r16
2002a5f4:	a80b883a 	mov	r5,r21
2002a5f8:	d8c00015 	stw	r3,0(sp)
2002a5fc:	0020af40 	call	20020af4 <__umodsi3>
2002a600:	8009883a 	mov	r4,r16
2002a604:	a80b883a 	mov	r5,r21
2002a608:	1027883a 	mov	r19,r2
2002a60c:	0020a900 	call	20020a90 <__udivsi3>
2002a610:	9826943a 	slli	r19,r19,16
2002a614:	9008d43a 	srli	r4,r18,16
2002a618:	1521383a 	mul	r16,r2,r20
2002a61c:	102d883a 	mov	r22,r2
2002a620:	24c8b03a 	or	r4,r4,r19
2002a624:	d8c00017 	ldw	r3,0(sp)
2002a628:	2400052e 	bgeu	r4,r16,2002a640 <__udivdi3+0x23c>
2002a62c:	2449883a 	add	r4,r4,r17
2002a630:	b0bfffc4 	addi	r2,r22,-1
2002a634:	24400136 	bltu	r4,r17,2002a63c <__udivdi3+0x238>
2002a638:	2400ca36 	bltu	r4,r16,2002a964 <__udivdi3+0x560>
2002a63c:	102d883a 	mov	r22,r2
2002a640:	2421c83a 	sub	r16,r4,r16
2002a644:	a80b883a 	mov	r5,r21
2002a648:	8009883a 	mov	r4,r16
2002a64c:	d8c00015 	stw	r3,0(sp)
2002a650:	0020af40 	call	20020af4 <__umodsi3>
2002a654:	1027883a 	mov	r19,r2
2002a658:	a80b883a 	mov	r5,r21
2002a65c:	8009883a 	mov	r4,r16
2002a660:	0020a900 	call	20020a90 <__udivsi3>
2002a664:	9826943a 	slli	r19,r19,16
2002a668:	1529383a 	mul	r20,r2,r20
2002a66c:	94bfffcc 	andi	r18,r18,65535
2002a670:	94e4b03a 	or	r18,r18,r19
2002a674:	d8c00017 	ldw	r3,0(sp)
2002a678:	9500052e 	bgeu	r18,r20,2002a690 <__udivdi3+0x28c>
2002a67c:	8ca5883a 	add	r18,r17,r18
2002a680:	113fffc4 	addi	r4,r2,-1
2002a684:	94409736 	bltu	r18,r17,2002a8e4 <__udivdi3+0x4e0>
2002a688:	9500962e 	bgeu	r18,r20,2002a8e4 <__udivdi3+0x4e0>
2002a68c:	10bfff84 	addi	r2,r2,-2
2002a690:	b00c943a 	slli	r6,r22,16
2002a694:	3084b03a 	or	r2,r6,r2
2002a698:	00000206 	br	2002a6a4 <__udivdi3+0x2a0>
2002a69c:	0007883a 	mov	r3,zero
2002a6a0:	0005883a 	mov	r2,zero
2002a6a4:	dfc00a17 	ldw	ra,40(sp)
2002a6a8:	df000917 	ldw	fp,36(sp)
2002a6ac:	ddc00817 	ldw	r23,32(sp)
2002a6b0:	dd800717 	ldw	r22,28(sp)
2002a6b4:	dd400617 	ldw	r21,24(sp)
2002a6b8:	dd000517 	ldw	r20,20(sp)
2002a6bc:	dcc00417 	ldw	r19,16(sp)
2002a6c0:	dc800317 	ldw	r18,12(sp)
2002a6c4:	dc400217 	ldw	r17,8(sp)
2002a6c8:	dc000117 	ldw	r16,4(sp)
2002a6cc:	dec00b04 	addi	sp,sp,44
2002a6d0:	f800283a 	ret
2002a6d4:	00803fc4 	movi	r2,255
2002a6d8:	11c5803a 	cmpltu	r2,r2,r7
2002a6dc:	100490fa 	slli	r2,r2,3
2002a6e0:	003f9e06 	br	2002a55c <__alt_data_end+0xfffeb15c>
2002a6e4:	00803fc4 	movi	r2,255
2002a6e8:	1445803a 	cmpltu	r2,r2,r17
2002a6ec:	100490fa 	slli	r2,r2,3
2002a6f0:	003fb206 	br	2002a5bc <__alt_data_end+0xfffeb1bc>
2002a6f4:	00804034 	movhi	r2,256
2002a6f8:	10bfffc4 	addi	r2,r2,-1
2002a6fc:	11808836 	bltu	r2,r6,2002a920 <__udivdi3+0x51c>
2002a700:	00800404 	movi	r2,16
2002a704:	003f5606 	br	2002a460 <__alt_data_end+0xfffeb060>
2002a708:	30aed83a 	srl	r23,r6,r2
2002a70c:	3d4e983a 	sll	r7,r7,r21
2002a710:	80acd83a 	srl	r22,r16,r2
2002a714:	9884d83a 	srl	r2,r19,r2
2002a718:	3deeb03a 	or	r23,r7,r23
2002a71c:	b824d43a 	srli	r18,r23,16
2002a720:	8560983a 	sll	r16,r16,r21
2002a724:	b009883a 	mov	r4,r22
2002a728:	900b883a 	mov	r5,r18
2002a72c:	3568983a 	sll	r20,r6,r21
2002a730:	1420b03a 	or	r16,r2,r16
2002a734:	0020af40 	call	20020af4 <__umodsi3>
2002a738:	b009883a 	mov	r4,r22
2002a73c:	900b883a 	mov	r5,r18
2002a740:	1023883a 	mov	r17,r2
2002a744:	0020a900 	call	20020a90 <__udivsi3>
2002a748:	8808943a 	slli	r4,r17,16
2002a74c:	bf3fffcc 	andi	fp,r23,65535
2002a750:	8006d43a 	srli	r3,r16,16
2002a754:	e0a3383a 	mul	r17,fp,r2
2002a758:	100d883a 	mov	r6,r2
2002a75c:	1906b03a 	or	r3,r3,r4
2002a760:	1c40042e 	bgeu	r3,r17,2002a774 <__udivdi3+0x370>
2002a764:	1dc7883a 	add	r3,r3,r23
2002a768:	10bfffc4 	addi	r2,r2,-1
2002a76c:	1dc0752e 	bgeu	r3,r23,2002a944 <__udivdi3+0x540>
2002a770:	100d883a 	mov	r6,r2
2002a774:	1c63c83a 	sub	r17,r3,r17
2002a778:	900b883a 	mov	r5,r18
2002a77c:	8809883a 	mov	r4,r17
2002a780:	d9800015 	stw	r6,0(sp)
2002a784:	0020af40 	call	20020af4 <__umodsi3>
2002a788:	102d883a 	mov	r22,r2
2002a78c:	8809883a 	mov	r4,r17
2002a790:	900b883a 	mov	r5,r18
2002a794:	0020a900 	call	20020a90 <__udivsi3>
2002a798:	b02c943a 	slli	r22,r22,16
2002a79c:	e089383a 	mul	r4,fp,r2
2002a7a0:	843fffcc 	andi	r16,r16,65535
2002a7a4:	85a0b03a 	or	r16,r16,r22
2002a7a8:	d9800017 	ldw	r6,0(sp)
2002a7ac:	8100042e 	bgeu	r16,r4,2002a7c0 <__udivdi3+0x3bc>
2002a7b0:	85e1883a 	add	r16,r16,r23
2002a7b4:	10ffffc4 	addi	r3,r2,-1
2002a7b8:	85c05e2e 	bgeu	r16,r23,2002a934 <__udivdi3+0x530>
2002a7bc:	1805883a 	mov	r2,r3
2002a7c0:	300c943a 	slli	r6,r6,16
2002a7c4:	a17fffcc 	andi	r5,r20,65535
2002a7c8:	a028d43a 	srli	r20,r20,16
2002a7cc:	3084b03a 	or	r2,r6,r2
2002a7d0:	10ffffcc 	andi	r3,r2,65535
2002a7d4:	100cd43a 	srli	r6,r2,16
2002a7d8:	194f383a 	mul	r7,r3,r5
2002a7dc:	1d07383a 	mul	r3,r3,r20
2002a7e0:	314b383a 	mul	r5,r6,r5
2002a7e4:	3810d43a 	srli	r8,r7,16
2002a7e8:	8121c83a 	sub	r16,r16,r4
2002a7ec:	1947883a 	add	r3,r3,r5
2002a7f0:	40c7883a 	add	r3,r8,r3
2002a7f4:	350d383a 	mul	r6,r6,r20
2002a7f8:	1940022e 	bgeu	r3,r5,2002a804 <__udivdi3+0x400>
2002a7fc:	01000074 	movhi	r4,1
2002a800:	310d883a 	add	r6,r6,r4
2002a804:	1828d43a 	srli	r20,r3,16
2002a808:	a18d883a 	add	r6,r20,r6
2002a80c:	81803e36 	bltu	r16,r6,2002a908 <__udivdi3+0x504>
2002a810:	81803826 	beq	r16,r6,2002a8f4 <__udivdi3+0x4f0>
2002a814:	0007883a 	mov	r3,zero
2002a818:	003fa206 	br	2002a6a4 <__alt_data_end+0xfffeb2a4>
2002a81c:	88e2983a 	sll	r17,r17,r3
2002a820:	80a8d83a 	srl	r20,r16,r2
2002a824:	80e0983a 	sll	r16,r16,r3
2002a828:	882ad43a 	srli	r21,r17,16
2002a82c:	9884d83a 	srl	r2,r19,r2
2002a830:	a009883a 	mov	r4,r20
2002a834:	a80b883a 	mov	r5,r21
2002a838:	142eb03a 	or	r23,r2,r16
2002a83c:	98e4983a 	sll	r18,r19,r3
2002a840:	0020af40 	call	20020af4 <__umodsi3>
2002a844:	a009883a 	mov	r4,r20
2002a848:	a80b883a 	mov	r5,r21
2002a84c:	1021883a 	mov	r16,r2
2002a850:	0020a900 	call	20020a90 <__udivsi3>
2002a854:	1039883a 	mov	fp,r2
2002a858:	8d3fffcc 	andi	r20,r17,65535
2002a85c:	8020943a 	slli	r16,r16,16
2002a860:	b804d43a 	srli	r2,r23,16
2002a864:	a72d383a 	mul	r22,r20,fp
2002a868:	1404b03a 	or	r2,r2,r16
2002a86c:	1580062e 	bgeu	r2,r22,2002a888 <__udivdi3+0x484>
2002a870:	1445883a 	add	r2,r2,r17
2002a874:	e0ffffc4 	addi	r3,fp,-1
2002a878:	14403836 	bltu	r2,r17,2002a95c <__udivdi3+0x558>
2002a87c:	1580372e 	bgeu	r2,r22,2002a95c <__udivdi3+0x558>
2002a880:	e73fff84 	addi	fp,fp,-2
2002a884:	1445883a 	add	r2,r2,r17
2002a888:	15adc83a 	sub	r22,r2,r22
2002a88c:	a80b883a 	mov	r5,r21
2002a890:	b009883a 	mov	r4,r22
2002a894:	0020af40 	call	20020af4 <__umodsi3>
2002a898:	1027883a 	mov	r19,r2
2002a89c:	b009883a 	mov	r4,r22
2002a8a0:	a80b883a 	mov	r5,r21
2002a8a4:	0020a900 	call	20020a90 <__udivsi3>
2002a8a8:	9826943a 	slli	r19,r19,16
2002a8ac:	a0a1383a 	mul	r16,r20,r2
2002a8b0:	b93fffcc 	andi	r4,r23,65535
2002a8b4:	24c8b03a 	or	r4,r4,r19
2002a8b8:	2400062e 	bgeu	r4,r16,2002a8d4 <__udivdi3+0x4d0>
2002a8bc:	2449883a 	add	r4,r4,r17
2002a8c0:	10ffffc4 	addi	r3,r2,-1
2002a8c4:	24402336 	bltu	r4,r17,2002a954 <__udivdi3+0x550>
2002a8c8:	2400222e 	bgeu	r4,r16,2002a954 <__udivdi3+0x550>
2002a8cc:	10bfff84 	addi	r2,r2,-2
2002a8d0:	2449883a 	add	r4,r4,r17
2002a8d4:	e038943a 	slli	fp,fp,16
2002a8d8:	2421c83a 	sub	r16,r4,r16
2002a8dc:	e086b03a 	or	r3,fp,r2
2002a8e0:	003f4306 	br	2002a5f0 <__alt_data_end+0xfffeb1f0>
2002a8e4:	2005883a 	mov	r2,r4
2002a8e8:	003f6906 	br	2002a690 <__alt_data_end+0xfffeb290>
2002a8ec:	1805883a 	mov	r2,r3
2002a8f0:	003f0f06 	br	2002a530 <__alt_data_end+0xfffeb130>
2002a8f4:	1806943a 	slli	r3,r3,16
2002a8f8:	9d66983a 	sll	r19,r19,r21
2002a8fc:	39ffffcc 	andi	r7,r7,65535
2002a900:	19c7883a 	add	r3,r3,r7
2002a904:	98ffc32e 	bgeu	r19,r3,2002a814 <__alt_data_end+0xfffeb414>
2002a908:	10bfffc4 	addi	r2,r2,-1
2002a90c:	003fc106 	br	2002a814 <__alt_data_end+0xfffeb414>
2002a910:	00800604 	movi	r2,24
2002a914:	003f1106 	br	2002a55c <__alt_data_end+0xfffeb15c>
2002a918:	00800604 	movi	r2,24
2002a91c:	003f2706 	br	2002a5bc <__alt_data_end+0xfffeb1bc>
2002a920:	00800604 	movi	r2,24
2002a924:	003ece06 	br	2002a460 <__alt_data_end+0xfffeb060>
2002a928:	0007883a 	mov	r3,zero
2002a92c:	00800044 	movi	r2,1
2002a930:	003f5c06 	br	2002a6a4 <__alt_data_end+0xfffeb2a4>
2002a934:	813fa12e 	bgeu	r16,r4,2002a7bc <__alt_data_end+0xfffeb3bc>
2002a938:	10bfff84 	addi	r2,r2,-2
2002a93c:	85e1883a 	add	r16,r16,r23
2002a940:	003f9f06 	br	2002a7c0 <__alt_data_end+0xfffeb3c0>
2002a944:	1c7f8a2e 	bgeu	r3,r17,2002a770 <__alt_data_end+0xfffeb370>
2002a948:	31bfff84 	addi	r6,r6,-2
2002a94c:	1dc7883a 	add	r3,r3,r23
2002a950:	003f8806 	br	2002a774 <__alt_data_end+0xfffeb374>
2002a954:	1805883a 	mov	r2,r3
2002a958:	003fde06 	br	2002a8d4 <__alt_data_end+0xfffeb4d4>
2002a95c:	1839883a 	mov	fp,r3
2002a960:	003fc906 	br	2002a888 <__alt_data_end+0xfffeb488>
2002a964:	b5bfff84 	addi	r22,r22,-2
2002a968:	2449883a 	add	r4,r4,r17
2002a96c:	003f3406 	br	2002a640 <__alt_data_end+0xfffeb240>
2002a970:	b5bfff84 	addi	r22,r22,-2
2002a974:	1445883a 	add	r2,r2,r17
2002a978:	003edb06 	br	2002a4e8 <__alt_data_end+0xfffeb0e8>

2002a97c <__umoddi3>:
2002a97c:	defff404 	addi	sp,sp,-48
2002a980:	df000a15 	stw	fp,40(sp)
2002a984:	dc400315 	stw	r17,12(sp)
2002a988:	dc000215 	stw	r16,8(sp)
2002a98c:	dfc00b15 	stw	ra,44(sp)
2002a990:	ddc00915 	stw	r23,36(sp)
2002a994:	dd800815 	stw	r22,32(sp)
2002a998:	dd400715 	stw	r21,28(sp)
2002a99c:	dd000615 	stw	r20,24(sp)
2002a9a0:	dcc00515 	stw	r19,20(sp)
2002a9a4:	dc800415 	stw	r18,16(sp)
2002a9a8:	2021883a 	mov	r16,r4
2002a9ac:	2823883a 	mov	r17,r5
2002a9b0:	2839883a 	mov	fp,r5
2002a9b4:	38003c1e 	bne	r7,zero,2002aaa8 <__umoddi3+0x12c>
2002a9b8:	3027883a 	mov	r19,r6
2002a9bc:	2029883a 	mov	r20,r4
2002a9c0:	2980512e 	bgeu	r5,r6,2002ab08 <__umoddi3+0x18c>
2002a9c4:	00bfffd4 	movui	r2,65535
2002a9c8:	11809a36 	bltu	r2,r6,2002ac34 <__umoddi3+0x2b8>
2002a9cc:	01003fc4 	movi	r4,255
2002a9d0:	2189803a 	cmpltu	r4,r4,r6
2002a9d4:	200890fa 	slli	r4,r4,3
2002a9d8:	3104d83a 	srl	r2,r6,r4
2002a9dc:	00c800f4 	movhi	r3,8195
2002a9e0:	18c00304 	addi	r3,r3,12
2002a9e4:	1885883a 	add	r2,r3,r2
2002a9e8:	10c00003 	ldbu	r3,0(r2)
2002a9ec:	00800804 	movi	r2,32
2002a9f0:	1909883a 	add	r4,r3,r4
2002a9f4:	1125c83a 	sub	r18,r2,r4
2002a9f8:	90000526 	beq	r18,zero,2002aa10 <__umoddi3+0x94>
2002a9fc:	8ca2983a 	sll	r17,r17,r18
2002aa00:	8108d83a 	srl	r4,r16,r4
2002aa04:	34a6983a 	sll	r19,r6,r18
2002aa08:	84a8983a 	sll	r20,r16,r18
2002aa0c:	2478b03a 	or	fp,r4,r17
2002aa10:	982ed43a 	srli	r23,r19,16
2002aa14:	e009883a 	mov	r4,fp
2002aa18:	9dbfffcc 	andi	r22,r19,65535
2002aa1c:	b80b883a 	mov	r5,r23
2002aa20:	0020af40 	call	20020af4 <__umodsi3>
2002aa24:	e009883a 	mov	r4,fp
2002aa28:	b80b883a 	mov	r5,r23
2002aa2c:	102b883a 	mov	r21,r2
2002aa30:	0020a900 	call	20020a90 <__udivsi3>
2002aa34:	a806943a 	slli	r3,r21,16
2002aa38:	a008d43a 	srli	r4,r20,16
2002aa3c:	b085383a 	mul	r2,r22,r2
2002aa40:	20c8b03a 	or	r4,r4,r3
2002aa44:	2080032e 	bgeu	r4,r2,2002aa54 <__umoddi3+0xd8>
2002aa48:	24c9883a 	add	r4,r4,r19
2002aa4c:	24c00136 	bltu	r4,r19,2002aa54 <__umoddi3+0xd8>
2002aa50:	20811036 	bltu	r4,r2,2002ae94 <__umoddi3+0x518>
2002aa54:	20abc83a 	sub	r21,r4,r2
2002aa58:	b80b883a 	mov	r5,r23
2002aa5c:	a809883a 	mov	r4,r21
2002aa60:	0020af40 	call	20020af4 <__umodsi3>
2002aa64:	1023883a 	mov	r17,r2
2002aa68:	b80b883a 	mov	r5,r23
2002aa6c:	a809883a 	mov	r4,r21
2002aa70:	0020a900 	call	20020a90 <__udivsi3>
2002aa74:	8822943a 	slli	r17,r17,16
2002aa78:	b085383a 	mul	r2,r22,r2
2002aa7c:	a0ffffcc 	andi	r3,r20,65535
2002aa80:	1c46b03a 	or	r3,r3,r17
2002aa84:	1880042e 	bgeu	r3,r2,2002aa98 <__umoddi3+0x11c>
2002aa88:	1cc7883a 	add	r3,r3,r19
2002aa8c:	1cc00236 	bltu	r3,r19,2002aa98 <__umoddi3+0x11c>
2002aa90:	1880012e 	bgeu	r3,r2,2002aa98 <__umoddi3+0x11c>
2002aa94:	1cc7883a 	add	r3,r3,r19
2002aa98:	1885c83a 	sub	r2,r3,r2
2002aa9c:	1484d83a 	srl	r2,r2,r18
2002aaa0:	0007883a 	mov	r3,zero
2002aaa4:	00004f06 	br	2002abe4 <__umoddi3+0x268>
2002aaa8:	29c04c36 	bltu	r5,r7,2002abdc <__umoddi3+0x260>
2002aaac:	00bfffd4 	movui	r2,65535
2002aab0:	11c0582e 	bgeu	r2,r7,2002ac14 <__umoddi3+0x298>
2002aab4:	00804034 	movhi	r2,256
2002aab8:	10bfffc4 	addi	r2,r2,-1
2002aabc:	11c0e736 	bltu	r2,r7,2002ae5c <__umoddi3+0x4e0>
2002aac0:	01000404 	movi	r4,16
2002aac4:	3904d83a 	srl	r2,r7,r4
2002aac8:	00c800f4 	movhi	r3,8195
2002aacc:	18c00304 	addi	r3,r3,12
2002aad0:	1885883a 	add	r2,r3,r2
2002aad4:	14c00003 	ldbu	r19,0(r2)
2002aad8:	00c00804 	movi	r3,32
2002aadc:	9927883a 	add	r19,r19,r4
2002aae0:	1ce9c83a 	sub	r20,r3,r19
2002aae4:	a000581e 	bne	r20,zero,2002ac48 <__umoddi3+0x2cc>
2002aae8:	3c400136 	bltu	r7,r17,2002aaf0 <__umoddi3+0x174>
2002aaec:	8180eb36 	bltu	r16,r6,2002ae9c <__umoddi3+0x520>
2002aaf0:	8185c83a 	sub	r2,r16,r6
2002aaf4:	89e3c83a 	sub	r17,r17,r7
2002aaf8:	8089803a 	cmpltu	r4,r16,r2
2002aafc:	8939c83a 	sub	fp,r17,r4
2002ab00:	e007883a 	mov	r3,fp
2002ab04:	00003706 	br	2002abe4 <__umoddi3+0x268>
2002ab08:	3000041e 	bne	r6,zero,2002ab1c <__umoddi3+0x1a0>
2002ab0c:	000b883a 	mov	r5,zero
2002ab10:	01000044 	movi	r4,1
2002ab14:	0020a900 	call	20020a90 <__udivsi3>
2002ab18:	1027883a 	mov	r19,r2
2002ab1c:	00bfffd4 	movui	r2,65535
2002ab20:	14c0402e 	bgeu	r2,r19,2002ac24 <__umoddi3+0x2a8>
2002ab24:	00804034 	movhi	r2,256
2002ab28:	10bfffc4 	addi	r2,r2,-1
2002ab2c:	14c0cd36 	bltu	r2,r19,2002ae64 <__umoddi3+0x4e8>
2002ab30:	00800404 	movi	r2,16
2002ab34:	9886d83a 	srl	r3,r19,r2
2002ab38:	010800f4 	movhi	r4,8195
2002ab3c:	21000304 	addi	r4,r4,12
2002ab40:	20c7883a 	add	r3,r4,r3
2002ab44:	18c00003 	ldbu	r3,0(r3)
2002ab48:	1887883a 	add	r3,r3,r2
2002ab4c:	00800804 	movi	r2,32
2002ab50:	10e5c83a 	sub	r18,r2,r3
2002ab54:	9000901e 	bne	r18,zero,2002ad98 <__umoddi3+0x41c>
2002ab58:	982cd43a 	srli	r22,r19,16
2002ab5c:	8ce3c83a 	sub	r17,r17,r19
2002ab60:	9d7fffcc 	andi	r21,r19,65535
2002ab64:	b00b883a 	mov	r5,r22
2002ab68:	8809883a 	mov	r4,r17
2002ab6c:	0020af40 	call	20020af4 <__umodsi3>
2002ab70:	8809883a 	mov	r4,r17
2002ab74:	b00b883a 	mov	r5,r22
2002ab78:	1021883a 	mov	r16,r2
2002ab7c:	0020a900 	call	20020a90 <__udivsi3>
2002ab80:	8006943a 	slli	r3,r16,16
2002ab84:	a008d43a 	srli	r4,r20,16
2002ab88:	1545383a 	mul	r2,r2,r21
2002ab8c:	20c8b03a 	or	r4,r4,r3
2002ab90:	2080042e 	bgeu	r4,r2,2002aba4 <__umoddi3+0x228>
2002ab94:	24c9883a 	add	r4,r4,r19
2002ab98:	24c00236 	bltu	r4,r19,2002aba4 <__umoddi3+0x228>
2002ab9c:	2080012e 	bgeu	r4,r2,2002aba4 <__umoddi3+0x228>
2002aba0:	24c9883a 	add	r4,r4,r19
2002aba4:	20a1c83a 	sub	r16,r4,r2
2002aba8:	b00b883a 	mov	r5,r22
2002abac:	8009883a 	mov	r4,r16
2002abb0:	0020af40 	call	20020af4 <__umodsi3>
2002abb4:	1023883a 	mov	r17,r2
2002abb8:	b00b883a 	mov	r5,r22
2002abbc:	8009883a 	mov	r4,r16
2002abc0:	0020a900 	call	20020a90 <__udivsi3>
2002abc4:	8822943a 	slli	r17,r17,16
2002abc8:	1545383a 	mul	r2,r2,r21
2002abcc:	a53fffcc 	andi	r20,r20,65535
2002abd0:	a446b03a 	or	r3,r20,r17
2002abd4:	18bfb02e 	bgeu	r3,r2,2002aa98 <__alt_data_end+0xfffeb698>
2002abd8:	003fab06 	br	2002aa88 <__alt_data_end+0xfffeb688>
2002abdc:	2005883a 	mov	r2,r4
2002abe0:	2807883a 	mov	r3,r5
2002abe4:	dfc00b17 	ldw	ra,44(sp)
2002abe8:	df000a17 	ldw	fp,40(sp)
2002abec:	ddc00917 	ldw	r23,36(sp)
2002abf0:	dd800817 	ldw	r22,32(sp)
2002abf4:	dd400717 	ldw	r21,28(sp)
2002abf8:	dd000617 	ldw	r20,24(sp)
2002abfc:	dcc00517 	ldw	r19,20(sp)
2002ac00:	dc800417 	ldw	r18,16(sp)
2002ac04:	dc400317 	ldw	r17,12(sp)
2002ac08:	dc000217 	ldw	r16,8(sp)
2002ac0c:	dec00c04 	addi	sp,sp,48
2002ac10:	f800283a 	ret
2002ac14:	04c03fc4 	movi	r19,255
2002ac18:	99c9803a 	cmpltu	r4,r19,r7
2002ac1c:	200890fa 	slli	r4,r4,3
2002ac20:	003fa806 	br	2002aac4 <__alt_data_end+0xfffeb6c4>
2002ac24:	00803fc4 	movi	r2,255
2002ac28:	14c5803a 	cmpltu	r2,r2,r19
2002ac2c:	100490fa 	slli	r2,r2,3
2002ac30:	003fc006 	br	2002ab34 <__alt_data_end+0xfffeb734>
2002ac34:	00804034 	movhi	r2,256
2002ac38:	10bfffc4 	addi	r2,r2,-1
2002ac3c:	11808b36 	bltu	r2,r6,2002ae6c <__umoddi3+0x4f0>
2002ac40:	01000404 	movi	r4,16
2002ac44:	003f6406 	br	2002a9d8 <__alt_data_end+0xfffeb5d8>
2002ac48:	34c4d83a 	srl	r2,r6,r19
2002ac4c:	3d0e983a 	sll	r7,r7,r20
2002ac50:	8cf8d83a 	srl	fp,r17,r19
2002ac54:	8d10983a 	sll	r8,r17,r20
2002ac58:	38aab03a 	or	r21,r7,r2
2002ac5c:	a82cd43a 	srli	r22,r21,16
2002ac60:	84e2d83a 	srl	r17,r16,r19
2002ac64:	e009883a 	mov	r4,fp
2002ac68:	b00b883a 	mov	r5,r22
2002ac6c:	8a22b03a 	or	r17,r17,r8
2002ac70:	3524983a 	sll	r18,r6,r20
2002ac74:	0020af40 	call	20020af4 <__umodsi3>
2002ac78:	e009883a 	mov	r4,fp
2002ac7c:	b00b883a 	mov	r5,r22
2002ac80:	102f883a 	mov	r23,r2
2002ac84:	0020a900 	call	20020a90 <__udivsi3>
2002ac88:	100d883a 	mov	r6,r2
2002ac8c:	b808943a 	slli	r4,r23,16
2002ac90:	aa3fffcc 	andi	r8,r21,65535
2002ac94:	8804d43a 	srli	r2,r17,16
2002ac98:	41af383a 	mul	r23,r8,r6
2002ac9c:	8520983a 	sll	r16,r16,r20
2002aca0:	1104b03a 	or	r2,r2,r4
2002aca4:	15c0042e 	bgeu	r2,r23,2002acb8 <__umoddi3+0x33c>
2002aca8:	1545883a 	add	r2,r2,r21
2002acac:	30ffffc4 	addi	r3,r6,-1
2002acb0:	1540742e 	bgeu	r2,r21,2002ae84 <__umoddi3+0x508>
2002acb4:	180d883a 	mov	r6,r3
2002acb8:	15efc83a 	sub	r23,r2,r23
2002acbc:	b00b883a 	mov	r5,r22
2002acc0:	b809883a 	mov	r4,r23
2002acc4:	d9800115 	stw	r6,4(sp)
2002acc8:	da000015 	stw	r8,0(sp)
2002accc:	0020af40 	call	20020af4 <__umodsi3>
2002acd0:	b00b883a 	mov	r5,r22
2002acd4:	b809883a 	mov	r4,r23
2002acd8:	1039883a 	mov	fp,r2
2002acdc:	0020a900 	call	20020a90 <__udivsi3>
2002ace0:	da000017 	ldw	r8,0(sp)
2002ace4:	e038943a 	slli	fp,fp,16
2002ace8:	100b883a 	mov	r5,r2
2002acec:	4089383a 	mul	r4,r8,r2
2002acf0:	8a3fffcc 	andi	r8,r17,65535
2002acf4:	4710b03a 	or	r8,r8,fp
2002acf8:	d9800117 	ldw	r6,4(sp)
2002acfc:	4100042e 	bgeu	r8,r4,2002ad10 <__umoddi3+0x394>
2002ad00:	4551883a 	add	r8,r8,r21
2002ad04:	10bfffc4 	addi	r2,r2,-1
2002ad08:	45405a2e 	bgeu	r8,r21,2002ae74 <__umoddi3+0x4f8>
2002ad0c:	100b883a 	mov	r5,r2
2002ad10:	300c943a 	slli	r6,r6,16
2002ad14:	91ffffcc 	andi	r7,r18,65535
2002ad18:	9004d43a 	srli	r2,r18,16
2002ad1c:	314cb03a 	or	r6,r6,r5
2002ad20:	317fffcc 	andi	r5,r6,65535
2002ad24:	300cd43a 	srli	r6,r6,16
2002ad28:	29d3383a 	mul	r9,r5,r7
2002ad2c:	288b383a 	mul	r5,r5,r2
2002ad30:	31cf383a 	mul	r7,r6,r7
2002ad34:	4806d43a 	srli	r3,r9,16
2002ad38:	4111c83a 	sub	r8,r8,r4
2002ad3c:	29cb883a 	add	r5,r5,r7
2002ad40:	194b883a 	add	r5,r3,r5
2002ad44:	3085383a 	mul	r2,r6,r2
2002ad48:	29c0022e 	bgeu	r5,r7,2002ad54 <__umoddi3+0x3d8>
2002ad4c:	00c00074 	movhi	r3,1
2002ad50:	10c5883a 	add	r2,r2,r3
2002ad54:	2808d43a 	srli	r4,r5,16
2002ad58:	280a943a 	slli	r5,r5,16
2002ad5c:	4a7fffcc 	andi	r9,r9,65535
2002ad60:	2085883a 	add	r2,r4,r2
2002ad64:	2a4b883a 	add	r5,r5,r9
2002ad68:	40803636 	bltu	r8,r2,2002ae44 <__umoddi3+0x4c8>
2002ad6c:	40804d26 	beq	r8,r2,2002aea4 <__umoddi3+0x528>
2002ad70:	4089c83a 	sub	r4,r8,r2
2002ad74:	280f883a 	mov	r7,r5
2002ad78:	81cfc83a 	sub	r7,r16,r7
2002ad7c:	81c7803a 	cmpltu	r3,r16,r7
2002ad80:	20c7c83a 	sub	r3,r4,r3
2002ad84:	1cc4983a 	sll	r2,r3,r19
2002ad88:	3d0ed83a 	srl	r7,r7,r20
2002ad8c:	1d06d83a 	srl	r3,r3,r20
2002ad90:	11c4b03a 	or	r2,r2,r7
2002ad94:	003f9306 	br	2002abe4 <__alt_data_end+0xfffeb7e4>
2002ad98:	9ca6983a 	sll	r19,r19,r18
2002ad9c:	88e8d83a 	srl	r20,r17,r3
2002ada0:	80c4d83a 	srl	r2,r16,r3
2002ada4:	982cd43a 	srli	r22,r19,16
2002ada8:	8ca2983a 	sll	r17,r17,r18
2002adac:	a009883a 	mov	r4,r20
2002adb0:	b00b883a 	mov	r5,r22
2002adb4:	1478b03a 	or	fp,r2,r17
2002adb8:	0020af40 	call	20020af4 <__umodsi3>
2002adbc:	a009883a 	mov	r4,r20
2002adc0:	b00b883a 	mov	r5,r22
2002adc4:	1023883a 	mov	r17,r2
2002adc8:	0020a900 	call	20020a90 <__udivsi3>
2002adcc:	9d7fffcc 	andi	r21,r19,65535
2002add0:	880a943a 	slli	r5,r17,16
2002add4:	e008d43a 	srli	r4,fp,16
2002add8:	a885383a 	mul	r2,r21,r2
2002addc:	84a8983a 	sll	r20,r16,r18
2002ade0:	2148b03a 	or	r4,r4,r5
2002ade4:	2080042e 	bgeu	r4,r2,2002adf8 <__umoddi3+0x47c>
2002ade8:	24c9883a 	add	r4,r4,r19
2002adec:	24c00236 	bltu	r4,r19,2002adf8 <__umoddi3+0x47c>
2002adf0:	2080012e 	bgeu	r4,r2,2002adf8 <__umoddi3+0x47c>
2002adf4:	24c9883a 	add	r4,r4,r19
2002adf8:	20a3c83a 	sub	r17,r4,r2
2002adfc:	b00b883a 	mov	r5,r22
2002ae00:	8809883a 	mov	r4,r17
2002ae04:	0020af40 	call	20020af4 <__umodsi3>
2002ae08:	102f883a 	mov	r23,r2
2002ae0c:	8809883a 	mov	r4,r17
2002ae10:	b00b883a 	mov	r5,r22
2002ae14:	0020a900 	call	20020a90 <__udivsi3>
2002ae18:	b82e943a 	slli	r23,r23,16
2002ae1c:	a885383a 	mul	r2,r21,r2
2002ae20:	e13fffcc 	andi	r4,fp,65535
2002ae24:	25c8b03a 	or	r4,r4,r23
2002ae28:	2080042e 	bgeu	r4,r2,2002ae3c <__umoddi3+0x4c0>
2002ae2c:	24c9883a 	add	r4,r4,r19
2002ae30:	24c00236 	bltu	r4,r19,2002ae3c <__umoddi3+0x4c0>
2002ae34:	2080012e 	bgeu	r4,r2,2002ae3c <__umoddi3+0x4c0>
2002ae38:	24c9883a 	add	r4,r4,r19
2002ae3c:	20a3c83a 	sub	r17,r4,r2
2002ae40:	003f4806 	br	2002ab64 <__alt_data_end+0xfffeb764>
2002ae44:	2c8fc83a 	sub	r7,r5,r18
2002ae48:	1545c83a 	sub	r2,r2,r21
2002ae4c:	29cb803a 	cmpltu	r5,r5,r7
2002ae50:	1145c83a 	sub	r2,r2,r5
2002ae54:	4089c83a 	sub	r4,r8,r2
2002ae58:	003fc706 	br	2002ad78 <__alt_data_end+0xfffeb978>
2002ae5c:	01000604 	movi	r4,24
2002ae60:	003f1806 	br	2002aac4 <__alt_data_end+0xfffeb6c4>
2002ae64:	00800604 	movi	r2,24
2002ae68:	003f3206 	br	2002ab34 <__alt_data_end+0xfffeb734>
2002ae6c:	01000604 	movi	r4,24
2002ae70:	003ed906 	br	2002a9d8 <__alt_data_end+0xfffeb5d8>
2002ae74:	413fa52e 	bgeu	r8,r4,2002ad0c <__alt_data_end+0xfffeb90c>
2002ae78:	297fff84 	addi	r5,r5,-2
2002ae7c:	4551883a 	add	r8,r8,r21
2002ae80:	003fa306 	br	2002ad10 <__alt_data_end+0xfffeb910>
2002ae84:	15ff8b2e 	bgeu	r2,r23,2002acb4 <__alt_data_end+0xfffeb8b4>
2002ae88:	31bfff84 	addi	r6,r6,-2
2002ae8c:	1545883a 	add	r2,r2,r21
2002ae90:	003f8906 	br	2002acb8 <__alt_data_end+0xfffeb8b8>
2002ae94:	24c9883a 	add	r4,r4,r19
2002ae98:	003eee06 	br	2002aa54 <__alt_data_end+0xfffeb654>
2002ae9c:	8005883a 	mov	r2,r16
2002aea0:	003f1706 	br	2002ab00 <__alt_data_end+0xfffeb700>
2002aea4:	817fe736 	bltu	r16,r5,2002ae44 <__alt_data_end+0xfffeba44>
2002aea8:	280f883a 	mov	r7,r5
2002aeac:	0009883a 	mov	r4,zero
2002aeb0:	003fb106 	br	2002ad78 <__alt_data_end+0xfffeb978>

2002aeb4 <__adddf3>:
2002aeb4:	02c00434 	movhi	r11,16
2002aeb8:	5affffc4 	addi	r11,r11,-1
2002aebc:	2806d7fa 	srli	r3,r5,31
2002aec0:	2ad4703a 	and	r10,r5,r11
2002aec4:	3ad2703a 	and	r9,r7,r11
2002aec8:	3804d53a 	srli	r2,r7,20
2002aecc:	3018d77a 	srli	r12,r6,29
2002aed0:	280ad53a 	srli	r5,r5,20
2002aed4:	501490fa 	slli	r10,r10,3
2002aed8:	2010d77a 	srli	r8,r4,29
2002aedc:	481290fa 	slli	r9,r9,3
2002aee0:	380ed7fa 	srli	r7,r7,31
2002aee4:	defffb04 	addi	sp,sp,-20
2002aee8:	dc800215 	stw	r18,8(sp)
2002aeec:	dc400115 	stw	r17,4(sp)
2002aef0:	dc000015 	stw	r16,0(sp)
2002aef4:	dfc00415 	stw	ra,16(sp)
2002aef8:	dcc00315 	stw	r19,12(sp)
2002aefc:	1c803fcc 	andi	r18,r3,255
2002af00:	2c01ffcc 	andi	r16,r5,2047
2002af04:	5210b03a 	or	r8,r10,r8
2002af08:	202290fa 	slli	r17,r4,3
2002af0c:	1081ffcc 	andi	r2,r2,2047
2002af10:	4b12b03a 	or	r9,r9,r12
2002af14:	300c90fa 	slli	r6,r6,3
2002af18:	91c07526 	beq	r18,r7,2002b0f0 <__adddf3+0x23c>
2002af1c:	8087c83a 	sub	r3,r16,r2
2002af20:	00c0ab0e 	bge	zero,r3,2002b1d0 <__adddf3+0x31c>
2002af24:	10002a1e 	bne	r2,zero,2002afd0 <__adddf3+0x11c>
2002af28:	4984b03a 	or	r2,r9,r6
2002af2c:	1000961e 	bne	r2,zero,2002b188 <__adddf3+0x2d4>
2002af30:	888001cc 	andi	r2,r17,7
2002af34:	10000726 	beq	r2,zero,2002af54 <__adddf3+0xa0>
2002af38:	888003cc 	andi	r2,r17,15
2002af3c:	00c00104 	movi	r3,4
2002af40:	10c00426 	beq	r2,r3,2002af54 <__adddf3+0xa0>
2002af44:	88c7883a 	add	r3,r17,r3
2002af48:	1c63803a 	cmpltu	r17,r3,r17
2002af4c:	4451883a 	add	r8,r8,r17
2002af50:	1823883a 	mov	r17,r3
2002af54:	4080202c 	andhi	r2,r8,128
2002af58:	10005926 	beq	r2,zero,2002b0c0 <__adddf3+0x20c>
2002af5c:	84000044 	addi	r16,r16,1
2002af60:	0081ffc4 	movi	r2,2047
2002af64:	8080ba26 	beq	r16,r2,2002b250 <__adddf3+0x39c>
2002af68:	00bfe034 	movhi	r2,65408
2002af6c:	10bfffc4 	addi	r2,r2,-1
2002af70:	4090703a 	and	r8,r8,r2
2002af74:	4004977a 	slli	r2,r8,29
2002af78:	4010927a 	slli	r8,r8,9
2002af7c:	8822d0fa 	srli	r17,r17,3
2002af80:	8401ffcc 	andi	r16,r16,2047
2002af84:	4010d33a 	srli	r8,r8,12
2002af88:	9007883a 	mov	r3,r18
2002af8c:	1444b03a 	or	r2,r2,r17
2002af90:	8401ffcc 	andi	r16,r16,2047
2002af94:	8020953a 	slli	r16,r16,20
2002af98:	18c03fcc 	andi	r3,r3,255
2002af9c:	01000434 	movhi	r4,16
2002afa0:	213fffc4 	addi	r4,r4,-1
2002afa4:	180697fa 	slli	r3,r3,31
2002afa8:	4110703a 	and	r8,r8,r4
2002afac:	4410b03a 	or	r8,r8,r16
2002afb0:	40c6b03a 	or	r3,r8,r3
2002afb4:	dfc00417 	ldw	ra,16(sp)
2002afb8:	dcc00317 	ldw	r19,12(sp)
2002afbc:	dc800217 	ldw	r18,8(sp)
2002afc0:	dc400117 	ldw	r17,4(sp)
2002afc4:	dc000017 	ldw	r16,0(sp)
2002afc8:	dec00504 	addi	sp,sp,20
2002afcc:	f800283a 	ret
2002afd0:	0081ffc4 	movi	r2,2047
2002afd4:	80bfd626 	beq	r16,r2,2002af30 <__alt_data_end+0xfffebb30>
2002afd8:	4a402034 	orhi	r9,r9,128
2002afdc:	00800e04 	movi	r2,56
2002afe0:	10c09f16 	blt	r2,r3,2002b260 <__adddf3+0x3ac>
2002afe4:	008007c4 	movi	r2,31
2002afe8:	10c0c216 	blt	r2,r3,2002b2f4 <__adddf3+0x440>
2002afec:	00800804 	movi	r2,32
2002aff0:	10c5c83a 	sub	r2,r2,r3
2002aff4:	488a983a 	sll	r5,r9,r2
2002aff8:	30c8d83a 	srl	r4,r6,r3
2002affc:	3084983a 	sll	r2,r6,r2
2002b000:	48c6d83a 	srl	r3,r9,r3
2002b004:	290cb03a 	or	r6,r5,r4
2002b008:	1004c03a 	cmpne	r2,r2,zero
2002b00c:	308cb03a 	or	r6,r6,r2
2002b010:	898dc83a 	sub	r6,r17,r6
2002b014:	89a3803a 	cmpltu	r17,r17,r6
2002b018:	40d1c83a 	sub	r8,r8,r3
2002b01c:	4451c83a 	sub	r8,r8,r17
2002b020:	3023883a 	mov	r17,r6
2002b024:	4080202c 	andhi	r2,r8,128
2002b028:	10002326 	beq	r2,zero,2002b0b8 <__adddf3+0x204>
2002b02c:	04c02034 	movhi	r19,128
2002b030:	9cffffc4 	addi	r19,r19,-1
2002b034:	44e6703a 	and	r19,r8,r19
2002b038:	98007626 	beq	r19,zero,2002b214 <__adddf3+0x360>
2002b03c:	9809883a 	mov	r4,r19
2002b040:	002d4b80 	call	2002d4b8 <__clzsi2>
2002b044:	10fffe04 	addi	r3,r2,-8
2002b048:	010007c4 	movi	r4,31
2002b04c:	20c07716 	blt	r4,r3,2002b22c <__adddf3+0x378>
2002b050:	00800804 	movi	r2,32
2002b054:	10c5c83a 	sub	r2,r2,r3
2002b058:	8884d83a 	srl	r2,r17,r2
2002b05c:	98d0983a 	sll	r8,r19,r3
2002b060:	88e2983a 	sll	r17,r17,r3
2002b064:	1204b03a 	or	r2,r2,r8
2002b068:	1c007416 	blt	r3,r16,2002b23c <__adddf3+0x388>
2002b06c:	1c21c83a 	sub	r16,r3,r16
2002b070:	82000044 	addi	r8,r16,1
2002b074:	00c007c4 	movi	r3,31
2002b078:	1a009116 	blt	r3,r8,2002b2c0 <__adddf3+0x40c>
2002b07c:	00c00804 	movi	r3,32
2002b080:	1a07c83a 	sub	r3,r3,r8
2002b084:	8a08d83a 	srl	r4,r17,r8
2002b088:	88e2983a 	sll	r17,r17,r3
2002b08c:	10c6983a 	sll	r3,r2,r3
2002b090:	1210d83a 	srl	r8,r2,r8
2002b094:	8804c03a 	cmpne	r2,r17,zero
2002b098:	1906b03a 	or	r3,r3,r4
2002b09c:	18a2b03a 	or	r17,r3,r2
2002b0a0:	0021883a 	mov	r16,zero
2002b0a4:	003fa206 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b0a8:	1890b03a 	or	r8,r3,r2
2002b0ac:	40017d26 	beq	r8,zero,2002b6a4 <__adddf3+0x7f0>
2002b0b0:	1011883a 	mov	r8,r2
2002b0b4:	1823883a 	mov	r17,r3
2002b0b8:	888001cc 	andi	r2,r17,7
2002b0bc:	103f9e1e 	bne	r2,zero,2002af38 <__alt_data_end+0xfffebb38>
2002b0c0:	4004977a 	slli	r2,r8,29
2002b0c4:	8822d0fa 	srli	r17,r17,3
2002b0c8:	4010d0fa 	srli	r8,r8,3
2002b0cc:	9007883a 	mov	r3,r18
2002b0d0:	1444b03a 	or	r2,r2,r17
2002b0d4:	0101ffc4 	movi	r4,2047
2002b0d8:	81002426 	beq	r16,r4,2002b16c <__adddf3+0x2b8>
2002b0dc:	8120703a 	and	r16,r16,r4
2002b0e0:	01000434 	movhi	r4,16
2002b0e4:	213fffc4 	addi	r4,r4,-1
2002b0e8:	4110703a 	and	r8,r8,r4
2002b0ec:	003fa806 	br	2002af90 <__alt_data_end+0xfffebb90>
2002b0f0:	8089c83a 	sub	r4,r16,r2
2002b0f4:	01005e0e 	bge	zero,r4,2002b270 <__adddf3+0x3bc>
2002b0f8:	10002b26 	beq	r2,zero,2002b1a8 <__adddf3+0x2f4>
2002b0fc:	0081ffc4 	movi	r2,2047
2002b100:	80bf8b26 	beq	r16,r2,2002af30 <__alt_data_end+0xfffebb30>
2002b104:	4a402034 	orhi	r9,r9,128
2002b108:	00800e04 	movi	r2,56
2002b10c:	1100a40e 	bge	r2,r4,2002b3a0 <__adddf3+0x4ec>
2002b110:	498cb03a 	or	r6,r9,r6
2002b114:	300ac03a 	cmpne	r5,r6,zero
2002b118:	0013883a 	mov	r9,zero
2002b11c:	2c4b883a 	add	r5,r5,r17
2002b120:	2c63803a 	cmpltu	r17,r5,r17
2002b124:	4a11883a 	add	r8,r9,r8
2002b128:	8a11883a 	add	r8,r17,r8
2002b12c:	2823883a 	mov	r17,r5
2002b130:	4080202c 	andhi	r2,r8,128
2002b134:	103fe026 	beq	r2,zero,2002b0b8 <__alt_data_end+0xfffebcb8>
2002b138:	84000044 	addi	r16,r16,1
2002b13c:	0081ffc4 	movi	r2,2047
2002b140:	8080d226 	beq	r16,r2,2002b48c <__adddf3+0x5d8>
2002b144:	00bfe034 	movhi	r2,65408
2002b148:	10bfffc4 	addi	r2,r2,-1
2002b14c:	4090703a 	and	r8,r8,r2
2002b150:	880ad07a 	srli	r5,r17,1
2002b154:	400897fa 	slli	r4,r8,31
2002b158:	88c0004c 	andi	r3,r17,1
2002b15c:	28e2b03a 	or	r17,r5,r3
2002b160:	4010d07a 	srli	r8,r8,1
2002b164:	2462b03a 	or	r17,r4,r17
2002b168:	003f7106 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b16c:	4088b03a 	or	r4,r8,r2
2002b170:	20014526 	beq	r4,zero,2002b688 <__adddf3+0x7d4>
2002b174:	01000434 	movhi	r4,16
2002b178:	42000234 	orhi	r8,r8,8
2002b17c:	213fffc4 	addi	r4,r4,-1
2002b180:	4110703a 	and	r8,r8,r4
2002b184:	003f8206 	br	2002af90 <__alt_data_end+0xfffebb90>
2002b188:	18ffffc4 	addi	r3,r3,-1
2002b18c:	1800491e 	bne	r3,zero,2002b2b4 <__adddf3+0x400>
2002b190:	898bc83a 	sub	r5,r17,r6
2002b194:	8963803a 	cmpltu	r17,r17,r5
2002b198:	4251c83a 	sub	r8,r8,r9
2002b19c:	4451c83a 	sub	r8,r8,r17
2002b1a0:	2823883a 	mov	r17,r5
2002b1a4:	003f9f06 	br	2002b024 <__alt_data_end+0xfffebc24>
2002b1a8:	4984b03a 	or	r2,r9,r6
2002b1ac:	103f6026 	beq	r2,zero,2002af30 <__alt_data_end+0xfffebb30>
2002b1b0:	213fffc4 	addi	r4,r4,-1
2002b1b4:	2000931e 	bne	r4,zero,2002b404 <__adddf3+0x550>
2002b1b8:	898d883a 	add	r6,r17,r6
2002b1bc:	3463803a 	cmpltu	r17,r6,r17
2002b1c0:	4251883a 	add	r8,r8,r9
2002b1c4:	8a11883a 	add	r8,r17,r8
2002b1c8:	3023883a 	mov	r17,r6
2002b1cc:	003fd806 	br	2002b130 <__alt_data_end+0xfffebd30>
2002b1d0:	1800541e 	bne	r3,zero,2002b324 <__adddf3+0x470>
2002b1d4:	80800044 	addi	r2,r16,1
2002b1d8:	1081ffcc 	andi	r2,r2,2047
2002b1dc:	00c00044 	movi	r3,1
2002b1e0:	1880a00e 	bge	r3,r2,2002b464 <__adddf3+0x5b0>
2002b1e4:	8989c83a 	sub	r4,r17,r6
2002b1e8:	8905803a 	cmpltu	r2,r17,r4
2002b1ec:	4267c83a 	sub	r19,r8,r9
2002b1f0:	98a7c83a 	sub	r19,r19,r2
2002b1f4:	9880202c 	andhi	r2,r19,128
2002b1f8:	10006326 	beq	r2,zero,2002b388 <__adddf3+0x4d4>
2002b1fc:	3463c83a 	sub	r17,r6,r17
2002b200:	4a07c83a 	sub	r3,r9,r8
2002b204:	344d803a 	cmpltu	r6,r6,r17
2002b208:	19a7c83a 	sub	r19,r3,r6
2002b20c:	3825883a 	mov	r18,r7
2002b210:	983f8a1e 	bne	r19,zero,2002b03c <__alt_data_end+0xfffebc3c>
2002b214:	8809883a 	mov	r4,r17
2002b218:	002d4b80 	call	2002d4b8 <__clzsi2>
2002b21c:	10800804 	addi	r2,r2,32
2002b220:	10fffe04 	addi	r3,r2,-8
2002b224:	010007c4 	movi	r4,31
2002b228:	20ff890e 	bge	r4,r3,2002b050 <__alt_data_end+0xfffebc50>
2002b22c:	10bff604 	addi	r2,r2,-40
2002b230:	8884983a 	sll	r2,r17,r2
2002b234:	0023883a 	mov	r17,zero
2002b238:	1c3f8c0e 	bge	r3,r16,2002b06c <__alt_data_end+0xfffebc6c>
2002b23c:	023fe034 	movhi	r8,65408
2002b240:	423fffc4 	addi	r8,r8,-1
2002b244:	80e1c83a 	sub	r16,r16,r3
2002b248:	1210703a 	and	r8,r2,r8
2002b24c:	003f3806 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b250:	9007883a 	mov	r3,r18
2002b254:	0011883a 	mov	r8,zero
2002b258:	0005883a 	mov	r2,zero
2002b25c:	003f4c06 	br	2002af90 <__alt_data_end+0xfffebb90>
2002b260:	498cb03a 	or	r6,r9,r6
2002b264:	300cc03a 	cmpne	r6,r6,zero
2002b268:	0007883a 	mov	r3,zero
2002b26c:	003f6806 	br	2002b010 <__alt_data_end+0xfffebc10>
2002b270:	20009c1e 	bne	r4,zero,2002b4e4 <__adddf3+0x630>
2002b274:	80800044 	addi	r2,r16,1
2002b278:	1141ffcc 	andi	r5,r2,2047
2002b27c:	01000044 	movi	r4,1
2002b280:	2140670e 	bge	r4,r5,2002b420 <__adddf3+0x56c>
2002b284:	0101ffc4 	movi	r4,2047
2002b288:	11007f26 	beq	r2,r4,2002b488 <__adddf3+0x5d4>
2002b28c:	898d883a 	add	r6,r17,r6
2002b290:	4247883a 	add	r3,r8,r9
2002b294:	3451803a 	cmpltu	r8,r6,r17
2002b298:	40d1883a 	add	r8,r8,r3
2002b29c:	402297fa 	slli	r17,r8,31
2002b2a0:	300cd07a 	srli	r6,r6,1
2002b2a4:	4010d07a 	srli	r8,r8,1
2002b2a8:	1021883a 	mov	r16,r2
2002b2ac:	89a2b03a 	or	r17,r17,r6
2002b2b0:	003f1f06 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b2b4:	0081ffc4 	movi	r2,2047
2002b2b8:	80bf481e 	bne	r16,r2,2002afdc <__alt_data_end+0xfffebbdc>
2002b2bc:	003f1c06 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b2c0:	843ff844 	addi	r16,r16,-31
2002b2c4:	01000804 	movi	r4,32
2002b2c8:	1406d83a 	srl	r3,r2,r16
2002b2cc:	41005026 	beq	r8,r4,2002b410 <__adddf3+0x55c>
2002b2d0:	01001004 	movi	r4,64
2002b2d4:	2211c83a 	sub	r8,r4,r8
2002b2d8:	1204983a 	sll	r2,r2,r8
2002b2dc:	88a2b03a 	or	r17,r17,r2
2002b2e0:	8822c03a 	cmpne	r17,r17,zero
2002b2e4:	1c62b03a 	or	r17,r3,r17
2002b2e8:	0011883a 	mov	r8,zero
2002b2ec:	0021883a 	mov	r16,zero
2002b2f0:	003f7106 	br	2002b0b8 <__alt_data_end+0xfffebcb8>
2002b2f4:	193ff804 	addi	r4,r3,-32
2002b2f8:	00800804 	movi	r2,32
2002b2fc:	4908d83a 	srl	r4,r9,r4
2002b300:	18804526 	beq	r3,r2,2002b418 <__adddf3+0x564>
2002b304:	00801004 	movi	r2,64
2002b308:	10c5c83a 	sub	r2,r2,r3
2002b30c:	4886983a 	sll	r3,r9,r2
2002b310:	198cb03a 	or	r6,r3,r6
2002b314:	300cc03a 	cmpne	r6,r6,zero
2002b318:	218cb03a 	or	r6,r4,r6
2002b31c:	0007883a 	mov	r3,zero
2002b320:	003f3b06 	br	2002b010 <__alt_data_end+0xfffebc10>
2002b324:	80002a26 	beq	r16,zero,2002b3d0 <__adddf3+0x51c>
2002b328:	0101ffc4 	movi	r4,2047
2002b32c:	11006826 	beq	r2,r4,2002b4d0 <__adddf3+0x61c>
2002b330:	00c7c83a 	sub	r3,zero,r3
2002b334:	42002034 	orhi	r8,r8,128
2002b338:	01000e04 	movi	r4,56
2002b33c:	20c07c16 	blt	r4,r3,2002b530 <__adddf3+0x67c>
2002b340:	010007c4 	movi	r4,31
2002b344:	20c0da16 	blt	r4,r3,2002b6b0 <__adddf3+0x7fc>
2002b348:	01000804 	movi	r4,32
2002b34c:	20c9c83a 	sub	r4,r4,r3
2002b350:	4114983a 	sll	r10,r8,r4
2002b354:	88cad83a 	srl	r5,r17,r3
2002b358:	8908983a 	sll	r4,r17,r4
2002b35c:	40c6d83a 	srl	r3,r8,r3
2002b360:	5162b03a 	or	r17,r10,r5
2002b364:	2008c03a 	cmpne	r4,r4,zero
2002b368:	8922b03a 	or	r17,r17,r4
2002b36c:	3463c83a 	sub	r17,r6,r17
2002b370:	48c7c83a 	sub	r3,r9,r3
2002b374:	344d803a 	cmpltu	r6,r6,r17
2002b378:	1991c83a 	sub	r8,r3,r6
2002b37c:	1021883a 	mov	r16,r2
2002b380:	3825883a 	mov	r18,r7
2002b384:	003f2706 	br	2002b024 <__alt_data_end+0xfffebc24>
2002b388:	24d0b03a 	or	r8,r4,r19
2002b38c:	40001b1e 	bne	r8,zero,2002b3fc <__adddf3+0x548>
2002b390:	0005883a 	mov	r2,zero
2002b394:	0007883a 	mov	r3,zero
2002b398:	0021883a 	mov	r16,zero
2002b39c:	003f4d06 	br	2002b0d4 <__alt_data_end+0xfffebcd4>
2002b3a0:	008007c4 	movi	r2,31
2002b3a4:	11003c16 	blt	r2,r4,2002b498 <__adddf3+0x5e4>
2002b3a8:	00800804 	movi	r2,32
2002b3ac:	1105c83a 	sub	r2,r2,r4
2002b3b0:	488e983a 	sll	r7,r9,r2
2002b3b4:	310ad83a 	srl	r5,r6,r4
2002b3b8:	3084983a 	sll	r2,r6,r2
2002b3bc:	4912d83a 	srl	r9,r9,r4
2002b3c0:	394ab03a 	or	r5,r7,r5
2002b3c4:	1004c03a 	cmpne	r2,r2,zero
2002b3c8:	288ab03a 	or	r5,r5,r2
2002b3cc:	003f5306 	br	2002b11c <__alt_data_end+0xfffebd1c>
2002b3d0:	4448b03a 	or	r4,r8,r17
2002b3d4:	20003e26 	beq	r4,zero,2002b4d0 <__adddf3+0x61c>
2002b3d8:	00c6303a 	nor	r3,zero,r3
2002b3dc:	18003a1e 	bne	r3,zero,2002b4c8 <__adddf3+0x614>
2002b3e0:	3463c83a 	sub	r17,r6,r17
2002b3e4:	4a07c83a 	sub	r3,r9,r8
2002b3e8:	344d803a 	cmpltu	r6,r6,r17
2002b3ec:	1991c83a 	sub	r8,r3,r6
2002b3f0:	1021883a 	mov	r16,r2
2002b3f4:	3825883a 	mov	r18,r7
2002b3f8:	003f0a06 	br	2002b024 <__alt_data_end+0xfffebc24>
2002b3fc:	2023883a 	mov	r17,r4
2002b400:	003f0d06 	br	2002b038 <__alt_data_end+0xfffebc38>
2002b404:	0081ffc4 	movi	r2,2047
2002b408:	80bf3f1e 	bne	r16,r2,2002b108 <__alt_data_end+0xfffebd08>
2002b40c:	003ec806 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b410:	0005883a 	mov	r2,zero
2002b414:	003fb106 	br	2002b2dc <__alt_data_end+0xfffebedc>
2002b418:	0007883a 	mov	r3,zero
2002b41c:	003fbc06 	br	2002b310 <__alt_data_end+0xfffebf10>
2002b420:	4444b03a 	or	r2,r8,r17
2002b424:	8000871e 	bne	r16,zero,2002b644 <__adddf3+0x790>
2002b428:	1000ba26 	beq	r2,zero,2002b714 <__adddf3+0x860>
2002b42c:	4984b03a 	or	r2,r9,r6
2002b430:	103ebf26 	beq	r2,zero,2002af30 <__alt_data_end+0xfffebb30>
2002b434:	8985883a 	add	r2,r17,r6
2002b438:	4247883a 	add	r3,r8,r9
2002b43c:	1451803a 	cmpltu	r8,r2,r17
2002b440:	40d1883a 	add	r8,r8,r3
2002b444:	40c0202c 	andhi	r3,r8,128
2002b448:	1023883a 	mov	r17,r2
2002b44c:	183f1a26 	beq	r3,zero,2002b0b8 <__alt_data_end+0xfffebcb8>
2002b450:	00bfe034 	movhi	r2,65408
2002b454:	10bfffc4 	addi	r2,r2,-1
2002b458:	2021883a 	mov	r16,r4
2002b45c:	4090703a 	and	r8,r8,r2
2002b460:	003eb306 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b464:	4444b03a 	or	r2,r8,r17
2002b468:	8000291e 	bne	r16,zero,2002b510 <__adddf3+0x65c>
2002b46c:	10004b1e 	bne	r2,zero,2002b59c <__adddf3+0x6e8>
2002b470:	4990b03a 	or	r8,r9,r6
2002b474:	40008b26 	beq	r8,zero,2002b6a4 <__adddf3+0x7f0>
2002b478:	4811883a 	mov	r8,r9
2002b47c:	3023883a 	mov	r17,r6
2002b480:	3825883a 	mov	r18,r7
2002b484:	003eaa06 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b488:	1021883a 	mov	r16,r2
2002b48c:	0011883a 	mov	r8,zero
2002b490:	0005883a 	mov	r2,zero
2002b494:	003f0f06 	br	2002b0d4 <__alt_data_end+0xfffebcd4>
2002b498:	217ff804 	addi	r5,r4,-32
2002b49c:	00800804 	movi	r2,32
2002b4a0:	494ad83a 	srl	r5,r9,r5
2002b4a4:	20807d26 	beq	r4,r2,2002b69c <__adddf3+0x7e8>
2002b4a8:	00801004 	movi	r2,64
2002b4ac:	1109c83a 	sub	r4,r2,r4
2002b4b0:	4912983a 	sll	r9,r9,r4
2002b4b4:	498cb03a 	or	r6,r9,r6
2002b4b8:	300cc03a 	cmpne	r6,r6,zero
2002b4bc:	298ab03a 	or	r5,r5,r6
2002b4c0:	0013883a 	mov	r9,zero
2002b4c4:	003f1506 	br	2002b11c <__alt_data_end+0xfffebd1c>
2002b4c8:	0101ffc4 	movi	r4,2047
2002b4cc:	113f9a1e 	bne	r2,r4,2002b338 <__alt_data_end+0xfffebf38>
2002b4d0:	4811883a 	mov	r8,r9
2002b4d4:	3023883a 	mov	r17,r6
2002b4d8:	1021883a 	mov	r16,r2
2002b4dc:	3825883a 	mov	r18,r7
2002b4e0:	003e9306 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b4e4:	8000161e 	bne	r16,zero,2002b540 <__adddf3+0x68c>
2002b4e8:	444ab03a 	or	r5,r8,r17
2002b4ec:	28005126 	beq	r5,zero,2002b634 <__adddf3+0x780>
2002b4f0:	0108303a 	nor	r4,zero,r4
2002b4f4:	20004d1e 	bne	r4,zero,2002b62c <__adddf3+0x778>
2002b4f8:	89a3883a 	add	r17,r17,r6
2002b4fc:	4253883a 	add	r9,r8,r9
2002b500:	898d803a 	cmpltu	r6,r17,r6
2002b504:	3251883a 	add	r8,r6,r9
2002b508:	1021883a 	mov	r16,r2
2002b50c:	003f0806 	br	2002b130 <__alt_data_end+0xfffebd30>
2002b510:	1000301e 	bne	r2,zero,2002b5d4 <__adddf3+0x720>
2002b514:	4984b03a 	or	r2,r9,r6
2002b518:	10007126 	beq	r2,zero,2002b6e0 <__adddf3+0x82c>
2002b51c:	4811883a 	mov	r8,r9
2002b520:	3023883a 	mov	r17,r6
2002b524:	3825883a 	mov	r18,r7
2002b528:	0401ffc4 	movi	r16,2047
2002b52c:	003e8006 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b530:	4462b03a 	or	r17,r8,r17
2002b534:	8822c03a 	cmpne	r17,r17,zero
2002b538:	0007883a 	mov	r3,zero
2002b53c:	003f8b06 	br	2002b36c <__alt_data_end+0xfffebf6c>
2002b540:	0141ffc4 	movi	r5,2047
2002b544:	11403b26 	beq	r2,r5,2002b634 <__adddf3+0x780>
2002b548:	0109c83a 	sub	r4,zero,r4
2002b54c:	42002034 	orhi	r8,r8,128
2002b550:	01400e04 	movi	r5,56
2002b554:	29006716 	blt	r5,r4,2002b6f4 <__adddf3+0x840>
2002b558:	014007c4 	movi	r5,31
2002b55c:	29007016 	blt	r5,r4,2002b720 <__adddf3+0x86c>
2002b560:	01400804 	movi	r5,32
2002b564:	290bc83a 	sub	r5,r5,r4
2002b568:	4154983a 	sll	r10,r8,r5
2002b56c:	890ed83a 	srl	r7,r17,r4
2002b570:	894a983a 	sll	r5,r17,r5
2002b574:	4108d83a 	srl	r4,r8,r4
2002b578:	51e2b03a 	or	r17,r10,r7
2002b57c:	280ac03a 	cmpne	r5,r5,zero
2002b580:	8962b03a 	or	r17,r17,r5
2002b584:	89a3883a 	add	r17,r17,r6
2002b588:	2253883a 	add	r9,r4,r9
2002b58c:	898d803a 	cmpltu	r6,r17,r6
2002b590:	3251883a 	add	r8,r6,r9
2002b594:	1021883a 	mov	r16,r2
2002b598:	003ee506 	br	2002b130 <__alt_data_end+0xfffebd30>
2002b59c:	4984b03a 	or	r2,r9,r6
2002b5a0:	103e6326 	beq	r2,zero,2002af30 <__alt_data_end+0xfffebb30>
2002b5a4:	8987c83a 	sub	r3,r17,r6
2002b5a8:	88c9803a 	cmpltu	r4,r17,r3
2002b5ac:	4245c83a 	sub	r2,r8,r9
2002b5b0:	1105c83a 	sub	r2,r2,r4
2002b5b4:	1100202c 	andhi	r4,r2,128
2002b5b8:	203ebb26 	beq	r4,zero,2002b0a8 <__alt_data_end+0xfffebca8>
2002b5bc:	3463c83a 	sub	r17,r6,r17
2002b5c0:	4a07c83a 	sub	r3,r9,r8
2002b5c4:	344d803a 	cmpltu	r6,r6,r17
2002b5c8:	1991c83a 	sub	r8,r3,r6
2002b5cc:	3825883a 	mov	r18,r7
2002b5d0:	003e5706 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b5d4:	4984b03a 	or	r2,r9,r6
2002b5d8:	10002e26 	beq	r2,zero,2002b694 <__adddf3+0x7e0>
2002b5dc:	4004d0fa 	srli	r2,r8,3
2002b5e0:	8822d0fa 	srli	r17,r17,3
2002b5e4:	4010977a 	slli	r8,r8,29
2002b5e8:	10c0022c 	andhi	r3,r2,8
2002b5ec:	4462b03a 	or	r17,r8,r17
2002b5f0:	18000826 	beq	r3,zero,2002b614 <__adddf3+0x760>
2002b5f4:	4808d0fa 	srli	r4,r9,3
2002b5f8:	20c0022c 	andhi	r3,r4,8
2002b5fc:	1800051e 	bne	r3,zero,2002b614 <__adddf3+0x760>
2002b600:	300cd0fa 	srli	r6,r6,3
2002b604:	4806977a 	slli	r3,r9,29
2002b608:	2005883a 	mov	r2,r4
2002b60c:	3825883a 	mov	r18,r7
2002b610:	19a2b03a 	or	r17,r3,r6
2002b614:	8810d77a 	srli	r8,r17,29
2002b618:	100490fa 	slli	r2,r2,3
2002b61c:	882290fa 	slli	r17,r17,3
2002b620:	0401ffc4 	movi	r16,2047
2002b624:	4090b03a 	or	r8,r8,r2
2002b628:	003e4106 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b62c:	0141ffc4 	movi	r5,2047
2002b630:	117fc71e 	bne	r2,r5,2002b550 <__alt_data_end+0xfffec150>
2002b634:	4811883a 	mov	r8,r9
2002b638:	3023883a 	mov	r17,r6
2002b63c:	1021883a 	mov	r16,r2
2002b640:	003e3b06 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b644:	10002f26 	beq	r2,zero,2002b704 <__adddf3+0x850>
2002b648:	4984b03a 	or	r2,r9,r6
2002b64c:	10001126 	beq	r2,zero,2002b694 <__adddf3+0x7e0>
2002b650:	4004d0fa 	srli	r2,r8,3
2002b654:	8822d0fa 	srli	r17,r17,3
2002b658:	4010977a 	slli	r8,r8,29
2002b65c:	10c0022c 	andhi	r3,r2,8
2002b660:	4462b03a 	or	r17,r8,r17
2002b664:	183feb26 	beq	r3,zero,2002b614 <__alt_data_end+0xfffec214>
2002b668:	4808d0fa 	srli	r4,r9,3
2002b66c:	20c0022c 	andhi	r3,r4,8
2002b670:	183fe81e 	bne	r3,zero,2002b614 <__alt_data_end+0xfffec214>
2002b674:	300cd0fa 	srli	r6,r6,3
2002b678:	4806977a 	slli	r3,r9,29
2002b67c:	2005883a 	mov	r2,r4
2002b680:	19a2b03a 	or	r17,r3,r6
2002b684:	003fe306 	br	2002b614 <__alt_data_end+0xfffec214>
2002b688:	0011883a 	mov	r8,zero
2002b68c:	0005883a 	mov	r2,zero
2002b690:	003e3f06 	br	2002af90 <__alt_data_end+0xfffebb90>
2002b694:	0401ffc4 	movi	r16,2047
2002b698:	003e2506 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b69c:	0013883a 	mov	r9,zero
2002b6a0:	003f8406 	br	2002b4b4 <__alt_data_end+0xfffec0b4>
2002b6a4:	0005883a 	mov	r2,zero
2002b6a8:	0007883a 	mov	r3,zero
2002b6ac:	003e8906 	br	2002b0d4 <__alt_data_end+0xfffebcd4>
2002b6b0:	197ff804 	addi	r5,r3,-32
2002b6b4:	01000804 	movi	r4,32
2002b6b8:	414ad83a 	srl	r5,r8,r5
2002b6bc:	19002426 	beq	r3,r4,2002b750 <__adddf3+0x89c>
2002b6c0:	01001004 	movi	r4,64
2002b6c4:	20c7c83a 	sub	r3,r4,r3
2002b6c8:	40c6983a 	sll	r3,r8,r3
2002b6cc:	1c46b03a 	or	r3,r3,r17
2002b6d0:	1806c03a 	cmpne	r3,r3,zero
2002b6d4:	28e2b03a 	or	r17,r5,r3
2002b6d8:	0007883a 	mov	r3,zero
2002b6dc:	003f2306 	br	2002b36c <__alt_data_end+0xfffebf6c>
2002b6e0:	0007883a 	mov	r3,zero
2002b6e4:	5811883a 	mov	r8,r11
2002b6e8:	00bfffc4 	movi	r2,-1
2002b6ec:	0401ffc4 	movi	r16,2047
2002b6f0:	003e7806 	br	2002b0d4 <__alt_data_end+0xfffebcd4>
2002b6f4:	4462b03a 	or	r17,r8,r17
2002b6f8:	8822c03a 	cmpne	r17,r17,zero
2002b6fc:	0009883a 	mov	r4,zero
2002b700:	003fa006 	br	2002b584 <__alt_data_end+0xfffec184>
2002b704:	4811883a 	mov	r8,r9
2002b708:	3023883a 	mov	r17,r6
2002b70c:	0401ffc4 	movi	r16,2047
2002b710:	003e0706 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b714:	4811883a 	mov	r8,r9
2002b718:	3023883a 	mov	r17,r6
2002b71c:	003e0406 	br	2002af30 <__alt_data_end+0xfffebb30>
2002b720:	21fff804 	addi	r7,r4,-32
2002b724:	01400804 	movi	r5,32
2002b728:	41ced83a 	srl	r7,r8,r7
2002b72c:	21400a26 	beq	r4,r5,2002b758 <__adddf3+0x8a4>
2002b730:	01401004 	movi	r5,64
2002b734:	2909c83a 	sub	r4,r5,r4
2002b738:	4108983a 	sll	r4,r8,r4
2002b73c:	2448b03a 	or	r4,r4,r17
2002b740:	2008c03a 	cmpne	r4,r4,zero
2002b744:	3922b03a 	or	r17,r7,r4
2002b748:	0009883a 	mov	r4,zero
2002b74c:	003f8d06 	br	2002b584 <__alt_data_end+0xfffec184>
2002b750:	0007883a 	mov	r3,zero
2002b754:	003fdd06 	br	2002b6cc <__alt_data_end+0xfffec2cc>
2002b758:	0009883a 	mov	r4,zero
2002b75c:	003ff706 	br	2002b73c <__alt_data_end+0xfffec33c>

2002b760 <__divdf3>:
2002b760:	defff204 	addi	sp,sp,-56
2002b764:	dd400915 	stw	r21,36(sp)
2002b768:	282ad53a 	srli	r21,r5,20
2002b76c:	dd000815 	stw	r20,32(sp)
2002b770:	2828d7fa 	srli	r20,r5,31
2002b774:	dc000415 	stw	r16,16(sp)
2002b778:	04000434 	movhi	r16,16
2002b77c:	df000c15 	stw	fp,48(sp)
2002b780:	843fffc4 	addi	r16,r16,-1
2002b784:	dfc00d15 	stw	ra,52(sp)
2002b788:	ddc00b15 	stw	r23,44(sp)
2002b78c:	dd800a15 	stw	r22,40(sp)
2002b790:	dcc00715 	stw	r19,28(sp)
2002b794:	dc800615 	stw	r18,24(sp)
2002b798:	dc400515 	stw	r17,20(sp)
2002b79c:	ad41ffcc 	andi	r21,r21,2047
2002b7a0:	2c20703a 	and	r16,r5,r16
2002b7a4:	a7003fcc 	andi	fp,r20,255
2002b7a8:	a8006126 	beq	r21,zero,2002b930 <__divdf3+0x1d0>
2002b7ac:	0081ffc4 	movi	r2,2047
2002b7b0:	2025883a 	mov	r18,r4
2002b7b4:	a8803726 	beq	r21,r2,2002b894 <__divdf3+0x134>
2002b7b8:	80800434 	orhi	r2,r16,16
2002b7bc:	100490fa 	slli	r2,r2,3
2002b7c0:	2020d77a 	srli	r16,r4,29
2002b7c4:	202490fa 	slli	r18,r4,3
2002b7c8:	ad7f0044 	addi	r21,r21,-1023
2002b7cc:	80a0b03a 	or	r16,r16,r2
2002b7d0:	0027883a 	mov	r19,zero
2002b7d4:	0013883a 	mov	r9,zero
2002b7d8:	3804d53a 	srli	r2,r7,20
2002b7dc:	382cd7fa 	srli	r22,r7,31
2002b7e0:	04400434 	movhi	r17,16
2002b7e4:	8c7fffc4 	addi	r17,r17,-1
2002b7e8:	1081ffcc 	andi	r2,r2,2047
2002b7ec:	3011883a 	mov	r8,r6
2002b7f0:	3c62703a 	and	r17,r7,r17
2002b7f4:	b5c03fcc 	andi	r23,r22,255
2002b7f8:	10006c26 	beq	r2,zero,2002b9ac <__divdf3+0x24c>
2002b7fc:	00c1ffc4 	movi	r3,2047
2002b800:	10c06426 	beq	r2,r3,2002b994 <__divdf3+0x234>
2002b804:	88c00434 	orhi	r3,r17,16
2002b808:	180690fa 	slli	r3,r3,3
2002b80c:	3022d77a 	srli	r17,r6,29
2002b810:	301090fa 	slli	r8,r6,3
2002b814:	10bf0044 	addi	r2,r2,-1023
2002b818:	88e2b03a 	or	r17,r17,r3
2002b81c:	000f883a 	mov	r7,zero
2002b820:	a58cf03a 	xor	r6,r20,r22
2002b824:	3cc8b03a 	or	r4,r7,r19
2002b828:	a8abc83a 	sub	r21,r21,r2
2002b82c:	008003c4 	movi	r2,15
2002b830:	3007883a 	mov	r3,r6
2002b834:	34c03fcc 	andi	r19,r6,255
2002b838:	11009036 	bltu	r2,r4,2002ba7c <__divdf3+0x31c>
2002b83c:	200890ba 	slli	r4,r4,2
2002b840:	008800f4 	movhi	r2,8195
2002b844:	10ae1504 	addi	r2,r2,-18348
2002b848:	2089883a 	add	r4,r4,r2
2002b84c:	20800017 	ldw	r2,0(r4)
2002b850:	1000683a 	jmp	r2
2002b854:	2002ba7c 	xorhi	zero,r4,2793
2002b858:	2002b8cc 	andi	zero,r4,2787
2002b85c:	2002ba6c 	andhi	zero,r4,2793
2002b860:	2002b8c0 	call	22002b8c <__alt_data_end+0x1fc378c>
2002b864:	2002ba6c 	andhi	zero,r4,2793
2002b868:	2002ba40 	call	22002ba4 <__alt_data_end+0x1fc37a4>
2002b86c:	2002ba6c 	andhi	zero,r4,2793
2002b870:	2002b8c0 	call	22002b8c <__alt_data_end+0x1fc378c>
2002b874:	2002b8cc 	andi	zero,r4,2787
2002b878:	2002b8cc 	andi	zero,r4,2787
2002b87c:	2002ba40 	call	22002ba4 <__alt_data_end+0x1fc37a4>
2002b880:	2002b8c0 	call	22002b8c <__alt_data_end+0x1fc378c>
2002b884:	2002b8b0 	cmpltui	zero,r4,2786
2002b888:	2002b8b0 	cmpltui	zero,r4,2786
2002b88c:	2002b8b0 	cmpltui	zero,r4,2786
2002b890:	2002bd60 	cmpeqi	zero,r4,2805
2002b894:	2404b03a 	or	r2,r4,r16
2002b898:	1000661e 	bne	r2,zero,2002ba34 <__divdf3+0x2d4>
2002b89c:	04c00204 	movi	r19,8
2002b8a0:	0021883a 	mov	r16,zero
2002b8a4:	0025883a 	mov	r18,zero
2002b8a8:	02400084 	movi	r9,2
2002b8ac:	003fca06 	br	2002b7d8 <__alt_data_end+0xfffec3d8>
2002b8b0:	8023883a 	mov	r17,r16
2002b8b4:	9011883a 	mov	r8,r18
2002b8b8:	e02f883a 	mov	r23,fp
2002b8bc:	480f883a 	mov	r7,r9
2002b8c0:	00800084 	movi	r2,2
2002b8c4:	3881311e 	bne	r7,r2,2002bd8c <__divdf3+0x62c>
2002b8c8:	b827883a 	mov	r19,r23
2002b8cc:	98c0004c 	andi	r3,r19,1
2002b8d0:	0081ffc4 	movi	r2,2047
2002b8d4:	000b883a 	mov	r5,zero
2002b8d8:	0025883a 	mov	r18,zero
2002b8dc:	1004953a 	slli	r2,r2,20
2002b8e0:	18c03fcc 	andi	r3,r3,255
2002b8e4:	04400434 	movhi	r17,16
2002b8e8:	8c7fffc4 	addi	r17,r17,-1
2002b8ec:	180697fa 	slli	r3,r3,31
2002b8f0:	2c4a703a 	and	r5,r5,r17
2002b8f4:	288ab03a 	or	r5,r5,r2
2002b8f8:	28c6b03a 	or	r3,r5,r3
2002b8fc:	9005883a 	mov	r2,r18
2002b900:	dfc00d17 	ldw	ra,52(sp)
2002b904:	df000c17 	ldw	fp,48(sp)
2002b908:	ddc00b17 	ldw	r23,44(sp)
2002b90c:	dd800a17 	ldw	r22,40(sp)
2002b910:	dd400917 	ldw	r21,36(sp)
2002b914:	dd000817 	ldw	r20,32(sp)
2002b918:	dcc00717 	ldw	r19,28(sp)
2002b91c:	dc800617 	ldw	r18,24(sp)
2002b920:	dc400517 	ldw	r17,20(sp)
2002b924:	dc000417 	ldw	r16,16(sp)
2002b928:	dec00e04 	addi	sp,sp,56
2002b92c:	f800283a 	ret
2002b930:	2404b03a 	or	r2,r4,r16
2002b934:	2027883a 	mov	r19,r4
2002b938:	10003926 	beq	r2,zero,2002ba20 <__divdf3+0x2c0>
2002b93c:	80012e26 	beq	r16,zero,2002bdf8 <__divdf3+0x698>
2002b940:	8009883a 	mov	r4,r16
2002b944:	d9800315 	stw	r6,12(sp)
2002b948:	d9c00215 	stw	r7,8(sp)
2002b94c:	002d4b80 	call	2002d4b8 <__clzsi2>
2002b950:	d9800317 	ldw	r6,12(sp)
2002b954:	d9c00217 	ldw	r7,8(sp)
2002b958:	113ffd44 	addi	r4,r2,-11
2002b95c:	00c00704 	movi	r3,28
2002b960:	19012116 	blt	r3,r4,2002bde8 <__divdf3+0x688>
2002b964:	00c00744 	movi	r3,29
2002b968:	147ffe04 	addi	r17,r2,-8
2002b96c:	1907c83a 	sub	r3,r3,r4
2002b970:	8460983a 	sll	r16,r16,r17
2002b974:	98c6d83a 	srl	r3,r19,r3
2002b978:	9c64983a 	sll	r18,r19,r17
2002b97c:	1c20b03a 	or	r16,r3,r16
2002b980:	1080fcc4 	addi	r2,r2,1011
2002b984:	00abc83a 	sub	r21,zero,r2
2002b988:	0027883a 	mov	r19,zero
2002b98c:	0013883a 	mov	r9,zero
2002b990:	003f9106 	br	2002b7d8 <__alt_data_end+0xfffec3d8>
2002b994:	3446b03a 	or	r3,r6,r17
2002b998:	18001f1e 	bne	r3,zero,2002ba18 <__divdf3+0x2b8>
2002b99c:	0023883a 	mov	r17,zero
2002b9a0:	0011883a 	mov	r8,zero
2002b9a4:	01c00084 	movi	r7,2
2002b9a8:	003f9d06 	br	2002b820 <__alt_data_end+0xfffec420>
2002b9ac:	3446b03a 	or	r3,r6,r17
2002b9b0:	18001526 	beq	r3,zero,2002ba08 <__divdf3+0x2a8>
2002b9b4:	88011b26 	beq	r17,zero,2002be24 <__divdf3+0x6c4>
2002b9b8:	8809883a 	mov	r4,r17
2002b9bc:	d9800315 	stw	r6,12(sp)
2002b9c0:	da400115 	stw	r9,4(sp)
2002b9c4:	002d4b80 	call	2002d4b8 <__clzsi2>
2002b9c8:	d9800317 	ldw	r6,12(sp)
2002b9cc:	da400117 	ldw	r9,4(sp)
2002b9d0:	113ffd44 	addi	r4,r2,-11
2002b9d4:	00c00704 	movi	r3,28
2002b9d8:	19010e16 	blt	r3,r4,2002be14 <__divdf3+0x6b4>
2002b9dc:	00c00744 	movi	r3,29
2002b9e0:	123ffe04 	addi	r8,r2,-8
2002b9e4:	1907c83a 	sub	r3,r3,r4
2002b9e8:	8a22983a 	sll	r17,r17,r8
2002b9ec:	30c6d83a 	srl	r3,r6,r3
2002b9f0:	3210983a 	sll	r8,r6,r8
2002b9f4:	1c62b03a 	or	r17,r3,r17
2002b9f8:	1080fcc4 	addi	r2,r2,1011
2002b9fc:	0085c83a 	sub	r2,zero,r2
2002ba00:	000f883a 	mov	r7,zero
2002ba04:	003f8606 	br	2002b820 <__alt_data_end+0xfffec420>
2002ba08:	0023883a 	mov	r17,zero
2002ba0c:	0011883a 	mov	r8,zero
2002ba10:	01c00044 	movi	r7,1
2002ba14:	003f8206 	br	2002b820 <__alt_data_end+0xfffec420>
2002ba18:	01c000c4 	movi	r7,3
2002ba1c:	003f8006 	br	2002b820 <__alt_data_end+0xfffec420>
2002ba20:	04c00104 	movi	r19,4
2002ba24:	0021883a 	mov	r16,zero
2002ba28:	0025883a 	mov	r18,zero
2002ba2c:	02400044 	movi	r9,1
2002ba30:	003f6906 	br	2002b7d8 <__alt_data_end+0xfffec3d8>
2002ba34:	04c00304 	movi	r19,12
2002ba38:	024000c4 	movi	r9,3
2002ba3c:	003f6606 	br	2002b7d8 <__alt_data_end+0xfffec3d8>
2002ba40:	01400434 	movhi	r5,16
2002ba44:	0007883a 	mov	r3,zero
2002ba48:	297fffc4 	addi	r5,r5,-1
2002ba4c:	04bfffc4 	movi	r18,-1
2002ba50:	0081ffc4 	movi	r2,2047
2002ba54:	003fa106 	br	2002b8dc <__alt_data_end+0xfffec4dc>
2002ba58:	00c00044 	movi	r3,1
2002ba5c:	1887c83a 	sub	r3,r3,r2
2002ba60:	01000e04 	movi	r4,56
2002ba64:	20c1210e 	bge	r4,r3,2002beec <__divdf3+0x78c>
2002ba68:	98c0004c 	andi	r3,r19,1
2002ba6c:	0005883a 	mov	r2,zero
2002ba70:	000b883a 	mov	r5,zero
2002ba74:	0025883a 	mov	r18,zero
2002ba78:	003f9806 	br	2002b8dc <__alt_data_end+0xfffec4dc>
2002ba7c:	8c00fd36 	bltu	r17,r16,2002be74 <__divdf3+0x714>
2002ba80:	8440fb26 	beq	r16,r17,2002be70 <__divdf3+0x710>
2002ba84:	8007883a 	mov	r3,r16
2002ba88:	ad7fffc4 	addi	r21,r21,-1
2002ba8c:	0021883a 	mov	r16,zero
2002ba90:	4004d63a 	srli	r2,r8,24
2002ba94:	8822923a 	slli	r17,r17,8
2002ba98:	1809883a 	mov	r4,r3
2002ba9c:	402c923a 	slli	r22,r8,8
2002baa0:	88b8b03a 	or	fp,r17,r2
2002baa4:	e028d43a 	srli	r20,fp,16
2002baa8:	d8c00015 	stw	r3,0(sp)
2002baac:	e5ffffcc 	andi	r23,fp,65535
2002bab0:	a00b883a 	mov	r5,r20
2002bab4:	0020a900 	call	20020a90 <__udivsi3>
2002bab8:	d8c00017 	ldw	r3,0(sp)
2002babc:	a00b883a 	mov	r5,r20
2002bac0:	d8800315 	stw	r2,12(sp)
2002bac4:	1809883a 	mov	r4,r3
2002bac8:	0020af40 	call	20020af4 <__umodsi3>
2002bacc:	d9800317 	ldw	r6,12(sp)
2002bad0:	1006943a 	slli	r3,r2,16
2002bad4:	9004d43a 	srli	r2,r18,16
2002bad8:	b9a3383a 	mul	r17,r23,r6
2002badc:	10c4b03a 	or	r2,r2,r3
2002bae0:	1440062e 	bgeu	r2,r17,2002bafc <__divdf3+0x39c>
2002bae4:	1705883a 	add	r2,r2,fp
2002bae8:	30ffffc4 	addi	r3,r6,-1
2002baec:	1700ee36 	bltu	r2,fp,2002bea8 <__divdf3+0x748>
2002baf0:	1440ed2e 	bgeu	r2,r17,2002bea8 <__divdf3+0x748>
2002baf4:	31bfff84 	addi	r6,r6,-2
2002baf8:	1705883a 	add	r2,r2,fp
2002bafc:	1463c83a 	sub	r17,r2,r17
2002bb00:	a00b883a 	mov	r5,r20
2002bb04:	8809883a 	mov	r4,r17
2002bb08:	d9800315 	stw	r6,12(sp)
2002bb0c:	0020a900 	call	20020a90 <__udivsi3>
2002bb10:	a00b883a 	mov	r5,r20
2002bb14:	8809883a 	mov	r4,r17
2002bb18:	d8800215 	stw	r2,8(sp)
2002bb1c:	0020af40 	call	20020af4 <__umodsi3>
2002bb20:	d9c00217 	ldw	r7,8(sp)
2002bb24:	1004943a 	slli	r2,r2,16
2002bb28:	94bfffcc 	andi	r18,r18,65535
2002bb2c:	b9d1383a 	mul	r8,r23,r7
2002bb30:	90a4b03a 	or	r18,r18,r2
2002bb34:	d9800317 	ldw	r6,12(sp)
2002bb38:	9200062e 	bgeu	r18,r8,2002bb54 <__divdf3+0x3f4>
2002bb3c:	9725883a 	add	r18,r18,fp
2002bb40:	38bfffc4 	addi	r2,r7,-1
2002bb44:	9700d636 	bltu	r18,fp,2002bea0 <__divdf3+0x740>
2002bb48:	9200d52e 	bgeu	r18,r8,2002bea0 <__divdf3+0x740>
2002bb4c:	39ffff84 	addi	r7,r7,-2
2002bb50:	9725883a 	add	r18,r18,fp
2002bb54:	3004943a 	slli	r2,r6,16
2002bb58:	b012d43a 	srli	r9,r22,16
2002bb5c:	b1bfffcc 	andi	r6,r22,65535
2002bb60:	11e2b03a 	or	r17,r2,r7
2002bb64:	8806d43a 	srli	r3,r17,16
2002bb68:	893fffcc 	andi	r4,r17,65535
2002bb6c:	218b383a 	mul	r5,r4,r6
2002bb70:	30c5383a 	mul	r2,r6,r3
2002bb74:	2249383a 	mul	r4,r4,r9
2002bb78:	280ed43a 	srli	r7,r5,16
2002bb7c:	9225c83a 	sub	r18,r18,r8
2002bb80:	2089883a 	add	r4,r4,r2
2002bb84:	3909883a 	add	r4,r7,r4
2002bb88:	1a47383a 	mul	r3,r3,r9
2002bb8c:	2080022e 	bgeu	r4,r2,2002bb98 <__divdf3+0x438>
2002bb90:	00800074 	movhi	r2,1
2002bb94:	1887883a 	add	r3,r3,r2
2002bb98:	2004d43a 	srli	r2,r4,16
2002bb9c:	2008943a 	slli	r4,r4,16
2002bba0:	297fffcc 	andi	r5,r5,65535
2002bba4:	10c7883a 	add	r3,r2,r3
2002bba8:	2149883a 	add	r4,r4,r5
2002bbac:	90c0a536 	bltu	r18,r3,2002be44 <__divdf3+0x6e4>
2002bbb0:	90c0bf26 	beq	r18,r3,2002beb0 <__divdf3+0x750>
2002bbb4:	90c7c83a 	sub	r3,r18,r3
2002bbb8:	810fc83a 	sub	r7,r16,r4
2002bbbc:	81e5803a 	cmpltu	r18,r16,r7
2002bbc0:	1ca5c83a 	sub	r18,r3,r18
2002bbc4:	e480c126 	beq	fp,r18,2002becc <__divdf3+0x76c>
2002bbc8:	a00b883a 	mov	r5,r20
2002bbcc:	9009883a 	mov	r4,r18
2002bbd0:	d9800315 	stw	r6,12(sp)
2002bbd4:	d9c00215 	stw	r7,8(sp)
2002bbd8:	da400115 	stw	r9,4(sp)
2002bbdc:	0020a900 	call	20020a90 <__udivsi3>
2002bbe0:	a00b883a 	mov	r5,r20
2002bbe4:	9009883a 	mov	r4,r18
2002bbe8:	d8800015 	stw	r2,0(sp)
2002bbec:	0020af40 	call	20020af4 <__umodsi3>
2002bbf0:	d9c00217 	ldw	r7,8(sp)
2002bbf4:	da000017 	ldw	r8,0(sp)
2002bbf8:	1006943a 	slli	r3,r2,16
2002bbfc:	3804d43a 	srli	r2,r7,16
2002bc00:	ba21383a 	mul	r16,r23,r8
2002bc04:	d9800317 	ldw	r6,12(sp)
2002bc08:	10c4b03a 	or	r2,r2,r3
2002bc0c:	da400117 	ldw	r9,4(sp)
2002bc10:	1400062e 	bgeu	r2,r16,2002bc2c <__divdf3+0x4cc>
2002bc14:	1705883a 	add	r2,r2,fp
2002bc18:	40ffffc4 	addi	r3,r8,-1
2002bc1c:	1700ad36 	bltu	r2,fp,2002bed4 <__divdf3+0x774>
2002bc20:	1400ac2e 	bgeu	r2,r16,2002bed4 <__divdf3+0x774>
2002bc24:	423fff84 	addi	r8,r8,-2
2002bc28:	1705883a 	add	r2,r2,fp
2002bc2c:	1421c83a 	sub	r16,r2,r16
2002bc30:	a00b883a 	mov	r5,r20
2002bc34:	8009883a 	mov	r4,r16
2002bc38:	d9800315 	stw	r6,12(sp)
2002bc3c:	d9c00215 	stw	r7,8(sp)
2002bc40:	da000015 	stw	r8,0(sp)
2002bc44:	da400115 	stw	r9,4(sp)
2002bc48:	0020a900 	call	20020a90 <__udivsi3>
2002bc4c:	8009883a 	mov	r4,r16
2002bc50:	a00b883a 	mov	r5,r20
2002bc54:	1025883a 	mov	r18,r2
2002bc58:	0020af40 	call	20020af4 <__umodsi3>
2002bc5c:	d9c00217 	ldw	r7,8(sp)
2002bc60:	1004943a 	slli	r2,r2,16
2002bc64:	bcaf383a 	mul	r23,r23,r18
2002bc68:	393fffcc 	andi	r4,r7,65535
2002bc6c:	2088b03a 	or	r4,r4,r2
2002bc70:	d9800317 	ldw	r6,12(sp)
2002bc74:	da000017 	ldw	r8,0(sp)
2002bc78:	da400117 	ldw	r9,4(sp)
2002bc7c:	25c0062e 	bgeu	r4,r23,2002bc98 <__divdf3+0x538>
2002bc80:	2709883a 	add	r4,r4,fp
2002bc84:	90bfffc4 	addi	r2,r18,-1
2002bc88:	27009436 	bltu	r4,fp,2002bedc <__divdf3+0x77c>
2002bc8c:	25c0932e 	bgeu	r4,r23,2002bedc <__divdf3+0x77c>
2002bc90:	94bfff84 	addi	r18,r18,-2
2002bc94:	2709883a 	add	r4,r4,fp
2002bc98:	4004943a 	slli	r2,r8,16
2002bc9c:	25efc83a 	sub	r23,r4,r23
2002bca0:	1490b03a 	or	r8,r2,r18
2002bca4:	4008d43a 	srli	r4,r8,16
2002bca8:	40ffffcc 	andi	r3,r8,65535
2002bcac:	30c5383a 	mul	r2,r6,r3
2002bcb0:	1a47383a 	mul	r3,r3,r9
2002bcb4:	310d383a 	mul	r6,r6,r4
2002bcb8:	100ad43a 	srli	r5,r2,16
2002bcbc:	4913383a 	mul	r9,r9,r4
2002bcc0:	1987883a 	add	r3,r3,r6
2002bcc4:	28c7883a 	add	r3,r5,r3
2002bcc8:	1980022e 	bgeu	r3,r6,2002bcd4 <__divdf3+0x574>
2002bccc:	01000074 	movhi	r4,1
2002bcd0:	4913883a 	add	r9,r9,r4
2002bcd4:	1808d43a 	srli	r4,r3,16
2002bcd8:	1806943a 	slli	r3,r3,16
2002bcdc:	10bfffcc 	andi	r2,r2,65535
2002bce0:	2253883a 	add	r9,r4,r9
2002bce4:	1887883a 	add	r3,r3,r2
2002bce8:	ba403836 	bltu	r23,r9,2002bdcc <__divdf3+0x66c>
2002bcec:	ba403626 	beq	r23,r9,2002bdc8 <__divdf3+0x668>
2002bcf0:	42000054 	ori	r8,r8,1
2002bcf4:	a880ffc4 	addi	r2,r21,1023
2002bcf8:	00bf570e 	bge	zero,r2,2002ba58 <__alt_data_end+0xfffec658>
2002bcfc:	40c001cc 	andi	r3,r8,7
2002bd00:	18000726 	beq	r3,zero,2002bd20 <__divdf3+0x5c0>
2002bd04:	40c003cc 	andi	r3,r8,15
2002bd08:	01000104 	movi	r4,4
2002bd0c:	19000426 	beq	r3,r4,2002bd20 <__divdf3+0x5c0>
2002bd10:	4107883a 	add	r3,r8,r4
2002bd14:	1a11803a 	cmpltu	r8,r3,r8
2002bd18:	8a23883a 	add	r17,r17,r8
2002bd1c:	1811883a 	mov	r8,r3
2002bd20:	88c0402c 	andhi	r3,r17,256
2002bd24:	18000426 	beq	r3,zero,2002bd38 <__divdf3+0x5d8>
2002bd28:	00ffc034 	movhi	r3,65280
2002bd2c:	18ffffc4 	addi	r3,r3,-1
2002bd30:	a8810004 	addi	r2,r21,1024
2002bd34:	88e2703a 	and	r17,r17,r3
2002bd38:	00c1ff84 	movi	r3,2046
2002bd3c:	18bee316 	blt	r3,r2,2002b8cc <__alt_data_end+0xfffec4cc>
2002bd40:	8824977a 	slli	r18,r17,29
2002bd44:	4010d0fa 	srli	r8,r8,3
2002bd48:	8822927a 	slli	r17,r17,9
2002bd4c:	1081ffcc 	andi	r2,r2,2047
2002bd50:	9224b03a 	or	r18,r18,r8
2002bd54:	880ad33a 	srli	r5,r17,12
2002bd58:	98c0004c 	andi	r3,r19,1
2002bd5c:	003edf06 	br	2002b8dc <__alt_data_end+0xfffec4dc>
2002bd60:	8080022c 	andhi	r2,r16,8
2002bd64:	10001226 	beq	r2,zero,2002bdb0 <__divdf3+0x650>
2002bd68:	8880022c 	andhi	r2,r17,8
2002bd6c:	1000101e 	bne	r2,zero,2002bdb0 <__divdf3+0x650>
2002bd70:	00800434 	movhi	r2,16
2002bd74:	89400234 	orhi	r5,r17,8
2002bd78:	10bfffc4 	addi	r2,r2,-1
2002bd7c:	b007883a 	mov	r3,r22
2002bd80:	288a703a 	and	r5,r5,r2
2002bd84:	4025883a 	mov	r18,r8
2002bd88:	003f3106 	br	2002ba50 <__alt_data_end+0xfffec650>
2002bd8c:	008000c4 	movi	r2,3
2002bd90:	3880a626 	beq	r7,r2,2002c02c <__divdf3+0x8cc>
2002bd94:	00800044 	movi	r2,1
2002bd98:	3880521e 	bne	r7,r2,2002bee4 <__divdf3+0x784>
2002bd9c:	b807883a 	mov	r3,r23
2002bda0:	0005883a 	mov	r2,zero
2002bda4:	000b883a 	mov	r5,zero
2002bda8:	0025883a 	mov	r18,zero
2002bdac:	003ecb06 	br	2002b8dc <__alt_data_end+0xfffec4dc>
2002bdb0:	00800434 	movhi	r2,16
2002bdb4:	81400234 	orhi	r5,r16,8
2002bdb8:	10bfffc4 	addi	r2,r2,-1
2002bdbc:	a007883a 	mov	r3,r20
2002bdc0:	288a703a 	and	r5,r5,r2
2002bdc4:	003f2206 	br	2002ba50 <__alt_data_end+0xfffec650>
2002bdc8:	183fca26 	beq	r3,zero,2002bcf4 <__alt_data_end+0xfffec8f4>
2002bdcc:	e5ef883a 	add	r23,fp,r23
2002bdd0:	40bfffc4 	addi	r2,r8,-1
2002bdd4:	bf00392e 	bgeu	r23,fp,2002bebc <__divdf3+0x75c>
2002bdd8:	1011883a 	mov	r8,r2
2002bddc:	ba7fc41e 	bne	r23,r9,2002bcf0 <__alt_data_end+0xfffec8f0>
2002bde0:	b0ffc31e 	bne	r22,r3,2002bcf0 <__alt_data_end+0xfffec8f0>
2002bde4:	003fc306 	br	2002bcf4 <__alt_data_end+0xfffec8f4>
2002bde8:	143ff604 	addi	r16,r2,-40
2002bdec:	9c20983a 	sll	r16,r19,r16
2002bdf0:	0025883a 	mov	r18,zero
2002bdf4:	003ee206 	br	2002b980 <__alt_data_end+0xfffec580>
2002bdf8:	d9800315 	stw	r6,12(sp)
2002bdfc:	d9c00215 	stw	r7,8(sp)
2002be00:	002d4b80 	call	2002d4b8 <__clzsi2>
2002be04:	10800804 	addi	r2,r2,32
2002be08:	d9c00217 	ldw	r7,8(sp)
2002be0c:	d9800317 	ldw	r6,12(sp)
2002be10:	003ed106 	br	2002b958 <__alt_data_end+0xfffec558>
2002be14:	147ff604 	addi	r17,r2,-40
2002be18:	3462983a 	sll	r17,r6,r17
2002be1c:	0011883a 	mov	r8,zero
2002be20:	003ef506 	br	2002b9f8 <__alt_data_end+0xfffec5f8>
2002be24:	3009883a 	mov	r4,r6
2002be28:	d9800315 	stw	r6,12(sp)
2002be2c:	da400115 	stw	r9,4(sp)
2002be30:	002d4b80 	call	2002d4b8 <__clzsi2>
2002be34:	10800804 	addi	r2,r2,32
2002be38:	da400117 	ldw	r9,4(sp)
2002be3c:	d9800317 	ldw	r6,12(sp)
2002be40:	003ee306 	br	2002b9d0 <__alt_data_end+0xfffec5d0>
2002be44:	85a1883a 	add	r16,r16,r22
2002be48:	8585803a 	cmpltu	r2,r16,r22
2002be4c:	1705883a 	add	r2,r2,fp
2002be50:	14a5883a 	add	r18,r2,r18
2002be54:	88bfffc4 	addi	r2,r17,-1
2002be58:	e4800c2e 	bgeu	fp,r18,2002be8c <__divdf3+0x72c>
2002be5c:	90c03e36 	bltu	r18,r3,2002bf58 <__divdf3+0x7f8>
2002be60:	1c806926 	beq	r3,r18,2002c008 <__divdf3+0x8a8>
2002be64:	90c7c83a 	sub	r3,r18,r3
2002be68:	1023883a 	mov	r17,r2
2002be6c:	003f5206 	br	2002bbb8 <__alt_data_end+0xfffec7b8>
2002be70:	923f0436 	bltu	r18,r8,2002ba84 <__alt_data_end+0xfffec684>
2002be74:	800897fa 	slli	r4,r16,31
2002be78:	9004d07a 	srli	r2,r18,1
2002be7c:	8006d07a 	srli	r3,r16,1
2002be80:	902097fa 	slli	r16,r18,31
2002be84:	20a4b03a 	or	r18,r4,r2
2002be88:	003f0106 	br	2002ba90 <__alt_data_end+0xfffec690>
2002be8c:	e4bff51e 	bne	fp,r18,2002be64 <__alt_data_end+0xfffeca64>
2002be90:	85bff22e 	bgeu	r16,r22,2002be5c <__alt_data_end+0xfffeca5c>
2002be94:	e0c7c83a 	sub	r3,fp,r3
2002be98:	1023883a 	mov	r17,r2
2002be9c:	003f4606 	br	2002bbb8 <__alt_data_end+0xfffec7b8>
2002bea0:	100f883a 	mov	r7,r2
2002bea4:	003f2b06 	br	2002bb54 <__alt_data_end+0xfffec754>
2002bea8:	180d883a 	mov	r6,r3
2002beac:	003f1306 	br	2002bafc <__alt_data_end+0xfffec6fc>
2002beb0:	813fe436 	bltu	r16,r4,2002be44 <__alt_data_end+0xfffeca44>
2002beb4:	0007883a 	mov	r3,zero
2002beb8:	003f3f06 	br	2002bbb8 <__alt_data_end+0xfffec7b8>
2002bebc:	ba402c36 	bltu	r23,r9,2002bf70 <__divdf3+0x810>
2002bec0:	4dc05426 	beq	r9,r23,2002c014 <__divdf3+0x8b4>
2002bec4:	1011883a 	mov	r8,r2
2002bec8:	003f8906 	br	2002bcf0 <__alt_data_end+0xfffec8f0>
2002becc:	023fffc4 	movi	r8,-1
2002bed0:	003f8806 	br	2002bcf4 <__alt_data_end+0xfffec8f4>
2002bed4:	1811883a 	mov	r8,r3
2002bed8:	003f5406 	br	2002bc2c <__alt_data_end+0xfffec82c>
2002bedc:	1025883a 	mov	r18,r2
2002bee0:	003f6d06 	br	2002bc98 <__alt_data_end+0xfffec898>
2002bee4:	b827883a 	mov	r19,r23
2002bee8:	003f8206 	br	2002bcf4 <__alt_data_end+0xfffec8f4>
2002beec:	010007c4 	movi	r4,31
2002bef0:	20c02616 	blt	r4,r3,2002bf8c <__divdf3+0x82c>
2002bef4:	00800804 	movi	r2,32
2002bef8:	10c5c83a 	sub	r2,r2,r3
2002befc:	888a983a 	sll	r5,r17,r2
2002bf00:	40c8d83a 	srl	r4,r8,r3
2002bf04:	4084983a 	sll	r2,r8,r2
2002bf08:	88e2d83a 	srl	r17,r17,r3
2002bf0c:	2906b03a 	or	r3,r5,r4
2002bf10:	1004c03a 	cmpne	r2,r2,zero
2002bf14:	1886b03a 	or	r3,r3,r2
2002bf18:	188001cc 	andi	r2,r3,7
2002bf1c:	10000726 	beq	r2,zero,2002bf3c <__divdf3+0x7dc>
2002bf20:	188003cc 	andi	r2,r3,15
2002bf24:	01000104 	movi	r4,4
2002bf28:	11000426 	beq	r2,r4,2002bf3c <__divdf3+0x7dc>
2002bf2c:	1805883a 	mov	r2,r3
2002bf30:	10c00104 	addi	r3,r2,4
2002bf34:	1885803a 	cmpltu	r2,r3,r2
2002bf38:	88a3883a 	add	r17,r17,r2
2002bf3c:	8880202c 	andhi	r2,r17,128
2002bf40:	10002726 	beq	r2,zero,2002bfe0 <__divdf3+0x880>
2002bf44:	98c0004c 	andi	r3,r19,1
2002bf48:	00800044 	movi	r2,1
2002bf4c:	000b883a 	mov	r5,zero
2002bf50:	0025883a 	mov	r18,zero
2002bf54:	003e6106 	br	2002b8dc <__alt_data_end+0xfffec4dc>
2002bf58:	85a1883a 	add	r16,r16,r22
2002bf5c:	8585803a 	cmpltu	r2,r16,r22
2002bf60:	1705883a 	add	r2,r2,fp
2002bf64:	14a5883a 	add	r18,r2,r18
2002bf68:	8c7fff84 	addi	r17,r17,-2
2002bf6c:	003f1106 	br	2002bbb4 <__alt_data_end+0xfffec7b4>
2002bf70:	b589883a 	add	r4,r22,r22
2002bf74:	25ad803a 	cmpltu	r22,r4,r22
2002bf78:	b739883a 	add	fp,r22,fp
2002bf7c:	40bfff84 	addi	r2,r8,-2
2002bf80:	bf2f883a 	add	r23,r23,fp
2002bf84:	202d883a 	mov	r22,r4
2002bf88:	003f9306 	br	2002bdd8 <__alt_data_end+0xfffec9d8>
2002bf8c:	013ff844 	movi	r4,-31
2002bf90:	2085c83a 	sub	r2,r4,r2
2002bf94:	8888d83a 	srl	r4,r17,r2
2002bf98:	00800804 	movi	r2,32
2002bf9c:	18802126 	beq	r3,r2,2002c024 <__divdf3+0x8c4>
2002bfa0:	00801004 	movi	r2,64
2002bfa4:	10c5c83a 	sub	r2,r2,r3
2002bfa8:	8884983a 	sll	r2,r17,r2
2002bfac:	1204b03a 	or	r2,r2,r8
2002bfb0:	1004c03a 	cmpne	r2,r2,zero
2002bfb4:	2084b03a 	or	r2,r4,r2
2002bfb8:	144001cc 	andi	r17,r2,7
2002bfbc:	88000d1e 	bne	r17,zero,2002bff4 <__divdf3+0x894>
2002bfc0:	000b883a 	mov	r5,zero
2002bfc4:	1024d0fa 	srli	r18,r2,3
2002bfc8:	98c0004c 	andi	r3,r19,1
2002bfcc:	0005883a 	mov	r2,zero
2002bfd0:	9464b03a 	or	r18,r18,r17
2002bfd4:	003e4106 	br	2002b8dc <__alt_data_end+0xfffec4dc>
2002bfd8:	1007883a 	mov	r3,r2
2002bfdc:	0023883a 	mov	r17,zero
2002bfe0:	880a927a 	slli	r5,r17,9
2002bfe4:	1805883a 	mov	r2,r3
2002bfe8:	8822977a 	slli	r17,r17,29
2002bfec:	280ad33a 	srli	r5,r5,12
2002bff0:	003ff406 	br	2002bfc4 <__alt_data_end+0xfffecbc4>
2002bff4:	10c003cc 	andi	r3,r2,15
2002bff8:	01000104 	movi	r4,4
2002bffc:	193ff626 	beq	r3,r4,2002bfd8 <__alt_data_end+0xfffecbd8>
2002c000:	0023883a 	mov	r17,zero
2002c004:	003fca06 	br	2002bf30 <__alt_data_end+0xfffecb30>
2002c008:	813fd336 	bltu	r16,r4,2002bf58 <__alt_data_end+0xfffecb58>
2002c00c:	1023883a 	mov	r17,r2
2002c010:	003fa806 	br	2002beb4 <__alt_data_end+0xfffecab4>
2002c014:	b0ffd636 	bltu	r22,r3,2002bf70 <__alt_data_end+0xfffecb70>
2002c018:	1011883a 	mov	r8,r2
2002c01c:	b0ff341e 	bne	r22,r3,2002bcf0 <__alt_data_end+0xfffec8f0>
2002c020:	003f3406 	br	2002bcf4 <__alt_data_end+0xfffec8f4>
2002c024:	0005883a 	mov	r2,zero
2002c028:	003fe006 	br	2002bfac <__alt_data_end+0xfffecbac>
2002c02c:	00800434 	movhi	r2,16
2002c030:	89400234 	orhi	r5,r17,8
2002c034:	10bfffc4 	addi	r2,r2,-1
2002c038:	b807883a 	mov	r3,r23
2002c03c:	288a703a 	and	r5,r5,r2
2002c040:	4025883a 	mov	r18,r8
2002c044:	003e8206 	br	2002ba50 <__alt_data_end+0xfffec650>

2002c048 <__eqdf2>:
2002c048:	2804d53a 	srli	r2,r5,20
2002c04c:	3806d53a 	srli	r3,r7,20
2002c050:	02000434 	movhi	r8,16
2002c054:	423fffc4 	addi	r8,r8,-1
2002c058:	1081ffcc 	andi	r2,r2,2047
2002c05c:	0281ffc4 	movi	r10,2047
2002c060:	2a12703a 	and	r9,r5,r8
2002c064:	18c1ffcc 	andi	r3,r3,2047
2002c068:	3a10703a 	and	r8,r7,r8
2002c06c:	280ad7fa 	srli	r5,r5,31
2002c070:	380ed7fa 	srli	r7,r7,31
2002c074:	12801026 	beq	r2,r10,2002c0b8 <__eqdf2+0x70>
2002c078:	0281ffc4 	movi	r10,2047
2002c07c:	1a800a26 	beq	r3,r10,2002c0a8 <__eqdf2+0x60>
2002c080:	10c00226 	beq	r2,r3,2002c08c <__eqdf2+0x44>
2002c084:	00800044 	movi	r2,1
2002c088:	f800283a 	ret
2002c08c:	4a3ffd1e 	bne	r9,r8,2002c084 <__alt_data_end+0xfffecc84>
2002c090:	21bffc1e 	bne	r4,r6,2002c084 <__alt_data_end+0xfffecc84>
2002c094:	29c00c26 	beq	r5,r7,2002c0c8 <__eqdf2+0x80>
2002c098:	103ffa1e 	bne	r2,zero,2002c084 <__alt_data_end+0xfffecc84>
2002c09c:	2244b03a 	or	r2,r4,r9
2002c0a0:	1004c03a 	cmpne	r2,r2,zero
2002c0a4:	f800283a 	ret
2002c0a8:	3214b03a 	or	r10,r6,r8
2002c0ac:	503ff426 	beq	r10,zero,2002c080 <__alt_data_end+0xfffecc80>
2002c0b0:	00800044 	movi	r2,1
2002c0b4:	f800283a 	ret
2002c0b8:	2254b03a 	or	r10,r4,r9
2002c0bc:	503fee26 	beq	r10,zero,2002c078 <__alt_data_end+0xfffecc78>
2002c0c0:	00800044 	movi	r2,1
2002c0c4:	f800283a 	ret
2002c0c8:	0005883a 	mov	r2,zero
2002c0cc:	f800283a 	ret

2002c0d0 <__gedf2>:
2002c0d0:	2804d53a 	srli	r2,r5,20
2002c0d4:	3806d53a 	srli	r3,r7,20
2002c0d8:	02000434 	movhi	r8,16
2002c0dc:	423fffc4 	addi	r8,r8,-1
2002c0e0:	1081ffcc 	andi	r2,r2,2047
2002c0e4:	0241ffc4 	movi	r9,2047
2002c0e8:	2a14703a 	and	r10,r5,r8
2002c0ec:	18c1ffcc 	andi	r3,r3,2047
2002c0f0:	3a10703a 	and	r8,r7,r8
2002c0f4:	280ad7fa 	srli	r5,r5,31
2002c0f8:	380ed7fa 	srli	r7,r7,31
2002c0fc:	12401d26 	beq	r2,r9,2002c174 <__gedf2+0xa4>
2002c100:	0241ffc4 	movi	r9,2047
2002c104:	1a401226 	beq	r3,r9,2002c150 <__gedf2+0x80>
2002c108:	1000081e 	bne	r2,zero,2002c12c <__gedf2+0x5c>
2002c10c:	2296b03a 	or	r11,r4,r10
2002c110:	5813003a 	cmpeq	r9,r11,zero
2002c114:	1800091e 	bne	r3,zero,2002c13c <__gedf2+0x6c>
2002c118:	3218b03a 	or	r12,r6,r8
2002c11c:	6000071e 	bne	r12,zero,2002c13c <__gedf2+0x6c>
2002c120:	0005883a 	mov	r2,zero
2002c124:	5800101e 	bne	r11,zero,2002c168 <__gedf2+0x98>
2002c128:	f800283a 	ret
2002c12c:	18000c1e 	bne	r3,zero,2002c160 <__gedf2+0x90>
2002c130:	3212b03a 	or	r9,r6,r8
2002c134:	48000c26 	beq	r9,zero,2002c168 <__gedf2+0x98>
2002c138:	0013883a 	mov	r9,zero
2002c13c:	39c03fcc 	andi	r7,r7,255
2002c140:	48000826 	beq	r9,zero,2002c164 <__gedf2+0x94>
2002c144:	38000926 	beq	r7,zero,2002c16c <__gedf2+0x9c>
2002c148:	00800044 	movi	r2,1
2002c14c:	f800283a 	ret
2002c150:	3212b03a 	or	r9,r6,r8
2002c154:	483fec26 	beq	r9,zero,2002c108 <__alt_data_end+0xfffecd08>
2002c158:	00bfff84 	movi	r2,-2
2002c15c:	f800283a 	ret
2002c160:	39c03fcc 	andi	r7,r7,255
2002c164:	29c00626 	beq	r5,r7,2002c180 <__gedf2+0xb0>
2002c168:	283ff726 	beq	r5,zero,2002c148 <__alt_data_end+0xfffecd48>
2002c16c:	00bfffc4 	movi	r2,-1
2002c170:	f800283a 	ret
2002c174:	2292b03a 	or	r9,r4,r10
2002c178:	483fe126 	beq	r9,zero,2002c100 <__alt_data_end+0xfffecd00>
2002c17c:	003ff606 	br	2002c158 <__alt_data_end+0xfffecd58>
2002c180:	18bff916 	blt	r3,r2,2002c168 <__alt_data_end+0xfffecd68>
2002c184:	10c00316 	blt	r2,r3,2002c194 <__gedf2+0xc4>
2002c188:	42bff736 	bltu	r8,r10,2002c168 <__alt_data_end+0xfffecd68>
2002c18c:	52000326 	beq	r10,r8,2002c19c <__gedf2+0xcc>
2002c190:	5200042e 	bgeu	r10,r8,2002c1a4 <__gedf2+0xd4>
2002c194:	283fec1e 	bne	r5,zero,2002c148 <__alt_data_end+0xfffecd48>
2002c198:	003ff406 	br	2002c16c <__alt_data_end+0xfffecd6c>
2002c19c:	313ff236 	bltu	r6,r4,2002c168 <__alt_data_end+0xfffecd68>
2002c1a0:	21bffc36 	bltu	r4,r6,2002c194 <__alt_data_end+0xfffecd94>
2002c1a4:	0005883a 	mov	r2,zero
2002c1a8:	f800283a 	ret

2002c1ac <__ledf2>:
2002c1ac:	2804d53a 	srli	r2,r5,20
2002c1b0:	3810d53a 	srli	r8,r7,20
2002c1b4:	00c00434 	movhi	r3,16
2002c1b8:	18ffffc4 	addi	r3,r3,-1
2002c1bc:	1081ffcc 	andi	r2,r2,2047
2002c1c0:	0241ffc4 	movi	r9,2047
2002c1c4:	28d4703a 	and	r10,r5,r3
2002c1c8:	4201ffcc 	andi	r8,r8,2047
2002c1cc:	38c6703a 	and	r3,r7,r3
2002c1d0:	280ad7fa 	srli	r5,r5,31
2002c1d4:	380ed7fa 	srli	r7,r7,31
2002c1d8:	12401f26 	beq	r2,r9,2002c258 <__ledf2+0xac>
2002c1dc:	0241ffc4 	movi	r9,2047
2002c1e0:	42401426 	beq	r8,r9,2002c234 <__ledf2+0x88>
2002c1e4:	1000091e 	bne	r2,zero,2002c20c <__ledf2+0x60>
2002c1e8:	2296b03a 	or	r11,r4,r10
2002c1ec:	5813003a 	cmpeq	r9,r11,zero
2002c1f0:	29403fcc 	andi	r5,r5,255
2002c1f4:	40000a1e 	bne	r8,zero,2002c220 <__ledf2+0x74>
2002c1f8:	30d8b03a 	or	r12,r6,r3
2002c1fc:	6000081e 	bne	r12,zero,2002c220 <__ledf2+0x74>
2002c200:	0005883a 	mov	r2,zero
2002c204:	5800111e 	bne	r11,zero,2002c24c <__ledf2+0xa0>
2002c208:	f800283a 	ret
2002c20c:	29403fcc 	andi	r5,r5,255
2002c210:	40000c1e 	bne	r8,zero,2002c244 <__ledf2+0x98>
2002c214:	30d2b03a 	or	r9,r6,r3
2002c218:	48000c26 	beq	r9,zero,2002c24c <__ledf2+0xa0>
2002c21c:	0013883a 	mov	r9,zero
2002c220:	39c03fcc 	andi	r7,r7,255
2002c224:	48000826 	beq	r9,zero,2002c248 <__ledf2+0x9c>
2002c228:	38001126 	beq	r7,zero,2002c270 <__ledf2+0xc4>
2002c22c:	00800044 	movi	r2,1
2002c230:	f800283a 	ret
2002c234:	30d2b03a 	or	r9,r6,r3
2002c238:	483fea26 	beq	r9,zero,2002c1e4 <__alt_data_end+0xfffecde4>
2002c23c:	00800084 	movi	r2,2
2002c240:	f800283a 	ret
2002c244:	39c03fcc 	andi	r7,r7,255
2002c248:	39400726 	beq	r7,r5,2002c268 <__ledf2+0xbc>
2002c24c:	2800081e 	bne	r5,zero,2002c270 <__ledf2+0xc4>
2002c250:	00800044 	movi	r2,1
2002c254:	f800283a 	ret
2002c258:	2292b03a 	or	r9,r4,r10
2002c25c:	483fdf26 	beq	r9,zero,2002c1dc <__alt_data_end+0xfffecddc>
2002c260:	00800084 	movi	r2,2
2002c264:	f800283a 	ret
2002c268:	4080030e 	bge	r8,r2,2002c278 <__ledf2+0xcc>
2002c26c:	383fef26 	beq	r7,zero,2002c22c <__alt_data_end+0xfffece2c>
2002c270:	00bfffc4 	movi	r2,-1
2002c274:	f800283a 	ret
2002c278:	123feb16 	blt	r2,r8,2002c228 <__alt_data_end+0xfffece28>
2002c27c:	1abff336 	bltu	r3,r10,2002c24c <__alt_data_end+0xfffece4c>
2002c280:	50c00326 	beq	r10,r3,2002c290 <__ledf2+0xe4>
2002c284:	50c0042e 	bgeu	r10,r3,2002c298 <__ledf2+0xec>
2002c288:	283fe81e 	bne	r5,zero,2002c22c <__alt_data_end+0xfffece2c>
2002c28c:	003ff806 	br	2002c270 <__alt_data_end+0xfffece70>
2002c290:	313fee36 	bltu	r6,r4,2002c24c <__alt_data_end+0xfffece4c>
2002c294:	21bffc36 	bltu	r4,r6,2002c288 <__alt_data_end+0xfffece88>
2002c298:	0005883a 	mov	r2,zero
2002c29c:	f800283a 	ret

2002c2a0 <__muldf3>:
2002c2a0:	defff304 	addi	sp,sp,-52
2002c2a4:	2804d53a 	srli	r2,r5,20
2002c2a8:	dd800915 	stw	r22,36(sp)
2002c2ac:	282cd7fa 	srli	r22,r5,31
2002c2b0:	dc000315 	stw	r16,12(sp)
2002c2b4:	04000434 	movhi	r16,16
2002c2b8:	dd400815 	stw	r21,32(sp)
2002c2bc:	dc800515 	stw	r18,20(sp)
2002c2c0:	843fffc4 	addi	r16,r16,-1
2002c2c4:	dfc00c15 	stw	ra,48(sp)
2002c2c8:	df000b15 	stw	fp,44(sp)
2002c2cc:	ddc00a15 	stw	r23,40(sp)
2002c2d0:	dd000715 	stw	r20,28(sp)
2002c2d4:	dcc00615 	stw	r19,24(sp)
2002c2d8:	dc400415 	stw	r17,16(sp)
2002c2dc:	1481ffcc 	andi	r18,r2,2047
2002c2e0:	2c20703a 	and	r16,r5,r16
2002c2e4:	b02b883a 	mov	r21,r22
2002c2e8:	b2403fcc 	andi	r9,r22,255
2002c2ec:	90006026 	beq	r18,zero,2002c470 <__muldf3+0x1d0>
2002c2f0:	0081ffc4 	movi	r2,2047
2002c2f4:	2029883a 	mov	r20,r4
2002c2f8:	90803626 	beq	r18,r2,2002c3d4 <__muldf3+0x134>
2002c2fc:	80800434 	orhi	r2,r16,16
2002c300:	100490fa 	slli	r2,r2,3
2002c304:	2020d77a 	srli	r16,r4,29
2002c308:	202890fa 	slli	r20,r4,3
2002c30c:	94bf0044 	addi	r18,r18,-1023
2002c310:	80a0b03a 	or	r16,r16,r2
2002c314:	0027883a 	mov	r19,zero
2002c318:	0039883a 	mov	fp,zero
2002c31c:	3804d53a 	srli	r2,r7,20
2002c320:	382ed7fa 	srli	r23,r7,31
2002c324:	04400434 	movhi	r17,16
2002c328:	8c7fffc4 	addi	r17,r17,-1
2002c32c:	1081ffcc 	andi	r2,r2,2047
2002c330:	3011883a 	mov	r8,r6
2002c334:	3c62703a 	and	r17,r7,r17
2002c338:	ba803fcc 	andi	r10,r23,255
2002c33c:	10006d26 	beq	r2,zero,2002c4f4 <__muldf3+0x254>
2002c340:	00c1ffc4 	movi	r3,2047
2002c344:	10c06526 	beq	r2,r3,2002c4dc <__muldf3+0x23c>
2002c348:	88c00434 	orhi	r3,r17,16
2002c34c:	180690fa 	slli	r3,r3,3
2002c350:	3022d77a 	srli	r17,r6,29
2002c354:	301090fa 	slli	r8,r6,3
2002c358:	10bf0044 	addi	r2,r2,-1023
2002c35c:	88e2b03a 	or	r17,r17,r3
2002c360:	000b883a 	mov	r5,zero
2002c364:	9085883a 	add	r2,r18,r2
2002c368:	2cc8b03a 	or	r4,r5,r19
2002c36c:	00c003c4 	movi	r3,15
2002c370:	bdacf03a 	xor	r22,r23,r22
2002c374:	12c00044 	addi	r11,r2,1
2002c378:	19009936 	bltu	r3,r4,2002c5e0 <__muldf3+0x340>
2002c37c:	200890ba 	slli	r4,r4,2
2002c380:	00c800f4 	movhi	r3,8195
2002c384:	18f0e504 	addi	r3,r3,-15468
2002c388:	20c9883a 	add	r4,r4,r3
2002c38c:	20c00017 	ldw	r3,0(r4)
2002c390:	1800683a 	jmp	r3
2002c394:	2002c5e0 	cmpeqi	zero,r4,2839
2002c398:	2002c3f4 	orhi	zero,r4,2831
2002c39c:	2002c3f4 	orhi	zero,r4,2831
2002c3a0:	2002c3f0 	cmpltui	zero,r4,2831
2002c3a4:	2002c5bc 	xorhi	zero,r4,2838
2002c3a8:	2002c5bc 	xorhi	zero,r4,2838
2002c3ac:	2002c5a4 	muli	zero,r4,2838
2002c3b0:	2002c3f0 	cmpltui	zero,r4,2831
2002c3b4:	2002c5bc 	xorhi	zero,r4,2838
2002c3b8:	2002c5a4 	muli	zero,r4,2838
2002c3bc:	2002c5bc 	xorhi	zero,r4,2838
2002c3c0:	2002c3f0 	cmpltui	zero,r4,2831
2002c3c4:	2002c5cc 	andi	zero,r4,2839
2002c3c8:	2002c5cc 	andi	zero,r4,2839
2002c3cc:	2002c5cc 	andi	zero,r4,2839
2002c3d0:	2002c7e8 	cmpgeui	zero,r4,2847
2002c3d4:	2404b03a 	or	r2,r4,r16
2002c3d8:	10006f1e 	bne	r2,zero,2002c598 <__muldf3+0x2f8>
2002c3dc:	04c00204 	movi	r19,8
2002c3e0:	0021883a 	mov	r16,zero
2002c3e4:	0029883a 	mov	r20,zero
2002c3e8:	07000084 	movi	fp,2
2002c3ec:	003fcb06 	br	2002c31c <__alt_data_end+0xfffecf1c>
2002c3f0:	502d883a 	mov	r22,r10
2002c3f4:	00800084 	movi	r2,2
2002c3f8:	28805726 	beq	r5,r2,2002c558 <__muldf3+0x2b8>
2002c3fc:	008000c4 	movi	r2,3
2002c400:	28816626 	beq	r5,r2,2002c99c <__muldf3+0x6fc>
2002c404:	00800044 	movi	r2,1
2002c408:	2881411e 	bne	r5,r2,2002c910 <__muldf3+0x670>
2002c40c:	b02b883a 	mov	r21,r22
2002c410:	0005883a 	mov	r2,zero
2002c414:	000b883a 	mov	r5,zero
2002c418:	0029883a 	mov	r20,zero
2002c41c:	1004953a 	slli	r2,r2,20
2002c420:	a8c03fcc 	andi	r3,r21,255
2002c424:	04400434 	movhi	r17,16
2002c428:	8c7fffc4 	addi	r17,r17,-1
2002c42c:	180697fa 	slli	r3,r3,31
2002c430:	2c4a703a 	and	r5,r5,r17
2002c434:	288ab03a 	or	r5,r5,r2
2002c438:	28c6b03a 	or	r3,r5,r3
2002c43c:	a005883a 	mov	r2,r20
2002c440:	dfc00c17 	ldw	ra,48(sp)
2002c444:	df000b17 	ldw	fp,44(sp)
2002c448:	ddc00a17 	ldw	r23,40(sp)
2002c44c:	dd800917 	ldw	r22,36(sp)
2002c450:	dd400817 	ldw	r21,32(sp)
2002c454:	dd000717 	ldw	r20,28(sp)
2002c458:	dcc00617 	ldw	r19,24(sp)
2002c45c:	dc800517 	ldw	r18,20(sp)
2002c460:	dc400417 	ldw	r17,16(sp)
2002c464:	dc000317 	ldw	r16,12(sp)
2002c468:	dec00d04 	addi	sp,sp,52
2002c46c:	f800283a 	ret
2002c470:	2404b03a 	or	r2,r4,r16
2002c474:	2027883a 	mov	r19,r4
2002c478:	10004226 	beq	r2,zero,2002c584 <__muldf3+0x2e4>
2002c47c:	8000fc26 	beq	r16,zero,2002c870 <__muldf3+0x5d0>
2002c480:	8009883a 	mov	r4,r16
2002c484:	d9800215 	stw	r6,8(sp)
2002c488:	d9c00015 	stw	r7,0(sp)
2002c48c:	da400115 	stw	r9,4(sp)
2002c490:	002d4b80 	call	2002d4b8 <__clzsi2>
2002c494:	d9800217 	ldw	r6,8(sp)
2002c498:	d9c00017 	ldw	r7,0(sp)
2002c49c:	da400117 	ldw	r9,4(sp)
2002c4a0:	113ffd44 	addi	r4,r2,-11
2002c4a4:	00c00704 	movi	r3,28
2002c4a8:	1900ed16 	blt	r3,r4,2002c860 <__muldf3+0x5c0>
2002c4ac:	00c00744 	movi	r3,29
2002c4b0:	147ffe04 	addi	r17,r2,-8
2002c4b4:	1907c83a 	sub	r3,r3,r4
2002c4b8:	8460983a 	sll	r16,r16,r17
2002c4bc:	98c6d83a 	srl	r3,r19,r3
2002c4c0:	9c68983a 	sll	r20,r19,r17
2002c4c4:	1c20b03a 	or	r16,r3,r16
2002c4c8:	1080fcc4 	addi	r2,r2,1011
2002c4cc:	00a5c83a 	sub	r18,zero,r2
2002c4d0:	0027883a 	mov	r19,zero
2002c4d4:	0039883a 	mov	fp,zero
2002c4d8:	003f9006 	br	2002c31c <__alt_data_end+0xfffecf1c>
2002c4dc:	3446b03a 	or	r3,r6,r17
2002c4e0:	1800261e 	bne	r3,zero,2002c57c <__muldf3+0x2dc>
2002c4e4:	0023883a 	mov	r17,zero
2002c4e8:	0011883a 	mov	r8,zero
2002c4ec:	01400084 	movi	r5,2
2002c4f0:	003f9c06 	br	2002c364 <__alt_data_end+0xfffecf64>
2002c4f4:	3446b03a 	or	r3,r6,r17
2002c4f8:	18001c26 	beq	r3,zero,2002c56c <__muldf3+0x2cc>
2002c4fc:	8800ce26 	beq	r17,zero,2002c838 <__muldf3+0x598>
2002c500:	8809883a 	mov	r4,r17
2002c504:	d9800215 	stw	r6,8(sp)
2002c508:	da400115 	stw	r9,4(sp)
2002c50c:	da800015 	stw	r10,0(sp)
2002c510:	002d4b80 	call	2002d4b8 <__clzsi2>
2002c514:	d9800217 	ldw	r6,8(sp)
2002c518:	da400117 	ldw	r9,4(sp)
2002c51c:	da800017 	ldw	r10,0(sp)
2002c520:	113ffd44 	addi	r4,r2,-11
2002c524:	00c00704 	movi	r3,28
2002c528:	1900bf16 	blt	r3,r4,2002c828 <__muldf3+0x588>
2002c52c:	00c00744 	movi	r3,29
2002c530:	123ffe04 	addi	r8,r2,-8
2002c534:	1907c83a 	sub	r3,r3,r4
2002c538:	8a22983a 	sll	r17,r17,r8
2002c53c:	30c6d83a 	srl	r3,r6,r3
2002c540:	3210983a 	sll	r8,r6,r8
2002c544:	1c62b03a 	or	r17,r3,r17
2002c548:	1080fcc4 	addi	r2,r2,1011
2002c54c:	0085c83a 	sub	r2,zero,r2
2002c550:	000b883a 	mov	r5,zero
2002c554:	003f8306 	br	2002c364 <__alt_data_end+0xfffecf64>
2002c558:	b02b883a 	mov	r21,r22
2002c55c:	0081ffc4 	movi	r2,2047
2002c560:	000b883a 	mov	r5,zero
2002c564:	0029883a 	mov	r20,zero
2002c568:	003fac06 	br	2002c41c <__alt_data_end+0xfffed01c>
2002c56c:	0023883a 	mov	r17,zero
2002c570:	0011883a 	mov	r8,zero
2002c574:	01400044 	movi	r5,1
2002c578:	003f7a06 	br	2002c364 <__alt_data_end+0xfffecf64>
2002c57c:	014000c4 	movi	r5,3
2002c580:	003f7806 	br	2002c364 <__alt_data_end+0xfffecf64>
2002c584:	04c00104 	movi	r19,4
2002c588:	0021883a 	mov	r16,zero
2002c58c:	0029883a 	mov	r20,zero
2002c590:	07000044 	movi	fp,1
2002c594:	003f6106 	br	2002c31c <__alt_data_end+0xfffecf1c>
2002c598:	04c00304 	movi	r19,12
2002c59c:	070000c4 	movi	fp,3
2002c5a0:	003f5e06 	br	2002c31c <__alt_data_end+0xfffecf1c>
2002c5a4:	01400434 	movhi	r5,16
2002c5a8:	002b883a 	mov	r21,zero
2002c5ac:	297fffc4 	addi	r5,r5,-1
2002c5b0:	053fffc4 	movi	r20,-1
2002c5b4:	0081ffc4 	movi	r2,2047
2002c5b8:	003f9806 	br	2002c41c <__alt_data_end+0xfffed01c>
2002c5bc:	8023883a 	mov	r17,r16
2002c5c0:	a011883a 	mov	r8,r20
2002c5c4:	e00b883a 	mov	r5,fp
2002c5c8:	003f8a06 	br	2002c3f4 <__alt_data_end+0xfffecff4>
2002c5cc:	8023883a 	mov	r17,r16
2002c5d0:	a011883a 	mov	r8,r20
2002c5d4:	482d883a 	mov	r22,r9
2002c5d8:	e00b883a 	mov	r5,fp
2002c5dc:	003f8506 	br	2002c3f4 <__alt_data_end+0xfffecff4>
2002c5e0:	a00ad43a 	srli	r5,r20,16
2002c5e4:	401ad43a 	srli	r13,r8,16
2002c5e8:	a53fffcc 	andi	r20,r20,65535
2002c5ec:	423fffcc 	andi	r8,r8,65535
2002c5f0:	4519383a 	mul	r12,r8,r20
2002c5f4:	4147383a 	mul	r3,r8,r5
2002c5f8:	6d09383a 	mul	r4,r13,r20
2002c5fc:	600cd43a 	srli	r6,r12,16
2002c600:	2b5d383a 	mul	r14,r5,r13
2002c604:	20c9883a 	add	r4,r4,r3
2002c608:	310d883a 	add	r6,r6,r4
2002c60c:	30c0022e 	bgeu	r6,r3,2002c618 <__muldf3+0x378>
2002c610:	00c00074 	movhi	r3,1
2002c614:	70dd883a 	add	r14,r14,r3
2002c618:	8826d43a 	srli	r19,r17,16
2002c61c:	8bffffcc 	andi	r15,r17,65535
2002c620:	7d23383a 	mul	r17,r15,r20
2002c624:	7949383a 	mul	r4,r15,r5
2002c628:	9d29383a 	mul	r20,r19,r20
2002c62c:	8814d43a 	srli	r10,r17,16
2002c630:	3012943a 	slli	r9,r6,16
2002c634:	a129883a 	add	r20,r20,r4
2002c638:	633fffcc 	andi	r12,r12,65535
2002c63c:	5515883a 	add	r10,r10,r20
2002c640:	3006d43a 	srli	r3,r6,16
2002c644:	4b13883a 	add	r9,r9,r12
2002c648:	2ccb383a 	mul	r5,r5,r19
2002c64c:	5100022e 	bgeu	r10,r4,2002c658 <__muldf3+0x3b8>
2002c650:	01000074 	movhi	r4,1
2002c654:	290b883a 	add	r5,r5,r4
2002c658:	802ad43a 	srli	r21,r16,16
2002c65c:	843fffcc 	andi	r16,r16,65535
2002c660:	440d383a 	mul	r6,r8,r16
2002c664:	4565383a 	mul	r18,r8,r21
2002c668:	8349383a 	mul	r4,r16,r13
2002c66c:	500e943a 	slli	r7,r10,16
2002c670:	3010d43a 	srli	r8,r6,16
2002c674:	5028d43a 	srli	r20,r10,16
2002c678:	2489883a 	add	r4,r4,r18
2002c67c:	8abfffcc 	andi	r10,r17,65535
2002c680:	3a95883a 	add	r10,r7,r10
2002c684:	4119883a 	add	r12,r8,r4
2002c688:	a169883a 	add	r20,r20,r5
2002c68c:	1a87883a 	add	r3,r3,r10
2002c690:	6d5b383a 	mul	r13,r13,r21
2002c694:	6480022e 	bgeu	r12,r18,2002c6a0 <__muldf3+0x400>
2002c698:	01000074 	movhi	r4,1
2002c69c:	691b883a 	add	r13,r13,r4
2002c6a0:	7c25383a 	mul	r18,r15,r16
2002c6a4:	7d4b383a 	mul	r5,r15,r21
2002c6a8:	84cf383a 	mul	r7,r16,r19
2002c6ac:	901ed43a 	srli	r15,r18,16
2002c6b0:	6008d43a 	srli	r4,r12,16
2002c6b4:	6010943a 	slli	r8,r12,16
2002c6b8:	394f883a 	add	r7,r7,r5
2002c6bc:	333fffcc 	andi	r12,r6,65535
2002c6c0:	79df883a 	add	r15,r15,r7
2002c6c4:	235b883a 	add	r13,r4,r13
2002c6c8:	9d63383a 	mul	r17,r19,r21
2002c6cc:	4309883a 	add	r4,r8,r12
2002c6d0:	7940022e 	bgeu	r15,r5,2002c6dc <__muldf3+0x43c>
2002c6d4:	01400074 	movhi	r5,1
2002c6d8:	8963883a 	add	r17,r17,r5
2002c6dc:	780a943a 	slli	r5,r15,16
2002c6e0:	91bfffcc 	andi	r6,r18,65535
2002c6e4:	70c7883a 	add	r3,r14,r3
2002c6e8:	298d883a 	add	r6,r5,r6
2002c6ec:	1a8f803a 	cmpltu	r7,r3,r10
2002c6f0:	350b883a 	add	r5,r6,r20
2002c6f4:	20c7883a 	add	r3,r4,r3
2002c6f8:	3955883a 	add	r10,r7,r5
2002c6fc:	1909803a 	cmpltu	r4,r3,r4
2002c700:	6a91883a 	add	r8,r13,r10
2002c704:	780cd43a 	srli	r6,r15,16
2002c708:	2219883a 	add	r12,r4,r8
2002c70c:	2d0b803a 	cmpltu	r5,r5,r20
2002c710:	51cf803a 	cmpltu	r7,r10,r7
2002c714:	29ceb03a 	or	r7,r5,r7
2002c718:	4351803a 	cmpltu	r8,r8,r13
2002c71c:	610b803a 	cmpltu	r5,r12,r4
2002c720:	4148b03a 	or	r4,r8,r5
2002c724:	398f883a 	add	r7,r7,r6
2002c728:	3909883a 	add	r4,r7,r4
2002c72c:	1810927a 	slli	r8,r3,9
2002c730:	2449883a 	add	r4,r4,r17
2002c734:	2008927a 	slli	r4,r4,9
2002c738:	6022d5fa 	srli	r17,r12,23
2002c73c:	1806d5fa 	srli	r3,r3,23
2002c740:	4252b03a 	or	r9,r8,r9
2002c744:	600a927a 	slli	r5,r12,9
2002c748:	4810c03a 	cmpne	r8,r9,zero
2002c74c:	2462b03a 	or	r17,r4,r17
2002c750:	40c6b03a 	or	r3,r8,r3
2002c754:	8900402c 	andhi	r4,r17,256
2002c758:	1950b03a 	or	r8,r3,r5
2002c75c:	20000726 	beq	r4,zero,2002c77c <__muldf3+0x4dc>
2002c760:	4006d07a 	srli	r3,r8,1
2002c764:	880497fa 	slli	r2,r17,31
2002c768:	4200004c 	andi	r8,r8,1
2002c76c:	8822d07a 	srli	r17,r17,1
2002c770:	1a10b03a 	or	r8,r3,r8
2002c774:	1210b03a 	or	r8,r2,r8
2002c778:	5805883a 	mov	r2,r11
2002c77c:	1140ffc4 	addi	r5,r2,1023
2002c780:	0140440e 	bge	zero,r5,2002c894 <__muldf3+0x5f4>
2002c784:	40c001cc 	andi	r3,r8,7
2002c788:	18000726 	beq	r3,zero,2002c7a8 <__muldf3+0x508>
2002c78c:	40c003cc 	andi	r3,r8,15
2002c790:	01000104 	movi	r4,4
2002c794:	19000426 	beq	r3,r4,2002c7a8 <__muldf3+0x508>
2002c798:	4107883a 	add	r3,r8,r4
2002c79c:	1a11803a 	cmpltu	r8,r3,r8
2002c7a0:	8a23883a 	add	r17,r17,r8
2002c7a4:	1811883a 	mov	r8,r3
2002c7a8:	88c0402c 	andhi	r3,r17,256
2002c7ac:	18000426 	beq	r3,zero,2002c7c0 <__muldf3+0x520>
2002c7b0:	11410004 	addi	r5,r2,1024
2002c7b4:	00bfc034 	movhi	r2,65280
2002c7b8:	10bfffc4 	addi	r2,r2,-1
2002c7bc:	88a2703a 	and	r17,r17,r2
2002c7c0:	0081ff84 	movi	r2,2046
2002c7c4:	117f6416 	blt	r2,r5,2002c558 <__alt_data_end+0xfffed158>
2002c7c8:	8828977a 	slli	r20,r17,29
2002c7cc:	4010d0fa 	srli	r8,r8,3
2002c7d0:	8822927a 	slli	r17,r17,9
2002c7d4:	2881ffcc 	andi	r2,r5,2047
2002c7d8:	a228b03a 	or	r20,r20,r8
2002c7dc:	880ad33a 	srli	r5,r17,12
2002c7e0:	b02b883a 	mov	r21,r22
2002c7e4:	003f0d06 	br	2002c41c <__alt_data_end+0xfffed01c>
2002c7e8:	8080022c 	andhi	r2,r16,8
2002c7ec:	10000926 	beq	r2,zero,2002c814 <__muldf3+0x574>
2002c7f0:	8880022c 	andhi	r2,r17,8
2002c7f4:	1000071e 	bne	r2,zero,2002c814 <__muldf3+0x574>
2002c7f8:	00800434 	movhi	r2,16
2002c7fc:	89400234 	orhi	r5,r17,8
2002c800:	10bfffc4 	addi	r2,r2,-1
2002c804:	b82b883a 	mov	r21,r23
2002c808:	288a703a 	and	r5,r5,r2
2002c80c:	4029883a 	mov	r20,r8
2002c810:	003f6806 	br	2002c5b4 <__alt_data_end+0xfffed1b4>
2002c814:	00800434 	movhi	r2,16
2002c818:	81400234 	orhi	r5,r16,8
2002c81c:	10bfffc4 	addi	r2,r2,-1
2002c820:	288a703a 	and	r5,r5,r2
2002c824:	003f6306 	br	2002c5b4 <__alt_data_end+0xfffed1b4>
2002c828:	147ff604 	addi	r17,r2,-40
2002c82c:	3462983a 	sll	r17,r6,r17
2002c830:	0011883a 	mov	r8,zero
2002c834:	003f4406 	br	2002c548 <__alt_data_end+0xfffed148>
2002c838:	3009883a 	mov	r4,r6
2002c83c:	d9800215 	stw	r6,8(sp)
2002c840:	da400115 	stw	r9,4(sp)
2002c844:	da800015 	stw	r10,0(sp)
2002c848:	002d4b80 	call	2002d4b8 <__clzsi2>
2002c84c:	10800804 	addi	r2,r2,32
2002c850:	da800017 	ldw	r10,0(sp)
2002c854:	da400117 	ldw	r9,4(sp)
2002c858:	d9800217 	ldw	r6,8(sp)
2002c85c:	003f3006 	br	2002c520 <__alt_data_end+0xfffed120>
2002c860:	143ff604 	addi	r16,r2,-40
2002c864:	9c20983a 	sll	r16,r19,r16
2002c868:	0029883a 	mov	r20,zero
2002c86c:	003f1606 	br	2002c4c8 <__alt_data_end+0xfffed0c8>
2002c870:	d9800215 	stw	r6,8(sp)
2002c874:	d9c00015 	stw	r7,0(sp)
2002c878:	da400115 	stw	r9,4(sp)
2002c87c:	002d4b80 	call	2002d4b8 <__clzsi2>
2002c880:	10800804 	addi	r2,r2,32
2002c884:	da400117 	ldw	r9,4(sp)
2002c888:	d9c00017 	ldw	r7,0(sp)
2002c88c:	d9800217 	ldw	r6,8(sp)
2002c890:	003f0306 	br	2002c4a0 <__alt_data_end+0xfffed0a0>
2002c894:	00c00044 	movi	r3,1
2002c898:	1947c83a 	sub	r3,r3,r5
2002c89c:	00800e04 	movi	r2,56
2002c8a0:	10feda16 	blt	r2,r3,2002c40c <__alt_data_end+0xfffed00c>
2002c8a4:	008007c4 	movi	r2,31
2002c8a8:	10c01b16 	blt	r2,r3,2002c918 <__muldf3+0x678>
2002c8ac:	00800804 	movi	r2,32
2002c8b0:	10c5c83a 	sub	r2,r2,r3
2002c8b4:	888a983a 	sll	r5,r17,r2
2002c8b8:	40c8d83a 	srl	r4,r8,r3
2002c8bc:	4084983a 	sll	r2,r8,r2
2002c8c0:	88e2d83a 	srl	r17,r17,r3
2002c8c4:	2906b03a 	or	r3,r5,r4
2002c8c8:	1004c03a 	cmpne	r2,r2,zero
2002c8cc:	1886b03a 	or	r3,r3,r2
2002c8d0:	188001cc 	andi	r2,r3,7
2002c8d4:	10000726 	beq	r2,zero,2002c8f4 <__muldf3+0x654>
2002c8d8:	188003cc 	andi	r2,r3,15
2002c8dc:	01000104 	movi	r4,4
2002c8e0:	11000426 	beq	r2,r4,2002c8f4 <__muldf3+0x654>
2002c8e4:	1805883a 	mov	r2,r3
2002c8e8:	10c00104 	addi	r3,r2,4
2002c8ec:	1885803a 	cmpltu	r2,r3,r2
2002c8f0:	88a3883a 	add	r17,r17,r2
2002c8f4:	8880202c 	andhi	r2,r17,128
2002c8f8:	10001c26 	beq	r2,zero,2002c96c <__muldf3+0x6cc>
2002c8fc:	b02b883a 	mov	r21,r22
2002c900:	00800044 	movi	r2,1
2002c904:	000b883a 	mov	r5,zero
2002c908:	0029883a 	mov	r20,zero
2002c90c:	003ec306 	br	2002c41c <__alt_data_end+0xfffed01c>
2002c910:	5805883a 	mov	r2,r11
2002c914:	003f9906 	br	2002c77c <__alt_data_end+0xfffed37c>
2002c918:	00bff844 	movi	r2,-31
2002c91c:	1145c83a 	sub	r2,r2,r5
2002c920:	8888d83a 	srl	r4,r17,r2
2002c924:	00800804 	movi	r2,32
2002c928:	18801a26 	beq	r3,r2,2002c994 <__muldf3+0x6f4>
2002c92c:	00801004 	movi	r2,64
2002c930:	10c5c83a 	sub	r2,r2,r3
2002c934:	8884983a 	sll	r2,r17,r2
2002c938:	1204b03a 	or	r2,r2,r8
2002c93c:	1004c03a 	cmpne	r2,r2,zero
2002c940:	2084b03a 	or	r2,r4,r2
2002c944:	144001cc 	andi	r17,r2,7
2002c948:	88000d1e 	bne	r17,zero,2002c980 <__muldf3+0x6e0>
2002c94c:	000b883a 	mov	r5,zero
2002c950:	1028d0fa 	srli	r20,r2,3
2002c954:	b02b883a 	mov	r21,r22
2002c958:	0005883a 	mov	r2,zero
2002c95c:	a468b03a 	or	r20,r20,r17
2002c960:	003eae06 	br	2002c41c <__alt_data_end+0xfffed01c>
2002c964:	1007883a 	mov	r3,r2
2002c968:	0023883a 	mov	r17,zero
2002c96c:	880a927a 	slli	r5,r17,9
2002c970:	1805883a 	mov	r2,r3
2002c974:	8822977a 	slli	r17,r17,29
2002c978:	280ad33a 	srli	r5,r5,12
2002c97c:	003ff406 	br	2002c950 <__alt_data_end+0xfffed550>
2002c980:	10c003cc 	andi	r3,r2,15
2002c984:	01000104 	movi	r4,4
2002c988:	193ff626 	beq	r3,r4,2002c964 <__alt_data_end+0xfffed564>
2002c98c:	0023883a 	mov	r17,zero
2002c990:	003fd506 	br	2002c8e8 <__alt_data_end+0xfffed4e8>
2002c994:	0005883a 	mov	r2,zero
2002c998:	003fe706 	br	2002c938 <__alt_data_end+0xfffed538>
2002c99c:	00800434 	movhi	r2,16
2002c9a0:	89400234 	orhi	r5,r17,8
2002c9a4:	10bfffc4 	addi	r2,r2,-1
2002c9a8:	b02b883a 	mov	r21,r22
2002c9ac:	288a703a 	and	r5,r5,r2
2002c9b0:	4029883a 	mov	r20,r8
2002c9b4:	003eff06 	br	2002c5b4 <__alt_data_end+0xfffed1b4>

2002c9b8 <__subdf3>:
2002c9b8:	02000434 	movhi	r8,16
2002c9bc:	423fffc4 	addi	r8,r8,-1
2002c9c0:	defffb04 	addi	sp,sp,-20
2002c9c4:	2a14703a 	and	r10,r5,r8
2002c9c8:	3812d53a 	srli	r9,r7,20
2002c9cc:	3a10703a 	and	r8,r7,r8
2002c9d0:	2006d77a 	srli	r3,r4,29
2002c9d4:	3004d77a 	srli	r2,r6,29
2002c9d8:	dc000015 	stw	r16,0(sp)
2002c9dc:	501490fa 	slli	r10,r10,3
2002c9e0:	2820d53a 	srli	r16,r5,20
2002c9e4:	401090fa 	slli	r8,r8,3
2002c9e8:	dc800215 	stw	r18,8(sp)
2002c9ec:	dc400115 	stw	r17,4(sp)
2002c9f0:	dfc00415 	stw	ra,16(sp)
2002c9f4:	202290fa 	slli	r17,r4,3
2002c9f8:	dcc00315 	stw	r19,12(sp)
2002c9fc:	4a41ffcc 	andi	r9,r9,2047
2002ca00:	0101ffc4 	movi	r4,2047
2002ca04:	2824d7fa 	srli	r18,r5,31
2002ca08:	8401ffcc 	andi	r16,r16,2047
2002ca0c:	50c6b03a 	or	r3,r10,r3
2002ca10:	380ed7fa 	srli	r7,r7,31
2002ca14:	408ab03a 	or	r5,r8,r2
2002ca18:	300c90fa 	slli	r6,r6,3
2002ca1c:	49009626 	beq	r9,r4,2002cc78 <__subdf3+0x2c0>
2002ca20:	39c0005c 	xori	r7,r7,1
2002ca24:	8245c83a 	sub	r2,r16,r9
2002ca28:	3c807426 	beq	r7,r18,2002cbfc <__subdf3+0x244>
2002ca2c:	0080af0e 	bge	zero,r2,2002ccec <__subdf3+0x334>
2002ca30:	48002a1e 	bne	r9,zero,2002cadc <__subdf3+0x124>
2002ca34:	2988b03a 	or	r4,r5,r6
2002ca38:	20009a1e 	bne	r4,zero,2002cca4 <__subdf3+0x2ec>
2002ca3c:	888001cc 	andi	r2,r17,7
2002ca40:	10000726 	beq	r2,zero,2002ca60 <__subdf3+0xa8>
2002ca44:	888003cc 	andi	r2,r17,15
2002ca48:	01000104 	movi	r4,4
2002ca4c:	11000426 	beq	r2,r4,2002ca60 <__subdf3+0xa8>
2002ca50:	890b883a 	add	r5,r17,r4
2002ca54:	2c63803a 	cmpltu	r17,r5,r17
2002ca58:	1c47883a 	add	r3,r3,r17
2002ca5c:	2823883a 	mov	r17,r5
2002ca60:	1880202c 	andhi	r2,r3,128
2002ca64:	10005926 	beq	r2,zero,2002cbcc <__subdf3+0x214>
2002ca68:	84000044 	addi	r16,r16,1
2002ca6c:	0081ffc4 	movi	r2,2047
2002ca70:	8080be26 	beq	r16,r2,2002cd6c <__subdf3+0x3b4>
2002ca74:	017fe034 	movhi	r5,65408
2002ca78:	297fffc4 	addi	r5,r5,-1
2002ca7c:	1946703a 	and	r3,r3,r5
2002ca80:	1804977a 	slli	r2,r3,29
2002ca84:	1806927a 	slli	r3,r3,9
2002ca88:	8822d0fa 	srli	r17,r17,3
2002ca8c:	8401ffcc 	andi	r16,r16,2047
2002ca90:	180ad33a 	srli	r5,r3,12
2002ca94:	9100004c 	andi	r4,r18,1
2002ca98:	1444b03a 	or	r2,r2,r17
2002ca9c:	80c1ffcc 	andi	r3,r16,2047
2002caa0:	1820953a 	slli	r16,r3,20
2002caa4:	20c03fcc 	andi	r3,r4,255
2002caa8:	180897fa 	slli	r4,r3,31
2002caac:	00c00434 	movhi	r3,16
2002cab0:	18ffffc4 	addi	r3,r3,-1
2002cab4:	28c6703a 	and	r3,r5,r3
2002cab8:	1c06b03a 	or	r3,r3,r16
2002cabc:	1906b03a 	or	r3,r3,r4
2002cac0:	dfc00417 	ldw	ra,16(sp)
2002cac4:	dcc00317 	ldw	r19,12(sp)
2002cac8:	dc800217 	ldw	r18,8(sp)
2002cacc:	dc400117 	ldw	r17,4(sp)
2002cad0:	dc000017 	ldw	r16,0(sp)
2002cad4:	dec00504 	addi	sp,sp,20
2002cad8:	f800283a 	ret
2002cadc:	0101ffc4 	movi	r4,2047
2002cae0:	813fd626 	beq	r16,r4,2002ca3c <__alt_data_end+0xfffed63c>
2002cae4:	29402034 	orhi	r5,r5,128
2002cae8:	01000e04 	movi	r4,56
2002caec:	2080a316 	blt	r4,r2,2002cd7c <__subdf3+0x3c4>
2002caf0:	010007c4 	movi	r4,31
2002caf4:	2080c616 	blt	r4,r2,2002ce10 <__subdf3+0x458>
2002caf8:	01000804 	movi	r4,32
2002cafc:	2089c83a 	sub	r4,r4,r2
2002cb00:	2910983a 	sll	r8,r5,r4
2002cb04:	308ed83a 	srl	r7,r6,r2
2002cb08:	3108983a 	sll	r4,r6,r4
2002cb0c:	2884d83a 	srl	r2,r5,r2
2002cb10:	41ccb03a 	or	r6,r8,r7
2002cb14:	2008c03a 	cmpne	r4,r4,zero
2002cb18:	310cb03a 	or	r6,r6,r4
2002cb1c:	898dc83a 	sub	r6,r17,r6
2002cb20:	89a3803a 	cmpltu	r17,r17,r6
2002cb24:	1887c83a 	sub	r3,r3,r2
2002cb28:	1c47c83a 	sub	r3,r3,r17
2002cb2c:	3023883a 	mov	r17,r6
2002cb30:	1880202c 	andhi	r2,r3,128
2002cb34:	10002326 	beq	r2,zero,2002cbc4 <__subdf3+0x20c>
2002cb38:	04c02034 	movhi	r19,128
2002cb3c:	9cffffc4 	addi	r19,r19,-1
2002cb40:	1ce6703a 	and	r19,r3,r19
2002cb44:	98007a26 	beq	r19,zero,2002cd30 <__subdf3+0x378>
2002cb48:	9809883a 	mov	r4,r19
2002cb4c:	002d4b80 	call	2002d4b8 <__clzsi2>
2002cb50:	113ffe04 	addi	r4,r2,-8
2002cb54:	00c007c4 	movi	r3,31
2002cb58:	19007b16 	blt	r3,r4,2002cd48 <__subdf3+0x390>
2002cb5c:	00800804 	movi	r2,32
2002cb60:	1105c83a 	sub	r2,r2,r4
2002cb64:	8884d83a 	srl	r2,r17,r2
2002cb68:	9906983a 	sll	r3,r19,r4
2002cb6c:	8922983a 	sll	r17,r17,r4
2002cb70:	10c4b03a 	or	r2,r2,r3
2002cb74:	24007816 	blt	r4,r16,2002cd58 <__subdf3+0x3a0>
2002cb78:	2421c83a 	sub	r16,r4,r16
2002cb7c:	80c00044 	addi	r3,r16,1
2002cb80:	010007c4 	movi	r4,31
2002cb84:	20c09516 	blt	r4,r3,2002cddc <__subdf3+0x424>
2002cb88:	01400804 	movi	r5,32
2002cb8c:	28cbc83a 	sub	r5,r5,r3
2002cb90:	88c8d83a 	srl	r4,r17,r3
2002cb94:	8962983a 	sll	r17,r17,r5
2002cb98:	114a983a 	sll	r5,r2,r5
2002cb9c:	10c6d83a 	srl	r3,r2,r3
2002cba0:	8804c03a 	cmpne	r2,r17,zero
2002cba4:	290ab03a 	or	r5,r5,r4
2002cba8:	28a2b03a 	or	r17,r5,r2
2002cbac:	0021883a 	mov	r16,zero
2002cbb0:	003fa206 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002cbb4:	2090b03a 	or	r8,r4,r2
2002cbb8:	40018e26 	beq	r8,zero,2002d1f4 <__subdf3+0x83c>
2002cbbc:	1007883a 	mov	r3,r2
2002cbc0:	2023883a 	mov	r17,r4
2002cbc4:	888001cc 	andi	r2,r17,7
2002cbc8:	103f9e1e 	bne	r2,zero,2002ca44 <__alt_data_end+0xfffed644>
2002cbcc:	1804977a 	slli	r2,r3,29
2002cbd0:	8822d0fa 	srli	r17,r17,3
2002cbd4:	1810d0fa 	srli	r8,r3,3
2002cbd8:	9100004c 	andi	r4,r18,1
2002cbdc:	1444b03a 	or	r2,r2,r17
2002cbe0:	00c1ffc4 	movi	r3,2047
2002cbe4:	80c02826 	beq	r16,r3,2002cc88 <__subdf3+0x2d0>
2002cbe8:	01400434 	movhi	r5,16
2002cbec:	297fffc4 	addi	r5,r5,-1
2002cbf0:	80e0703a 	and	r16,r16,r3
2002cbf4:	414a703a 	and	r5,r8,r5
2002cbf8:	003fa806 	br	2002ca9c <__alt_data_end+0xfffed69c>
2002cbfc:	0080630e 	bge	zero,r2,2002cd8c <__subdf3+0x3d4>
2002cc00:	48003026 	beq	r9,zero,2002ccc4 <__subdf3+0x30c>
2002cc04:	0101ffc4 	movi	r4,2047
2002cc08:	813f8c26 	beq	r16,r4,2002ca3c <__alt_data_end+0xfffed63c>
2002cc0c:	29402034 	orhi	r5,r5,128
2002cc10:	01000e04 	movi	r4,56
2002cc14:	2080a90e 	bge	r4,r2,2002cebc <__subdf3+0x504>
2002cc18:	298cb03a 	or	r6,r5,r6
2002cc1c:	3012c03a 	cmpne	r9,r6,zero
2002cc20:	0005883a 	mov	r2,zero
2002cc24:	4c53883a 	add	r9,r9,r17
2002cc28:	4c63803a 	cmpltu	r17,r9,r17
2002cc2c:	10c7883a 	add	r3,r2,r3
2002cc30:	88c7883a 	add	r3,r17,r3
2002cc34:	4823883a 	mov	r17,r9
2002cc38:	1880202c 	andhi	r2,r3,128
2002cc3c:	1000d026 	beq	r2,zero,2002cf80 <__subdf3+0x5c8>
2002cc40:	84000044 	addi	r16,r16,1
2002cc44:	0081ffc4 	movi	r2,2047
2002cc48:	8080fe26 	beq	r16,r2,2002d044 <__subdf3+0x68c>
2002cc4c:	00bfe034 	movhi	r2,65408
2002cc50:	10bfffc4 	addi	r2,r2,-1
2002cc54:	1886703a 	and	r3,r3,r2
2002cc58:	880ad07a 	srli	r5,r17,1
2002cc5c:	180497fa 	slli	r2,r3,31
2002cc60:	8900004c 	andi	r4,r17,1
2002cc64:	2922b03a 	or	r17,r5,r4
2002cc68:	1806d07a 	srli	r3,r3,1
2002cc6c:	1462b03a 	or	r17,r2,r17
2002cc70:	3825883a 	mov	r18,r7
2002cc74:	003f7106 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002cc78:	2984b03a 	or	r2,r5,r6
2002cc7c:	103f6826 	beq	r2,zero,2002ca20 <__alt_data_end+0xfffed620>
2002cc80:	39c03fcc 	andi	r7,r7,255
2002cc84:	003f6706 	br	2002ca24 <__alt_data_end+0xfffed624>
2002cc88:	4086b03a 	or	r3,r8,r2
2002cc8c:	18015226 	beq	r3,zero,2002d1d8 <__subdf3+0x820>
2002cc90:	00c00434 	movhi	r3,16
2002cc94:	41400234 	orhi	r5,r8,8
2002cc98:	18ffffc4 	addi	r3,r3,-1
2002cc9c:	28ca703a 	and	r5,r5,r3
2002cca0:	003f7e06 	br	2002ca9c <__alt_data_end+0xfffed69c>
2002cca4:	10bfffc4 	addi	r2,r2,-1
2002cca8:	1000491e 	bne	r2,zero,2002cdd0 <__subdf3+0x418>
2002ccac:	898fc83a 	sub	r7,r17,r6
2002ccb0:	89e3803a 	cmpltu	r17,r17,r7
2002ccb4:	1947c83a 	sub	r3,r3,r5
2002ccb8:	1c47c83a 	sub	r3,r3,r17
2002ccbc:	3823883a 	mov	r17,r7
2002ccc0:	003f9b06 	br	2002cb30 <__alt_data_end+0xfffed730>
2002ccc4:	2988b03a 	or	r4,r5,r6
2002ccc8:	203f5c26 	beq	r4,zero,2002ca3c <__alt_data_end+0xfffed63c>
2002cccc:	10bfffc4 	addi	r2,r2,-1
2002ccd0:	1000931e 	bne	r2,zero,2002cf20 <__subdf3+0x568>
2002ccd4:	898d883a 	add	r6,r17,r6
2002ccd8:	3463803a 	cmpltu	r17,r6,r17
2002ccdc:	1947883a 	add	r3,r3,r5
2002cce0:	88c7883a 	add	r3,r17,r3
2002cce4:	3023883a 	mov	r17,r6
2002cce8:	003fd306 	br	2002cc38 <__alt_data_end+0xfffed838>
2002ccec:	1000541e 	bne	r2,zero,2002ce40 <__subdf3+0x488>
2002ccf0:	80800044 	addi	r2,r16,1
2002ccf4:	1081ffcc 	andi	r2,r2,2047
2002ccf8:	01000044 	movi	r4,1
2002ccfc:	2080a20e 	bge	r4,r2,2002cf88 <__subdf3+0x5d0>
2002cd00:	8989c83a 	sub	r4,r17,r6
2002cd04:	8905803a 	cmpltu	r2,r17,r4
2002cd08:	1967c83a 	sub	r19,r3,r5
2002cd0c:	98a7c83a 	sub	r19,r19,r2
2002cd10:	9880202c 	andhi	r2,r19,128
2002cd14:	10006326 	beq	r2,zero,2002cea4 <__subdf3+0x4ec>
2002cd18:	3463c83a 	sub	r17,r6,r17
2002cd1c:	28c7c83a 	sub	r3,r5,r3
2002cd20:	344d803a 	cmpltu	r6,r6,r17
2002cd24:	19a7c83a 	sub	r19,r3,r6
2002cd28:	3825883a 	mov	r18,r7
2002cd2c:	983f861e 	bne	r19,zero,2002cb48 <__alt_data_end+0xfffed748>
2002cd30:	8809883a 	mov	r4,r17
2002cd34:	002d4b80 	call	2002d4b8 <__clzsi2>
2002cd38:	10800804 	addi	r2,r2,32
2002cd3c:	113ffe04 	addi	r4,r2,-8
2002cd40:	00c007c4 	movi	r3,31
2002cd44:	193f850e 	bge	r3,r4,2002cb5c <__alt_data_end+0xfffed75c>
2002cd48:	10bff604 	addi	r2,r2,-40
2002cd4c:	8884983a 	sll	r2,r17,r2
2002cd50:	0023883a 	mov	r17,zero
2002cd54:	243f880e 	bge	r4,r16,2002cb78 <__alt_data_end+0xfffed778>
2002cd58:	00ffe034 	movhi	r3,65408
2002cd5c:	18ffffc4 	addi	r3,r3,-1
2002cd60:	8121c83a 	sub	r16,r16,r4
2002cd64:	10c6703a 	and	r3,r2,r3
2002cd68:	003f3406 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002cd6c:	9100004c 	andi	r4,r18,1
2002cd70:	000b883a 	mov	r5,zero
2002cd74:	0005883a 	mov	r2,zero
2002cd78:	003f4806 	br	2002ca9c <__alt_data_end+0xfffed69c>
2002cd7c:	298cb03a 	or	r6,r5,r6
2002cd80:	300cc03a 	cmpne	r6,r6,zero
2002cd84:	0005883a 	mov	r2,zero
2002cd88:	003f6406 	br	2002cb1c <__alt_data_end+0xfffed71c>
2002cd8c:	10009a1e 	bne	r2,zero,2002cff8 <__subdf3+0x640>
2002cd90:	82400044 	addi	r9,r16,1
2002cd94:	4881ffcc 	andi	r2,r9,2047
2002cd98:	02800044 	movi	r10,1
2002cd9c:	5080670e 	bge	r10,r2,2002cf3c <__subdf3+0x584>
2002cda0:	0081ffc4 	movi	r2,2047
2002cda4:	4880af26 	beq	r9,r2,2002d064 <__subdf3+0x6ac>
2002cda8:	898d883a 	add	r6,r17,r6
2002cdac:	1945883a 	add	r2,r3,r5
2002cdb0:	3447803a 	cmpltu	r3,r6,r17
2002cdb4:	1887883a 	add	r3,r3,r2
2002cdb8:	182297fa 	slli	r17,r3,31
2002cdbc:	300cd07a 	srli	r6,r6,1
2002cdc0:	1806d07a 	srli	r3,r3,1
2002cdc4:	4821883a 	mov	r16,r9
2002cdc8:	89a2b03a 	or	r17,r17,r6
2002cdcc:	003f1b06 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002cdd0:	0101ffc4 	movi	r4,2047
2002cdd4:	813f441e 	bne	r16,r4,2002cae8 <__alt_data_end+0xfffed6e8>
2002cdd8:	003f1806 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002cddc:	843ff844 	addi	r16,r16,-31
2002cde0:	01400804 	movi	r5,32
2002cde4:	1408d83a 	srl	r4,r2,r16
2002cde8:	19405026 	beq	r3,r5,2002cf2c <__subdf3+0x574>
2002cdec:	01401004 	movi	r5,64
2002cdf0:	28c7c83a 	sub	r3,r5,r3
2002cdf4:	10c4983a 	sll	r2,r2,r3
2002cdf8:	88a2b03a 	or	r17,r17,r2
2002cdfc:	8822c03a 	cmpne	r17,r17,zero
2002ce00:	2462b03a 	or	r17,r4,r17
2002ce04:	0007883a 	mov	r3,zero
2002ce08:	0021883a 	mov	r16,zero
2002ce0c:	003f6d06 	br	2002cbc4 <__alt_data_end+0xfffed7c4>
2002ce10:	11fff804 	addi	r7,r2,-32
2002ce14:	01000804 	movi	r4,32
2002ce18:	29ced83a 	srl	r7,r5,r7
2002ce1c:	11004526 	beq	r2,r4,2002cf34 <__subdf3+0x57c>
2002ce20:	01001004 	movi	r4,64
2002ce24:	2089c83a 	sub	r4,r4,r2
2002ce28:	2904983a 	sll	r2,r5,r4
2002ce2c:	118cb03a 	or	r6,r2,r6
2002ce30:	300cc03a 	cmpne	r6,r6,zero
2002ce34:	398cb03a 	or	r6,r7,r6
2002ce38:	0005883a 	mov	r2,zero
2002ce3c:	003f3706 	br	2002cb1c <__alt_data_end+0xfffed71c>
2002ce40:	80002a26 	beq	r16,zero,2002ceec <__subdf3+0x534>
2002ce44:	0101ffc4 	movi	r4,2047
2002ce48:	49006626 	beq	r9,r4,2002cfe4 <__subdf3+0x62c>
2002ce4c:	0085c83a 	sub	r2,zero,r2
2002ce50:	18c02034 	orhi	r3,r3,128
2002ce54:	01000e04 	movi	r4,56
2002ce58:	20807e16 	blt	r4,r2,2002d054 <__subdf3+0x69c>
2002ce5c:	010007c4 	movi	r4,31
2002ce60:	2080e716 	blt	r4,r2,2002d200 <__subdf3+0x848>
2002ce64:	01000804 	movi	r4,32
2002ce68:	2089c83a 	sub	r4,r4,r2
2002ce6c:	1914983a 	sll	r10,r3,r4
2002ce70:	8890d83a 	srl	r8,r17,r2
2002ce74:	8908983a 	sll	r4,r17,r4
2002ce78:	1884d83a 	srl	r2,r3,r2
2002ce7c:	5222b03a 	or	r17,r10,r8
2002ce80:	2006c03a 	cmpne	r3,r4,zero
2002ce84:	88e2b03a 	or	r17,r17,r3
2002ce88:	3463c83a 	sub	r17,r6,r17
2002ce8c:	2885c83a 	sub	r2,r5,r2
2002ce90:	344d803a 	cmpltu	r6,r6,r17
2002ce94:	1187c83a 	sub	r3,r2,r6
2002ce98:	4821883a 	mov	r16,r9
2002ce9c:	3825883a 	mov	r18,r7
2002cea0:	003f2306 	br	2002cb30 <__alt_data_end+0xfffed730>
2002cea4:	24d0b03a 	or	r8,r4,r19
2002cea8:	40001b1e 	bne	r8,zero,2002cf18 <__subdf3+0x560>
2002ceac:	0005883a 	mov	r2,zero
2002ceb0:	0009883a 	mov	r4,zero
2002ceb4:	0021883a 	mov	r16,zero
2002ceb8:	003f4906 	br	2002cbe0 <__alt_data_end+0xfffed7e0>
2002cebc:	010007c4 	movi	r4,31
2002cec0:	20803a16 	blt	r4,r2,2002cfac <__subdf3+0x5f4>
2002cec4:	01000804 	movi	r4,32
2002cec8:	2089c83a 	sub	r4,r4,r2
2002cecc:	2912983a 	sll	r9,r5,r4
2002ced0:	3090d83a 	srl	r8,r6,r2
2002ced4:	3108983a 	sll	r4,r6,r4
2002ced8:	2884d83a 	srl	r2,r5,r2
2002cedc:	4a12b03a 	or	r9,r9,r8
2002cee0:	2008c03a 	cmpne	r4,r4,zero
2002cee4:	4912b03a 	or	r9,r9,r4
2002cee8:	003f4e06 	br	2002cc24 <__alt_data_end+0xfffed824>
2002ceec:	1c48b03a 	or	r4,r3,r17
2002cef0:	20003c26 	beq	r4,zero,2002cfe4 <__subdf3+0x62c>
2002cef4:	0084303a 	nor	r2,zero,r2
2002cef8:	1000381e 	bne	r2,zero,2002cfdc <__subdf3+0x624>
2002cefc:	3463c83a 	sub	r17,r6,r17
2002cf00:	28c5c83a 	sub	r2,r5,r3
2002cf04:	344d803a 	cmpltu	r6,r6,r17
2002cf08:	1187c83a 	sub	r3,r2,r6
2002cf0c:	4821883a 	mov	r16,r9
2002cf10:	3825883a 	mov	r18,r7
2002cf14:	003f0606 	br	2002cb30 <__alt_data_end+0xfffed730>
2002cf18:	2023883a 	mov	r17,r4
2002cf1c:	003f0906 	br	2002cb44 <__alt_data_end+0xfffed744>
2002cf20:	0101ffc4 	movi	r4,2047
2002cf24:	813f3a1e 	bne	r16,r4,2002cc10 <__alt_data_end+0xfffed810>
2002cf28:	003ec406 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002cf2c:	0005883a 	mov	r2,zero
2002cf30:	003fb106 	br	2002cdf8 <__alt_data_end+0xfffed9f8>
2002cf34:	0005883a 	mov	r2,zero
2002cf38:	003fbc06 	br	2002ce2c <__alt_data_end+0xfffeda2c>
2002cf3c:	1c44b03a 	or	r2,r3,r17
2002cf40:	80008e1e 	bne	r16,zero,2002d17c <__subdf3+0x7c4>
2002cf44:	1000c826 	beq	r2,zero,2002d268 <__subdf3+0x8b0>
2002cf48:	2984b03a 	or	r2,r5,r6
2002cf4c:	103ebb26 	beq	r2,zero,2002ca3c <__alt_data_end+0xfffed63c>
2002cf50:	8989883a 	add	r4,r17,r6
2002cf54:	1945883a 	add	r2,r3,r5
2002cf58:	2447803a 	cmpltu	r3,r4,r17
2002cf5c:	1887883a 	add	r3,r3,r2
2002cf60:	1880202c 	andhi	r2,r3,128
2002cf64:	2023883a 	mov	r17,r4
2002cf68:	103f1626 	beq	r2,zero,2002cbc4 <__alt_data_end+0xfffed7c4>
2002cf6c:	00bfe034 	movhi	r2,65408
2002cf70:	10bfffc4 	addi	r2,r2,-1
2002cf74:	5021883a 	mov	r16,r10
2002cf78:	1886703a 	and	r3,r3,r2
2002cf7c:	003eaf06 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002cf80:	3825883a 	mov	r18,r7
2002cf84:	003f0f06 	br	2002cbc4 <__alt_data_end+0xfffed7c4>
2002cf88:	1c44b03a 	or	r2,r3,r17
2002cf8c:	8000251e 	bne	r16,zero,2002d024 <__subdf3+0x66c>
2002cf90:	1000661e 	bne	r2,zero,2002d12c <__subdf3+0x774>
2002cf94:	2990b03a 	or	r8,r5,r6
2002cf98:	40009626 	beq	r8,zero,2002d1f4 <__subdf3+0x83c>
2002cf9c:	2807883a 	mov	r3,r5
2002cfa0:	3023883a 	mov	r17,r6
2002cfa4:	3825883a 	mov	r18,r7
2002cfa8:	003ea406 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002cfac:	127ff804 	addi	r9,r2,-32
2002cfb0:	01000804 	movi	r4,32
2002cfb4:	2a52d83a 	srl	r9,r5,r9
2002cfb8:	11008c26 	beq	r2,r4,2002d1ec <__subdf3+0x834>
2002cfbc:	01001004 	movi	r4,64
2002cfc0:	2085c83a 	sub	r2,r4,r2
2002cfc4:	2884983a 	sll	r2,r5,r2
2002cfc8:	118cb03a 	or	r6,r2,r6
2002cfcc:	300cc03a 	cmpne	r6,r6,zero
2002cfd0:	4992b03a 	or	r9,r9,r6
2002cfd4:	0005883a 	mov	r2,zero
2002cfd8:	003f1206 	br	2002cc24 <__alt_data_end+0xfffed824>
2002cfdc:	0101ffc4 	movi	r4,2047
2002cfe0:	493f9c1e 	bne	r9,r4,2002ce54 <__alt_data_end+0xfffeda54>
2002cfe4:	2807883a 	mov	r3,r5
2002cfe8:	3023883a 	mov	r17,r6
2002cfec:	4821883a 	mov	r16,r9
2002cff0:	3825883a 	mov	r18,r7
2002cff4:	003e9106 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002cff8:	80001f1e 	bne	r16,zero,2002d078 <__subdf3+0x6c0>
2002cffc:	1c48b03a 	or	r4,r3,r17
2002d000:	20005a26 	beq	r4,zero,2002d16c <__subdf3+0x7b4>
2002d004:	0084303a 	nor	r2,zero,r2
2002d008:	1000561e 	bne	r2,zero,2002d164 <__subdf3+0x7ac>
2002d00c:	89a3883a 	add	r17,r17,r6
2002d010:	1945883a 	add	r2,r3,r5
2002d014:	898d803a 	cmpltu	r6,r17,r6
2002d018:	3087883a 	add	r3,r6,r2
2002d01c:	4821883a 	mov	r16,r9
2002d020:	003f0506 	br	2002cc38 <__alt_data_end+0xfffed838>
2002d024:	10002b1e 	bne	r2,zero,2002d0d4 <__subdf3+0x71c>
2002d028:	2984b03a 	or	r2,r5,r6
2002d02c:	10008026 	beq	r2,zero,2002d230 <__subdf3+0x878>
2002d030:	2807883a 	mov	r3,r5
2002d034:	3023883a 	mov	r17,r6
2002d038:	3825883a 	mov	r18,r7
2002d03c:	0401ffc4 	movi	r16,2047
2002d040:	003e7e06 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002d044:	3809883a 	mov	r4,r7
2002d048:	0011883a 	mov	r8,zero
2002d04c:	0005883a 	mov	r2,zero
2002d050:	003ee306 	br	2002cbe0 <__alt_data_end+0xfffed7e0>
2002d054:	1c62b03a 	or	r17,r3,r17
2002d058:	8822c03a 	cmpne	r17,r17,zero
2002d05c:	0005883a 	mov	r2,zero
2002d060:	003f8906 	br	2002ce88 <__alt_data_end+0xfffeda88>
2002d064:	3809883a 	mov	r4,r7
2002d068:	4821883a 	mov	r16,r9
2002d06c:	0011883a 	mov	r8,zero
2002d070:	0005883a 	mov	r2,zero
2002d074:	003eda06 	br	2002cbe0 <__alt_data_end+0xfffed7e0>
2002d078:	0101ffc4 	movi	r4,2047
2002d07c:	49003b26 	beq	r9,r4,2002d16c <__subdf3+0x7b4>
2002d080:	0085c83a 	sub	r2,zero,r2
2002d084:	18c02034 	orhi	r3,r3,128
2002d088:	01000e04 	movi	r4,56
2002d08c:	20806e16 	blt	r4,r2,2002d248 <__subdf3+0x890>
2002d090:	010007c4 	movi	r4,31
2002d094:	20807716 	blt	r4,r2,2002d274 <__subdf3+0x8bc>
2002d098:	01000804 	movi	r4,32
2002d09c:	2089c83a 	sub	r4,r4,r2
2002d0a0:	1914983a 	sll	r10,r3,r4
2002d0a4:	8890d83a 	srl	r8,r17,r2
2002d0a8:	8908983a 	sll	r4,r17,r4
2002d0ac:	1884d83a 	srl	r2,r3,r2
2002d0b0:	5222b03a 	or	r17,r10,r8
2002d0b4:	2006c03a 	cmpne	r3,r4,zero
2002d0b8:	88e2b03a 	or	r17,r17,r3
2002d0bc:	89a3883a 	add	r17,r17,r6
2002d0c0:	1145883a 	add	r2,r2,r5
2002d0c4:	898d803a 	cmpltu	r6,r17,r6
2002d0c8:	3087883a 	add	r3,r6,r2
2002d0cc:	4821883a 	mov	r16,r9
2002d0d0:	003ed906 	br	2002cc38 <__alt_data_end+0xfffed838>
2002d0d4:	2984b03a 	or	r2,r5,r6
2002d0d8:	10004226 	beq	r2,zero,2002d1e4 <__subdf3+0x82c>
2002d0dc:	1808d0fa 	srli	r4,r3,3
2002d0e0:	8822d0fa 	srli	r17,r17,3
2002d0e4:	1806977a 	slli	r3,r3,29
2002d0e8:	2080022c 	andhi	r2,r4,8
2002d0ec:	1c62b03a 	or	r17,r3,r17
2002d0f0:	10000826 	beq	r2,zero,2002d114 <__subdf3+0x75c>
2002d0f4:	2812d0fa 	srli	r9,r5,3
2002d0f8:	4880022c 	andhi	r2,r9,8
2002d0fc:	1000051e 	bne	r2,zero,2002d114 <__subdf3+0x75c>
2002d100:	300cd0fa 	srli	r6,r6,3
2002d104:	2804977a 	slli	r2,r5,29
2002d108:	4809883a 	mov	r4,r9
2002d10c:	3825883a 	mov	r18,r7
2002d110:	11a2b03a 	or	r17,r2,r6
2002d114:	8806d77a 	srli	r3,r17,29
2002d118:	200890fa 	slli	r4,r4,3
2002d11c:	882290fa 	slli	r17,r17,3
2002d120:	0401ffc4 	movi	r16,2047
2002d124:	1906b03a 	or	r3,r3,r4
2002d128:	003e4406 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002d12c:	2984b03a 	or	r2,r5,r6
2002d130:	103e4226 	beq	r2,zero,2002ca3c <__alt_data_end+0xfffed63c>
2002d134:	8989c83a 	sub	r4,r17,r6
2002d138:	8911803a 	cmpltu	r8,r17,r4
2002d13c:	1945c83a 	sub	r2,r3,r5
2002d140:	1205c83a 	sub	r2,r2,r8
2002d144:	1200202c 	andhi	r8,r2,128
2002d148:	403e9a26 	beq	r8,zero,2002cbb4 <__alt_data_end+0xfffed7b4>
2002d14c:	3463c83a 	sub	r17,r6,r17
2002d150:	28c5c83a 	sub	r2,r5,r3
2002d154:	344d803a 	cmpltu	r6,r6,r17
2002d158:	1187c83a 	sub	r3,r2,r6
2002d15c:	3825883a 	mov	r18,r7
2002d160:	003e3606 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002d164:	0101ffc4 	movi	r4,2047
2002d168:	493fc71e 	bne	r9,r4,2002d088 <__alt_data_end+0xfffedc88>
2002d16c:	2807883a 	mov	r3,r5
2002d170:	3023883a 	mov	r17,r6
2002d174:	4821883a 	mov	r16,r9
2002d178:	003e3006 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002d17c:	10003626 	beq	r2,zero,2002d258 <__subdf3+0x8a0>
2002d180:	2984b03a 	or	r2,r5,r6
2002d184:	10001726 	beq	r2,zero,2002d1e4 <__subdf3+0x82c>
2002d188:	1808d0fa 	srli	r4,r3,3
2002d18c:	8822d0fa 	srli	r17,r17,3
2002d190:	1806977a 	slli	r3,r3,29
2002d194:	2080022c 	andhi	r2,r4,8
2002d198:	1c62b03a 	or	r17,r3,r17
2002d19c:	10000726 	beq	r2,zero,2002d1bc <__subdf3+0x804>
2002d1a0:	2812d0fa 	srli	r9,r5,3
2002d1a4:	4880022c 	andhi	r2,r9,8
2002d1a8:	1000041e 	bne	r2,zero,2002d1bc <__subdf3+0x804>
2002d1ac:	300cd0fa 	srli	r6,r6,3
2002d1b0:	2804977a 	slli	r2,r5,29
2002d1b4:	4809883a 	mov	r4,r9
2002d1b8:	11a2b03a 	or	r17,r2,r6
2002d1bc:	8806d77a 	srli	r3,r17,29
2002d1c0:	200890fa 	slli	r4,r4,3
2002d1c4:	882290fa 	slli	r17,r17,3
2002d1c8:	3825883a 	mov	r18,r7
2002d1cc:	1906b03a 	or	r3,r3,r4
2002d1d0:	0401ffc4 	movi	r16,2047
2002d1d4:	003e1906 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002d1d8:	000b883a 	mov	r5,zero
2002d1dc:	0005883a 	mov	r2,zero
2002d1e0:	003e2e06 	br	2002ca9c <__alt_data_end+0xfffed69c>
2002d1e4:	0401ffc4 	movi	r16,2047
2002d1e8:	003e1406 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002d1ec:	0005883a 	mov	r2,zero
2002d1f0:	003f7506 	br	2002cfc8 <__alt_data_end+0xfffedbc8>
2002d1f4:	0005883a 	mov	r2,zero
2002d1f8:	0009883a 	mov	r4,zero
2002d1fc:	003e7806 	br	2002cbe0 <__alt_data_end+0xfffed7e0>
2002d200:	123ff804 	addi	r8,r2,-32
2002d204:	01000804 	movi	r4,32
2002d208:	1a10d83a 	srl	r8,r3,r8
2002d20c:	11002526 	beq	r2,r4,2002d2a4 <__subdf3+0x8ec>
2002d210:	01001004 	movi	r4,64
2002d214:	2085c83a 	sub	r2,r4,r2
2002d218:	1884983a 	sll	r2,r3,r2
2002d21c:	1444b03a 	or	r2,r2,r17
2002d220:	1004c03a 	cmpne	r2,r2,zero
2002d224:	40a2b03a 	or	r17,r8,r2
2002d228:	0005883a 	mov	r2,zero
2002d22c:	003f1606 	br	2002ce88 <__alt_data_end+0xfffeda88>
2002d230:	02000434 	movhi	r8,16
2002d234:	0009883a 	mov	r4,zero
2002d238:	423fffc4 	addi	r8,r8,-1
2002d23c:	00bfffc4 	movi	r2,-1
2002d240:	0401ffc4 	movi	r16,2047
2002d244:	003e6606 	br	2002cbe0 <__alt_data_end+0xfffed7e0>
2002d248:	1c62b03a 	or	r17,r3,r17
2002d24c:	8822c03a 	cmpne	r17,r17,zero
2002d250:	0005883a 	mov	r2,zero
2002d254:	003f9906 	br	2002d0bc <__alt_data_end+0xfffedcbc>
2002d258:	2807883a 	mov	r3,r5
2002d25c:	3023883a 	mov	r17,r6
2002d260:	0401ffc4 	movi	r16,2047
2002d264:	003df506 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002d268:	2807883a 	mov	r3,r5
2002d26c:	3023883a 	mov	r17,r6
2002d270:	003df206 	br	2002ca3c <__alt_data_end+0xfffed63c>
2002d274:	123ff804 	addi	r8,r2,-32
2002d278:	01000804 	movi	r4,32
2002d27c:	1a10d83a 	srl	r8,r3,r8
2002d280:	11000a26 	beq	r2,r4,2002d2ac <__subdf3+0x8f4>
2002d284:	01001004 	movi	r4,64
2002d288:	2085c83a 	sub	r2,r4,r2
2002d28c:	1884983a 	sll	r2,r3,r2
2002d290:	1444b03a 	or	r2,r2,r17
2002d294:	1004c03a 	cmpne	r2,r2,zero
2002d298:	40a2b03a 	or	r17,r8,r2
2002d29c:	0005883a 	mov	r2,zero
2002d2a0:	003f8606 	br	2002d0bc <__alt_data_end+0xfffedcbc>
2002d2a4:	0005883a 	mov	r2,zero
2002d2a8:	003fdc06 	br	2002d21c <__alt_data_end+0xfffede1c>
2002d2ac:	0005883a 	mov	r2,zero
2002d2b0:	003ff706 	br	2002d290 <__alt_data_end+0xfffede90>

2002d2b4 <__fixdfsi>:
2002d2b4:	280cd53a 	srli	r6,r5,20
2002d2b8:	00c00434 	movhi	r3,16
2002d2bc:	18ffffc4 	addi	r3,r3,-1
2002d2c0:	3181ffcc 	andi	r6,r6,2047
2002d2c4:	01c0ff84 	movi	r7,1022
2002d2c8:	28c6703a 	and	r3,r5,r3
2002d2cc:	280ad7fa 	srli	r5,r5,31
2002d2d0:	3980120e 	bge	r7,r6,2002d31c <__fixdfsi+0x68>
2002d2d4:	00810744 	movi	r2,1053
2002d2d8:	11800c16 	blt	r2,r6,2002d30c <__fixdfsi+0x58>
2002d2dc:	00810cc4 	movi	r2,1075
2002d2e0:	1185c83a 	sub	r2,r2,r6
2002d2e4:	01c007c4 	movi	r7,31
2002d2e8:	18c00434 	orhi	r3,r3,16
2002d2ec:	38800d16 	blt	r7,r2,2002d324 <__fixdfsi+0x70>
2002d2f0:	31befb44 	addi	r6,r6,-1043
2002d2f4:	2084d83a 	srl	r2,r4,r2
2002d2f8:	1986983a 	sll	r3,r3,r6
2002d2fc:	1884b03a 	or	r2,r3,r2
2002d300:	28000726 	beq	r5,zero,2002d320 <__fixdfsi+0x6c>
2002d304:	0085c83a 	sub	r2,zero,r2
2002d308:	f800283a 	ret
2002d30c:	00a00034 	movhi	r2,32768
2002d310:	10bfffc4 	addi	r2,r2,-1
2002d314:	2885883a 	add	r2,r5,r2
2002d318:	f800283a 	ret
2002d31c:	0005883a 	mov	r2,zero
2002d320:	f800283a 	ret
2002d324:	008104c4 	movi	r2,1043
2002d328:	1185c83a 	sub	r2,r2,r6
2002d32c:	1884d83a 	srl	r2,r3,r2
2002d330:	003ff306 	br	2002d300 <__alt_data_end+0xfffedf00>

2002d334 <__floatsidf>:
2002d334:	defffd04 	addi	sp,sp,-12
2002d338:	dfc00215 	stw	ra,8(sp)
2002d33c:	dc400115 	stw	r17,4(sp)
2002d340:	dc000015 	stw	r16,0(sp)
2002d344:	20002b26 	beq	r4,zero,2002d3f4 <__floatsidf+0xc0>
2002d348:	2023883a 	mov	r17,r4
2002d34c:	2020d7fa 	srli	r16,r4,31
2002d350:	20002d16 	blt	r4,zero,2002d408 <__floatsidf+0xd4>
2002d354:	8809883a 	mov	r4,r17
2002d358:	002d4b80 	call	2002d4b8 <__clzsi2>
2002d35c:	01410784 	movi	r5,1054
2002d360:	288bc83a 	sub	r5,r5,r2
2002d364:	01010cc4 	movi	r4,1075
2002d368:	2149c83a 	sub	r4,r4,r5
2002d36c:	00c007c4 	movi	r3,31
2002d370:	1900160e 	bge	r3,r4,2002d3cc <__floatsidf+0x98>
2002d374:	00c104c4 	movi	r3,1043
2002d378:	1947c83a 	sub	r3,r3,r5
2002d37c:	88c6983a 	sll	r3,r17,r3
2002d380:	00800434 	movhi	r2,16
2002d384:	10bfffc4 	addi	r2,r2,-1
2002d388:	1886703a 	and	r3,r3,r2
2002d38c:	2941ffcc 	andi	r5,r5,2047
2002d390:	800d883a 	mov	r6,r16
2002d394:	0005883a 	mov	r2,zero
2002d398:	280a953a 	slli	r5,r5,20
2002d39c:	31803fcc 	andi	r6,r6,255
2002d3a0:	01000434 	movhi	r4,16
2002d3a4:	300c97fa 	slli	r6,r6,31
2002d3a8:	213fffc4 	addi	r4,r4,-1
2002d3ac:	1906703a 	and	r3,r3,r4
2002d3b0:	1946b03a 	or	r3,r3,r5
2002d3b4:	1986b03a 	or	r3,r3,r6
2002d3b8:	dfc00217 	ldw	ra,8(sp)
2002d3bc:	dc400117 	ldw	r17,4(sp)
2002d3c0:	dc000017 	ldw	r16,0(sp)
2002d3c4:	dec00304 	addi	sp,sp,12
2002d3c8:	f800283a 	ret
2002d3cc:	00c002c4 	movi	r3,11
2002d3d0:	1887c83a 	sub	r3,r3,r2
2002d3d4:	88c6d83a 	srl	r3,r17,r3
2002d3d8:	8904983a 	sll	r2,r17,r4
2002d3dc:	01000434 	movhi	r4,16
2002d3e0:	213fffc4 	addi	r4,r4,-1
2002d3e4:	2941ffcc 	andi	r5,r5,2047
2002d3e8:	1906703a 	and	r3,r3,r4
2002d3ec:	800d883a 	mov	r6,r16
2002d3f0:	003fe906 	br	2002d398 <__alt_data_end+0xfffedf98>
2002d3f4:	000d883a 	mov	r6,zero
2002d3f8:	000b883a 	mov	r5,zero
2002d3fc:	0007883a 	mov	r3,zero
2002d400:	0005883a 	mov	r2,zero
2002d404:	003fe406 	br	2002d398 <__alt_data_end+0xfffedf98>
2002d408:	0123c83a 	sub	r17,zero,r4
2002d40c:	003fd106 	br	2002d354 <__alt_data_end+0xfffedf54>

2002d410 <__floatunsidf>:
2002d410:	defffe04 	addi	sp,sp,-8
2002d414:	dc000015 	stw	r16,0(sp)
2002d418:	dfc00115 	stw	ra,4(sp)
2002d41c:	2021883a 	mov	r16,r4
2002d420:	20002226 	beq	r4,zero,2002d4ac <__floatunsidf+0x9c>
2002d424:	002d4b80 	call	2002d4b8 <__clzsi2>
2002d428:	01010784 	movi	r4,1054
2002d42c:	2089c83a 	sub	r4,r4,r2
2002d430:	01810cc4 	movi	r6,1075
2002d434:	310dc83a 	sub	r6,r6,r4
2002d438:	00c007c4 	movi	r3,31
2002d43c:	1980120e 	bge	r3,r6,2002d488 <__floatunsidf+0x78>
2002d440:	00c104c4 	movi	r3,1043
2002d444:	1907c83a 	sub	r3,r3,r4
2002d448:	80ca983a 	sll	r5,r16,r3
2002d44c:	00800434 	movhi	r2,16
2002d450:	10bfffc4 	addi	r2,r2,-1
2002d454:	2101ffcc 	andi	r4,r4,2047
2002d458:	0021883a 	mov	r16,zero
2002d45c:	288a703a 	and	r5,r5,r2
2002d460:	2008953a 	slli	r4,r4,20
2002d464:	00c00434 	movhi	r3,16
2002d468:	18ffffc4 	addi	r3,r3,-1
2002d46c:	28c6703a 	and	r3,r5,r3
2002d470:	8005883a 	mov	r2,r16
2002d474:	1906b03a 	or	r3,r3,r4
2002d478:	dfc00117 	ldw	ra,4(sp)
2002d47c:	dc000017 	ldw	r16,0(sp)
2002d480:	dec00204 	addi	sp,sp,8
2002d484:	f800283a 	ret
2002d488:	00c002c4 	movi	r3,11
2002d48c:	188bc83a 	sub	r5,r3,r2
2002d490:	814ad83a 	srl	r5,r16,r5
2002d494:	00c00434 	movhi	r3,16
2002d498:	18ffffc4 	addi	r3,r3,-1
2002d49c:	81a0983a 	sll	r16,r16,r6
2002d4a0:	2101ffcc 	andi	r4,r4,2047
2002d4a4:	28ca703a 	and	r5,r5,r3
2002d4a8:	003fed06 	br	2002d460 <__alt_data_end+0xfffee060>
2002d4ac:	0009883a 	mov	r4,zero
2002d4b0:	000b883a 	mov	r5,zero
2002d4b4:	003fea06 	br	2002d460 <__alt_data_end+0xfffee060>

2002d4b8 <__clzsi2>:
2002d4b8:	00bfffd4 	movui	r2,65535
2002d4bc:	11000536 	bltu	r2,r4,2002d4d4 <__clzsi2+0x1c>
2002d4c0:	00803fc4 	movi	r2,255
2002d4c4:	11000f36 	bltu	r2,r4,2002d504 <__clzsi2+0x4c>
2002d4c8:	00800804 	movi	r2,32
2002d4cc:	0007883a 	mov	r3,zero
2002d4d0:	00000506 	br	2002d4e8 <__clzsi2+0x30>
2002d4d4:	00804034 	movhi	r2,256
2002d4d8:	10bfffc4 	addi	r2,r2,-1
2002d4dc:	11000c2e 	bgeu	r2,r4,2002d510 <__clzsi2+0x58>
2002d4e0:	00800204 	movi	r2,8
2002d4e4:	00c00604 	movi	r3,24
2002d4e8:	20c8d83a 	srl	r4,r4,r3
2002d4ec:	00c800f4 	movhi	r3,8195
2002d4f0:	18c00304 	addi	r3,r3,12
2002d4f4:	1909883a 	add	r4,r3,r4
2002d4f8:	20c00003 	ldbu	r3,0(r4)
2002d4fc:	10c5c83a 	sub	r2,r2,r3
2002d500:	f800283a 	ret
2002d504:	00800604 	movi	r2,24
2002d508:	00c00204 	movi	r3,8
2002d50c:	003ff606 	br	2002d4e8 <__alt_data_end+0xfffee0e8>
2002d510:	00800404 	movi	r2,16
2002d514:	1007883a 	mov	r3,r2
2002d518:	003ff306 	br	2002d4e8 <__alt_data_end+0xfffee0e8>

2002d51c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2002d51c:	defffe04 	addi	sp,sp,-8
2002d520:	dfc00115 	stw	ra,4(sp)
2002d524:	df000015 	stw	fp,0(sp)
2002d528:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2002d52c:	d0a00b17 	ldw	r2,-32724(gp)
2002d530:	10000326 	beq	r2,zero,2002d540 <alt_get_errno+0x24>
2002d534:	d0a00b17 	ldw	r2,-32724(gp)
2002d538:	103ee83a 	callr	r2
2002d53c:	00000106 	br	2002d544 <alt_get_errno+0x28>
2002d540:	d0a6d104 	addi	r2,gp,-25788
}
2002d544:	e037883a 	mov	sp,fp
2002d548:	dfc00117 	ldw	ra,4(sp)
2002d54c:	df000017 	ldw	fp,0(sp)
2002d550:	dec00204 	addi	sp,sp,8
2002d554:	f800283a 	ret

2002d558 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
2002d558:	defffb04 	addi	sp,sp,-20
2002d55c:	dfc00415 	stw	ra,16(sp)
2002d560:	df000315 	stw	fp,12(sp)
2002d564:	df000304 	addi	fp,sp,12
2002d568:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
2002d56c:	e0bfff17 	ldw	r2,-4(fp)
2002d570:	10000616 	blt	r2,zero,2002d58c <close+0x34>
2002d574:	e0bfff17 	ldw	r2,-4(fp)
2002d578:	10c00324 	muli	r3,r2,12
2002d57c:	008800f4 	movhi	r2,8195
2002d580:	10828104 	addi	r2,r2,2564
2002d584:	1885883a 	add	r2,r3,r2
2002d588:	00000106 	br	2002d590 <close+0x38>
2002d58c:	0005883a 	mov	r2,zero
2002d590:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
2002d594:	e0bffd17 	ldw	r2,-12(fp)
2002d598:	10001926 	beq	r2,zero,2002d600 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
2002d59c:	e0bffd17 	ldw	r2,-12(fp)
2002d5a0:	10800017 	ldw	r2,0(r2)
2002d5a4:	10800417 	ldw	r2,16(r2)
2002d5a8:	10000626 	beq	r2,zero,2002d5c4 <close+0x6c>
2002d5ac:	e0bffd17 	ldw	r2,-12(fp)
2002d5b0:	10800017 	ldw	r2,0(r2)
2002d5b4:	10800417 	ldw	r2,16(r2)
2002d5b8:	e13ffd17 	ldw	r4,-12(fp)
2002d5bc:	103ee83a 	callr	r2
2002d5c0:	00000106 	br	2002d5c8 <close+0x70>
2002d5c4:	0005883a 	mov	r2,zero
2002d5c8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
2002d5cc:	e13fff17 	ldw	r4,-4(fp)
2002d5d0:	002dc600 	call	2002dc60 <alt_release_fd>
    if (rval < 0)
2002d5d4:	e0bffe17 	ldw	r2,-8(fp)
2002d5d8:	1000070e 	bge	r2,zero,2002d5f8 <close+0xa0>
    {
      ALT_ERRNO = -rval;
2002d5dc:	002d51c0 	call	2002d51c <alt_get_errno>
2002d5e0:	1007883a 	mov	r3,r2
2002d5e4:	e0bffe17 	ldw	r2,-8(fp)
2002d5e8:	0085c83a 	sub	r2,zero,r2
2002d5ec:	18800015 	stw	r2,0(r3)
      return -1;
2002d5f0:	00bfffc4 	movi	r2,-1
2002d5f4:	00000706 	br	2002d614 <close+0xbc>
    }
    return 0;
2002d5f8:	0005883a 	mov	r2,zero
2002d5fc:	00000506 	br	2002d614 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
2002d600:	002d51c0 	call	2002d51c <alt_get_errno>
2002d604:	1007883a 	mov	r3,r2
2002d608:	00801444 	movi	r2,81
2002d60c:	18800015 	stw	r2,0(r3)
    return -1;
2002d610:	00bfffc4 	movi	r2,-1
  }
}
2002d614:	e037883a 	mov	sp,fp
2002d618:	dfc00117 	ldw	ra,4(sp)
2002d61c:	df000017 	ldw	fp,0(sp)
2002d620:	dec00204 	addi	sp,sp,8
2002d624:	f800283a 	ret

2002d628 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
2002d628:	defffe04 	addi	sp,sp,-8
2002d62c:	df000115 	stw	fp,4(sp)
2002d630:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
2002d634:	e03fff15 	stw	zero,-4(fp)
2002d638:	00000506 	br	2002d650 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
2002d63c:	e0bfff17 	ldw	r2,-4(fp)
2002d640:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
2002d644:	e0bfff17 	ldw	r2,-4(fp)
2002d648:	10800804 	addi	r2,r2,32
2002d64c:	e0bfff15 	stw	r2,-4(fp)
2002d650:	e0bfff17 	ldw	r2,-4(fp)
2002d654:	10820030 	cmpltui	r2,r2,2048
2002d658:	103ff81e 	bne	r2,zero,2002d63c <__alt_data_end+0xfffee23c>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
2002d65c:	0001883a 	nop
2002d660:	e037883a 	mov	sp,fp
2002d664:	df000017 	ldw	fp,0(sp)
2002d668:	dec00104 	addi	sp,sp,4
2002d66c:	f800283a 	ret

2002d670 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
2002d670:	defffc04 	addi	sp,sp,-16
2002d674:	df000315 	stw	fp,12(sp)
2002d678:	df000304 	addi	fp,sp,12
2002d67c:	e13ffd15 	stw	r4,-12(fp)
2002d680:	e17ffe15 	stw	r5,-8(fp)
2002d684:	e1bfff15 	stw	r6,-4(fp)
  return len;
2002d688:	e0bfff17 	ldw	r2,-4(fp)
}
2002d68c:	e037883a 	mov	sp,fp
2002d690:	df000017 	ldw	fp,0(sp)
2002d694:	dec00104 	addi	sp,sp,4
2002d698:	f800283a 	ret

2002d69c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2002d69c:	defffe04 	addi	sp,sp,-8
2002d6a0:	dfc00115 	stw	ra,4(sp)
2002d6a4:	df000015 	stw	fp,0(sp)
2002d6a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2002d6ac:	d0a00b17 	ldw	r2,-32724(gp)
2002d6b0:	10000326 	beq	r2,zero,2002d6c0 <alt_get_errno+0x24>
2002d6b4:	d0a00b17 	ldw	r2,-32724(gp)
2002d6b8:	103ee83a 	callr	r2
2002d6bc:	00000106 	br	2002d6c4 <alt_get_errno+0x28>
2002d6c0:	d0a6d104 	addi	r2,gp,-25788
}
2002d6c4:	e037883a 	mov	sp,fp
2002d6c8:	dfc00117 	ldw	ra,4(sp)
2002d6cc:	df000017 	ldw	fp,0(sp)
2002d6d0:	dec00204 	addi	sp,sp,8
2002d6d4:	f800283a 	ret

2002d6d8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
2002d6d8:	defffb04 	addi	sp,sp,-20
2002d6dc:	dfc00415 	stw	ra,16(sp)
2002d6e0:	df000315 	stw	fp,12(sp)
2002d6e4:	df000304 	addi	fp,sp,12
2002d6e8:	e13ffe15 	stw	r4,-8(fp)
2002d6ec:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2002d6f0:	e0bffe17 	ldw	r2,-8(fp)
2002d6f4:	10000616 	blt	r2,zero,2002d710 <fstat+0x38>
2002d6f8:	e0bffe17 	ldw	r2,-8(fp)
2002d6fc:	10c00324 	muli	r3,r2,12
2002d700:	008800f4 	movhi	r2,8195
2002d704:	10828104 	addi	r2,r2,2564
2002d708:	1885883a 	add	r2,r3,r2
2002d70c:	00000106 	br	2002d714 <fstat+0x3c>
2002d710:	0005883a 	mov	r2,zero
2002d714:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
2002d718:	e0bffd17 	ldw	r2,-12(fp)
2002d71c:	10001026 	beq	r2,zero,2002d760 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
2002d720:	e0bffd17 	ldw	r2,-12(fp)
2002d724:	10800017 	ldw	r2,0(r2)
2002d728:	10800817 	ldw	r2,32(r2)
2002d72c:	10000726 	beq	r2,zero,2002d74c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
2002d730:	e0bffd17 	ldw	r2,-12(fp)
2002d734:	10800017 	ldw	r2,0(r2)
2002d738:	10800817 	ldw	r2,32(r2)
2002d73c:	e17fff17 	ldw	r5,-4(fp)
2002d740:	e13ffd17 	ldw	r4,-12(fp)
2002d744:	103ee83a 	callr	r2
2002d748:	00000a06 	br	2002d774 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
2002d74c:	e0bfff17 	ldw	r2,-4(fp)
2002d750:	00c80004 	movi	r3,8192
2002d754:	10c00115 	stw	r3,4(r2)
      return 0;
2002d758:	0005883a 	mov	r2,zero
2002d75c:	00000506 	br	2002d774 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
2002d760:	002d69c0 	call	2002d69c <alt_get_errno>
2002d764:	1007883a 	mov	r3,r2
2002d768:	00801444 	movi	r2,81
2002d76c:	18800015 	stw	r2,0(r3)
    return -1;
2002d770:	00bfffc4 	movi	r2,-1
  }
}
2002d774:	e037883a 	mov	sp,fp
2002d778:	dfc00117 	ldw	ra,4(sp)
2002d77c:	df000017 	ldw	fp,0(sp)
2002d780:	dec00204 	addi	sp,sp,8
2002d784:	f800283a 	ret

2002d788 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2002d788:	defffe04 	addi	sp,sp,-8
2002d78c:	dfc00115 	stw	ra,4(sp)
2002d790:	df000015 	stw	fp,0(sp)
2002d794:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2002d798:	d0a00b17 	ldw	r2,-32724(gp)
2002d79c:	10000326 	beq	r2,zero,2002d7ac <alt_get_errno+0x24>
2002d7a0:	d0a00b17 	ldw	r2,-32724(gp)
2002d7a4:	103ee83a 	callr	r2
2002d7a8:	00000106 	br	2002d7b0 <alt_get_errno+0x28>
2002d7ac:	d0a6d104 	addi	r2,gp,-25788
}
2002d7b0:	e037883a 	mov	sp,fp
2002d7b4:	dfc00117 	ldw	ra,4(sp)
2002d7b8:	df000017 	ldw	fp,0(sp)
2002d7bc:	dec00204 	addi	sp,sp,8
2002d7c0:	f800283a 	ret

2002d7c4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
2002d7c4:	deffed04 	addi	sp,sp,-76
2002d7c8:	dfc01215 	stw	ra,72(sp)
2002d7cc:	df001115 	stw	fp,68(sp)
2002d7d0:	df001104 	addi	fp,sp,68
2002d7d4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2002d7d8:	e0bfff17 	ldw	r2,-4(fp)
2002d7dc:	10000616 	blt	r2,zero,2002d7f8 <isatty+0x34>
2002d7e0:	e0bfff17 	ldw	r2,-4(fp)
2002d7e4:	10c00324 	muli	r3,r2,12
2002d7e8:	008800f4 	movhi	r2,8195
2002d7ec:	10828104 	addi	r2,r2,2564
2002d7f0:	1885883a 	add	r2,r3,r2
2002d7f4:	00000106 	br	2002d7fc <isatty+0x38>
2002d7f8:	0005883a 	mov	r2,zero
2002d7fc:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
2002d800:	e0bfef17 	ldw	r2,-68(fp)
2002d804:	10000e26 	beq	r2,zero,2002d840 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
2002d808:	e0bfef17 	ldw	r2,-68(fp)
2002d80c:	10800017 	ldw	r2,0(r2)
2002d810:	10800817 	ldw	r2,32(r2)
2002d814:	1000021e 	bne	r2,zero,2002d820 <isatty+0x5c>
    {
      return 1;
2002d818:	00800044 	movi	r2,1
2002d81c:	00000d06 	br	2002d854 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
2002d820:	e0bff004 	addi	r2,fp,-64
2002d824:	100b883a 	mov	r5,r2
2002d828:	e13fff17 	ldw	r4,-4(fp)
2002d82c:	002d6d80 	call	2002d6d8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
2002d830:	e0bff117 	ldw	r2,-60(fp)
2002d834:	10880020 	cmpeqi	r2,r2,8192
2002d838:	10803fcc 	andi	r2,r2,255
2002d83c:	00000506 	br	2002d854 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
2002d840:	002d7880 	call	2002d788 <alt_get_errno>
2002d844:	1007883a 	mov	r3,r2
2002d848:	00801444 	movi	r2,81
2002d84c:	18800015 	stw	r2,0(r3)
    return 0;
2002d850:	0005883a 	mov	r2,zero
  }
}
2002d854:	e037883a 	mov	sp,fp
2002d858:	dfc00117 	ldw	ra,4(sp)
2002d85c:	df000017 	ldw	fp,0(sp)
2002d860:	dec00204 	addi	sp,sp,8
2002d864:	f800283a 	ret

2002d868 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
2002d868:	defffc04 	addi	sp,sp,-16
2002d86c:	df000315 	stw	fp,12(sp)
2002d870:	df000304 	addi	fp,sp,12
2002d874:	e13ffd15 	stw	r4,-12(fp)
2002d878:	e17ffe15 	stw	r5,-8(fp)
2002d87c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
2002d880:	e0fffe17 	ldw	r3,-8(fp)
2002d884:	e0bffd17 	ldw	r2,-12(fp)
2002d888:	18800c26 	beq	r3,r2,2002d8bc <alt_load_section+0x54>
  {
    while( to != end )
2002d88c:	00000806 	br	2002d8b0 <alt_load_section+0x48>
    {
      *to++ = *from++;
2002d890:	e0bffe17 	ldw	r2,-8(fp)
2002d894:	10c00104 	addi	r3,r2,4
2002d898:	e0fffe15 	stw	r3,-8(fp)
2002d89c:	e0fffd17 	ldw	r3,-12(fp)
2002d8a0:	19000104 	addi	r4,r3,4
2002d8a4:	e13ffd15 	stw	r4,-12(fp)
2002d8a8:	18c00017 	ldw	r3,0(r3)
2002d8ac:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
2002d8b0:	e0fffe17 	ldw	r3,-8(fp)
2002d8b4:	e0bfff17 	ldw	r2,-4(fp)
2002d8b8:	18bff51e 	bne	r3,r2,2002d890 <__alt_data_end+0xfffee490>
    {
      *to++ = *from++;
    }
  }
}
2002d8bc:	0001883a 	nop
2002d8c0:	e037883a 	mov	sp,fp
2002d8c4:	df000017 	ldw	fp,0(sp)
2002d8c8:	dec00104 	addi	sp,sp,4
2002d8cc:	f800283a 	ret

2002d8d0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
2002d8d0:	defffe04 	addi	sp,sp,-8
2002d8d4:	dfc00115 	stw	ra,4(sp)
2002d8d8:	df000015 	stw	fp,0(sp)
2002d8dc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
2002d8e0:	018800f4 	movhi	r6,8195
2002d8e4:	31870904 	addi	r6,r6,7204
2002d8e8:	014800f4 	movhi	r5,8195
2002d8ec:	29404e04 	addi	r5,r5,312
2002d8f0:	010800f4 	movhi	r4,8195
2002d8f4:	21070904 	addi	r4,r4,7204
2002d8f8:	002d8680 	call	2002d868 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
2002d8fc:	018800b4 	movhi	r6,8194
2002d900:	31807004 	addi	r6,r6,448
2002d904:	014800b4 	movhi	r5,8194
2002d908:	29400804 	addi	r5,r5,32
2002d90c:	010800b4 	movhi	r4,8194
2002d910:	21000804 	addi	r4,r4,32
2002d914:	002d8680 	call	2002d868 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
2002d918:	018800f4 	movhi	r6,8195
2002d91c:	31804e04 	addi	r6,r6,312
2002d920:	014800f4 	movhi	r5,8195
2002d924:	297f6e04 	addi	r5,r5,-584
2002d928:	010800f4 	movhi	r4,8195
2002d92c:	213f6e04 	addi	r4,r4,-584
2002d930:	002d8680 	call	2002d868 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
2002d934:	002d6280 	call	2002d628 <alt_dcache_flush_all>
  alt_icache_flush_all();
2002d938:	002f0cc0 	call	2002f0cc <alt_icache_flush_all>
}
2002d93c:	0001883a 	nop
2002d940:	e037883a 	mov	sp,fp
2002d944:	dfc00117 	ldw	ra,4(sp)
2002d948:	df000017 	ldw	fp,0(sp)
2002d94c:	dec00204 	addi	sp,sp,8
2002d950:	f800283a 	ret

2002d954 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2002d954:	defffe04 	addi	sp,sp,-8
2002d958:	dfc00115 	stw	ra,4(sp)
2002d95c:	df000015 	stw	fp,0(sp)
2002d960:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2002d964:	d0a00b17 	ldw	r2,-32724(gp)
2002d968:	10000326 	beq	r2,zero,2002d978 <alt_get_errno+0x24>
2002d96c:	d0a00b17 	ldw	r2,-32724(gp)
2002d970:	103ee83a 	callr	r2
2002d974:	00000106 	br	2002d97c <alt_get_errno+0x28>
2002d978:	d0a6d104 	addi	r2,gp,-25788
}
2002d97c:	e037883a 	mov	sp,fp
2002d980:	dfc00117 	ldw	ra,4(sp)
2002d984:	df000017 	ldw	fp,0(sp)
2002d988:	dec00204 	addi	sp,sp,8
2002d98c:	f800283a 	ret

2002d990 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
2002d990:	defff904 	addi	sp,sp,-28
2002d994:	dfc00615 	stw	ra,24(sp)
2002d998:	df000515 	stw	fp,20(sp)
2002d99c:	df000504 	addi	fp,sp,20
2002d9a0:	e13ffd15 	stw	r4,-12(fp)
2002d9a4:	e17ffe15 	stw	r5,-8(fp)
2002d9a8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
2002d9ac:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2002d9b0:	e0bffd17 	ldw	r2,-12(fp)
2002d9b4:	10000616 	blt	r2,zero,2002d9d0 <lseek+0x40>
2002d9b8:	e0bffd17 	ldw	r2,-12(fp)
2002d9bc:	10c00324 	muli	r3,r2,12
2002d9c0:	008800f4 	movhi	r2,8195
2002d9c4:	10828104 	addi	r2,r2,2564
2002d9c8:	1885883a 	add	r2,r3,r2
2002d9cc:	00000106 	br	2002d9d4 <lseek+0x44>
2002d9d0:	0005883a 	mov	r2,zero
2002d9d4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
2002d9d8:	e0bffc17 	ldw	r2,-16(fp)
2002d9dc:	10001026 	beq	r2,zero,2002da20 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
2002d9e0:	e0bffc17 	ldw	r2,-16(fp)
2002d9e4:	10800017 	ldw	r2,0(r2)
2002d9e8:	10800717 	ldw	r2,28(r2)
2002d9ec:	10000926 	beq	r2,zero,2002da14 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
2002d9f0:	e0bffc17 	ldw	r2,-16(fp)
2002d9f4:	10800017 	ldw	r2,0(r2)
2002d9f8:	10800717 	ldw	r2,28(r2)
2002d9fc:	e1bfff17 	ldw	r6,-4(fp)
2002da00:	e17ffe17 	ldw	r5,-8(fp)
2002da04:	e13ffc17 	ldw	r4,-16(fp)
2002da08:	103ee83a 	callr	r2
2002da0c:	e0bffb15 	stw	r2,-20(fp)
2002da10:	00000506 	br	2002da28 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
2002da14:	00bfde84 	movi	r2,-134
2002da18:	e0bffb15 	stw	r2,-20(fp)
2002da1c:	00000206 	br	2002da28 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
2002da20:	00bfebc4 	movi	r2,-81
2002da24:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
2002da28:	e0bffb17 	ldw	r2,-20(fp)
2002da2c:	1000070e 	bge	r2,zero,2002da4c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
2002da30:	002d9540 	call	2002d954 <alt_get_errno>
2002da34:	1007883a 	mov	r3,r2
2002da38:	e0bffb17 	ldw	r2,-20(fp)
2002da3c:	0085c83a 	sub	r2,zero,r2
2002da40:	18800015 	stw	r2,0(r3)
    rc = -1;
2002da44:	00bfffc4 	movi	r2,-1
2002da48:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
2002da4c:	e0bffb17 	ldw	r2,-20(fp)
}
2002da50:	e037883a 	mov	sp,fp
2002da54:	dfc00117 	ldw	ra,4(sp)
2002da58:	df000017 	ldw	fp,0(sp)
2002da5c:	dec00204 	addi	sp,sp,8
2002da60:	f800283a 	ret

2002da64 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
2002da64:	defffd04 	addi	sp,sp,-12
2002da68:	dfc00215 	stw	ra,8(sp)
2002da6c:	df000115 	stw	fp,4(sp)
2002da70:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
2002da74:	0009883a 	mov	r4,zero
2002da78:	002e0b00 	call	2002e0b0 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
2002da7c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
2002da80:	002e0e80 	call	2002e0e8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
2002da84:	018800f4 	movhi	r6,8195
2002da88:	31804604 	addi	r6,r6,280
2002da8c:	014800f4 	movhi	r5,8195
2002da90:	29404604 	addi	r5,r5,280
2002da94:	010800f4 	movhi	r4,8195
2002da98:	21004604 	addi	r4,r4,280
2002da9c:	002f4640 	call	2002f464 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
2002daa0:	002f00c0 	call	2002f00c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
2002daa4:	010800f4 	movhi	r4,8195
2002daa8:	213c1b04 	addi	r4,r4,-3988
2002daac:	002fa240 	call	2002fa24 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
2002dab0:	d0a6d217 	ldw	r2,-25784(gp)
2002dab4:	d0e6d317 	ldw	r3,-25780(gp)
2002dab8:	d126d417 	ldw	r4,-25776(gp)
2002dabc:	200d883a 	mov	r6,r4
2002dac0:	180b883a 	mov	r5,r3
2002dac4:	1009883a 	mov	r4,r2
2002dac8:	002020c0 	call	2002020c <main>
2002dacc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
2002dad0:	01000044 	movi	r4,1
2002dad4:	002d5580 	call	2002d558 <close>
  exit (result);
2002dad8:	e13fff17 	ldw	r4,-4(fp)
2002dadc:	002fa380 	call	2002fa38 <exit>

2002dae0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
2002dae0:	defffe04 	addi	sp,sp,-8
2002dae4:	df000115 	stw	fp,4(sp)
2002dae8:	df000104 	addi	fp,sp,4
2002daec:	e13fff15 	stw	r4,-4(fp)
}
2002daf0:	0001883a 	nop
2002daf4:	e037883a 	mov	sp,fp
2002daf8:	df000017 	ldw	fp,0(sp)
2002dafc:	dec00104 	addi	sp,sp,4
2002db00:	f800283a 	ret

2002db04 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
2002db04:	defffe04 	addi	sp,sp,-8
2002db08:	df000115 	stw	fp,4(sp)
2002db0c:	df000104 	addi	fp,sp,4
2002db10:	e13fff15 	stw	r4,-4(fp)
}
2002db14:	0001883a 	nop
2002db18:	e037883a 	mov	sp,fp
2002db1c:	df000017 	ldw	fp,0(sp)
2002db20:	dec00104 	addi	sp,sp,4
2002db24:	f800283a 	ret

2002db28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2002db28:	defffe04 	addi	sp,sp,-8
2002db2c:	dfc00115 	stw	ra,4(sp)
2002db30:	df000015 	stw	fp,0(sp)
2002db34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2002db38:	d0a00b17 	ldw	r2,-32724(gp)
2002db3c:	10000326 	beq	r2,zero,2002db4c <alt_get_errno+0x24>
2002db40:	d0a00b17 	ldw	r2,-32724(gp)
2002db44:	103ee83a 	callr	r2
2002db48:	00000106 	br	2002db50 <alt_get_errno+0x28>
2002db4c:	d0a6d104 	addi	r2,gp,-25788
}
2002db50:	e037883a 	mov	sp,fp
2002db54:	dfc00117 	ldw	ra,4(sp)
2002db58:	df000017 	ldw	fp,0(sp)
2002db5c:	dec00204 	addi	sp,sp,8
2002db60:	f800283a 	ret

2002db64 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
2002db64:	defff904 	addi	sp,sp,-28
2002db68:	dfc00615 	stw	ra,24(sp)
2002db6c:	df000515 	stw	fp,20(sp)
2002db70:	df000504 	addi	fp,sp,20
2002db74:	e13ffd15 	stw	r4,-12(fp)
2002db78:	e17ffe15 	stw	r5,-8(fp)
2002db7c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2002db80:	e0bffd17 	ldw	r2,-12(fp)
2002db84:	10000616 	blt	r2,zero,2002dba0 <read+0x3c>
2002db88:	e0bffd17 	ldw	r2,-12(fp)
2002db8c:	10c00324 	muli	r3,r2,12
2002db90:	008800f4 	movhi	r2,8195
2002db94:	10828104 	addi	r2,r2,2564
2002db98:	1885883a 	add	r2,r3,r2
2002db9c:	00000106 	br	2002dba4 <read+0x40>
2002dba0:	0005883a 	mov	r2,zero
2002dba4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
2002dba8:	e0bffb17 	ldw	r2,-20(fp)
2002dbac:	10002226 	beq	r2,zero,2002dc38 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
2002dbb0:	e0bffb17 	ldw	r2,-20(fp)
2002dbb4:	10800217 	ldw	r2,8(r2)
2002dbb8:	108000cc 	andi	r2,r2,3
2002dbbc:	10800060 	cmpeqi	r2,r2,1
2002dbc0:	1000181e 	bne	r2,zero,2002dc24 <read+0xc0>
        (fd->dev->read))
2002dbc4:	e0bffb17 	ldw	r2,-20(fp)
2002dbc8:	10800017 	ldw	r2,0(r2)
2002dbcc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
2002dbd0:	10001426 	beq	r2,zero,2002dc24 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
2002dbd4:	e0bffb17 	ldw	r2,-20(fp)
2002dbd8:	10800017 	ldw	r2,0(r2)
2002dbdc:	10800517 	ldw	r2,20(r2)
2002dbe0:	e0ffff17 	ldw	r3,-4(fp)
2002dbe4:	180d883a 	mov	r6,r3
2002dbe8:	e17ffe17 	ldw	r5,-8(fp)
2002dbec:	e13ffb17 	ldw	r4,-20(fp)
2002dbf0:	103ee83a 	callr	r2
2002dbf4:	e0bffc15 	stw	r2,-16(fp)
2002dbf8:	e0bffc17 	ldw	r2,-16(fp)
2002dbfc:	1000070e 	bge	r2,zero,2002dc1c <read+0xb8>
        {
          ALT_ERRNO = -rval;
2002dc00:	002db280 	call	2002db28 <alt_get_errno>
2002dc04:	1007883a 	mov	r3,r2
2002dc08:	e0bffc17 	ldw	r2,-16(fp)
2002dc0c:	0085c83a 	sub	r2,zero,r2
2002dc10:	18800015 	stw	r2,0(r3)
          return -1;
2002dc14:	00bfffc4 	movi	r2,-1
2002dc18:	00000c06 	br	2002dc4c <read+0xe8>
        }
        return rval;
2002dc1c:	e0bffc17 	ldw	r2,-16(fp)
2002dc20:	00000a06 	br	2002dc4c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
2002dc24:	002db280 	call	2002db28 <alt_get_errno>
2002dc28:	1007883a 	mov	r3,r2
2002dc2c:	00800344 	movi	r2,13
2002dc30:	18800015 	stw	r2,0(r3)
2002dc34:	00000406 	br	2002dc48 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
2002dc38:	002db280 	call	2002db28 <alt_get_errno>
2002dc3c:	1007883a 	mov	r3,r2
2002dc40:	00801444 	movi	r2,81
2002dc44:	18800015 	stw	r2,0(r3)
  }
  return -1;
2002dc48:	00bfffc4 	movi	r2,-1
}
2002dc4c:	e037883a 	mov	sp,fp
2002dc50:	dfc00117 	ldw	ra,4(sp)
2002dc54:	df000017 	ldw	fp,0(sp)
2002dc58:	dec00204 	addi	sp,sp,8
2002dc5c:	f800283a 	ret

2002dc60 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
2002dc60:	defffe04 	addi	sp,sp,-8
2002dc64:	df000115 	stw	fp,4(sp)
2002dc68:	df000104 	addi	fp,sp,4
2002dc6c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
2002dc70:	e0bfff17 	ldw	r2,-4(fp)
2002dc74:	108000d0 	cmplti	r2,r2,3
2002dc78:	10000d1e 	bne	r2,zero,2002dcb0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
2002dc7c:	008800f4 	movhi	r2,8195
2002dc80:	10828104 	addi	r2,r2,2564
2002dc84:	e0ffff17 	ldw	r3,-4(fp)
2002dc88:	18c00324 	muli	r3,r3,12
2002dc8c:	10c5883a 	add	r2,r2,r3
2002dc90:	10800204 	addi	r2,r2,8
2002dc94:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
2002dc98:	008800f4 	movhi	r2,8195
2002dc9c:	10828104 	addi	r2,r2,2564
2002dca0:	e0ffff17 	ldw	r3,-4(fp)
2002dca4:	18c00324 	muli	r3,r3,12
2002dca8:	10c5883a 	add	r2,r2,r3
2002dcac:	10000015 	stw	zero,0(r2)
  }
}
2002dcb0:	0001883a 	nop
2002dcb4:	e037883a 	mov	sp,fp
2002dcb8:	df000017 	ldw	fp,0(sp)
2002dcbc:	dec00104 	addi	sp,sp,4
2002dcc0:	f800283a 	ret

2002dcc4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
2002dcc4:	defff904 	addi	sp,sp,-28
2002dcc8:	df000615 	stw	fp,24(sp)
2002dccc:	df000604 	addi	fp,sp,24
2002dcd0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2002dcd4:	0005303a 	rdctl	r2,status
2002dcd8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2002dcdc:	e0fffe17 	ldw	r3,-8(fp)
2002dce0:	00bfff84 	movi	r2,-2
2002dce4:	1884703a 	and	r2,r3,r2
2002dce8:	1001703a 	wrctl	status,r2
  
  return context;
2002dcec:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
2002dcf0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
2002dcf4:	d0a00c17 	ldw	r2,-32720(gp)
2002dcf8:	10c000c4 	addi	r3,r2,3
2002dcfc:	00bfff04 	movi	r2,-4
2002dd00:	1884703a 	and	r2,r3,r2
2002dd04:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
2002dd08:	d0e00c17 	ldw	r3,-32720(gp)
2002dd0c:	e0bfff17 	ldw	r2,-4(fp)
2002dd10:	1887883a 	add	r3,r3,r2
2002dd14:	00880134 	movhi	r2,8196
2002dd18:	10bd0004 	addi	r2,r2,-3072
2002dd1c:	10c0062e 	bgeu	r2,r3,2002dd38 <sbrk+0x74>
2002dd20:	e0bffb17 	ldw	r2,-20(fp)
2002dd24:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2002dd28:	e0bffa17 	ldw	r2,-24(fp)
2002dd2c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
2002dd30:	00bfffc4 	movi	r2,-1
2002dd34:	00000b06 	br	2002dd64 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
2002dd38:	d0a00c17 	ldw	r2,-32720(gp)
2002dd3c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
2002dd40:	d0e00c17 	ldw	r3,-32720(gp)
2002dd44:	e0bfff17 	ldw	r2,-4(fp)
2002dd48:	1885883a 	add	r2,r3,r2
2002dd4c:	d0a00c15 	stw	r2,-32720(gp)
2002dd50:	e0bffb17 	ldw	r2,-20(fp)
2002dd54:	e0bffc15 	stw	r2,-16(fp)
2002dd58:	e0bffc17 	ldw	r2,-16(fp)
2002dd5c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
2002dd60:	e0bffd17 	ldw	r2,-12(fp)
} 
2002dd64:	e037883a 	mov	sp,fp
2002dd68:	df000017 	ldw	fp,0(sp)
2002dd6c:	dec00104 	addi	sp,sp,4
2002dd70:	f800283a 	ret

2002dd74 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
2002dd74:	defffa04 	addi	sp,sp,-24
2002dd78:	df000515 	stw	fp,20(sp)
2002dd7c:	df000504 	addi	fp,sp,20
2002dd80:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2002dd84:	0005303a 	rdctl	r2,status
2002dd88:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2002dd8c:	e0fffc17 	ldw	r3,-16(fp)
2002dd90:	00bfff84 	movi	r2,-2
2002dd94:	1884703a 	and	r2,r3,r2
2002dd98:	1001703a 	wrctl	status,r2
  
  return context;
2002dd9c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
2002dda0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
2002dda4:	e0bfff17 	ldw	r2,-4(fp)
2002dda8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
2002ddac:	e0bffd17 	ldw	r2,-12(fp)
2002ddb0:	10800017 	ldw	r2,0(r2)
2002ddb4:	e0fffd17 	ldw	r3,-12(fp)
2002ddb8:	18c00117 	ldw	r3,4(r3)
2002ddbc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
2002ddc0:	e0bffd17 	ldw	r2,-12(fp)
2002ddc4:	10800117 	ldw	r2,4(r2)
2002ddc8:	e0fffd17 	ldw	r3,-12(fp)
2002ddcc:	18c00017 	ldw	r3,0(r3)
2002ddd0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
2002ddd4:	e0bffd17 	ldw	r2,-12(fp)
2002ddd8:	e0fffd17 	ldw	r3,-12(fp)
2002dddc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
2002dde0:	e0bffd17 	ldw	r2,-12(fp)
2002dde4:	e0fffd17 	ldw	r3,-12(fp)
2002dde8:	10c00015 	stw	r3,0(r2)
2002ddec:	e0bffb17 	ldw	r2,-20(fp)
2002ddf0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2002ddf4:	e0bffe17 	ldw	r2,-8(fp)
2002ddf8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
2002ddfc:	0001883a 	nop
2002de00:	e037883a 	mov	sp,fp
2002de04:	df000017 	ldw	fp,0(sp)
2002de08:	dec00104 	addi	sp,sp,4
2002de0c:	f800283a 	ret

2002de10 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
2002de10:	defffb04 	addi	sp,sp,-20
2002de14:	dfc00415 	stw	ra,16(sp)
2002de18:	df000315 	stw	fp,12(sp)
2002de1c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
2002de20:	d0a00d17 	ldw	r2,-32716(gp)
2002de24:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
2002de28:	d0a6d617 	ldw	r2,-25768(gp)
2002de2c:	10800044 	addi	r2,r2,1
2002de30:	d0a6d615 	stw	r2,-25768(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
2002de34:	00002e06 	br	2002def0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
2002de38:	e0bffd17 	ldw	r2,-12(fp)
2002de3c:	10800017 	ldw	r2,0(r2)
2002de40:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
2002de44:	e0bffd17 	ldw	r2,-12(fp)
2002de48:	10800403 	ldbu	r2,16(r2)
2002de4c:	10803fcc 	andi	r2,r2,255
2002de50:	10000426 	beq	r2,zero,2002de64 <alt_tick+0x54>
2002de54:	d0a6d617 	ldw	r2,-25768(gp)
2002de58:	1000021e 	bne	r2,zero,2002de64 <alt_tick+0x54>
    {
      alarm->rollover = 0;
2002de5c:	e0bffd17 	ldw	r2,-12(fp)
2002de60:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
2002de64:	e0bffd17 	ldw	r2,-12(fp)
2002de68:	10800217 	ldw	r2,8(r2)
2002de6c:	d0e6d617 	ldw	r3,-25768(gp)
2002de70:	18801d36 	bltu	r3,r2,2002dee8 <alt_tick+0xd8>
2002de74:	e0bffd17 	ldw	r2,-12(fp)
2002de78:	10800403 	ldbu	r2,16(r2)
2002de7c:	10803fcc 	andi	r2,r2,255
2002de80:	1000191e 	bne	r2,zero,2002dee8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
2002de84:	e0bffd17 	ldw	r2,-12(fp)
2002de88:	10800317 	ldw	r2,12(r2)
2002de8c:	e0fffd17 	ldw	r3,-12(fp)
2002de90:	18c00517 	ldw	r3,20(r3)
2002de94:	1809883a 	mov	r4,r3
2002de98:	103ee83a 	callr	r2
2002de9c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
2002dea0:	e0bfff17 	ldw	r2,-4(fp)
2002dea4:	1000031e 	bne	r2,zero,2002deb4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
2002dea8:	e13ffd17 	ldw	r4,-12(fp)
2002deac:	002dd740 	call	2002dd74 <alt_alarm_stop>
2002deb0:	00000d06 	br	2002dee8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
2002deb4:	e0bffd17 	ldw	r2,-12(fp)
2002deb8:	10c00217 	ldw	r3,8(r2)
2002debc:	e0bfff17 	ldw	r2,-4(fp)
2002dec0:	1887883a 	add	r3,r3,r2
2002dec4:	e0bffd17 	ldw	r2,-12(fp)
2002dec8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
2002decc:	e0bffd17 	ldw	r2,-12(fp)
2002ded0:	10c00217 	ldw	r3,8(r2)
2002ded4:	d0a6d617 	ldw	r2,-25768(gp)
2002ded8:	1880032e 	bgeu	r3,r2,2002dee8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
2002dedc:	e0bffd17 	ldw	r2,-12(fp)
2002dee0:	00c00044 	movi	r3,1
2002dee4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
2002dee8:	e0bffe17 	ldw	r2,-8(fp)
2002deec:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
2002def0:	e0fffd17 	ldw	r3,-12(fp)
2002def4:	d0a00d04 	addi	r2,gp,-32716
2002def8:	18bfcf1e 	bne	r3,r2,2002de38 <__alt_data_end+0xfffeea38>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
2002defc:	0001883a 	nop
}
2002df00:	0001883a 	nop
2002df04:	e037883a 	mov	sp,fp
2002df08:	dfc00117 	ldw	ra,4(sp)
2002df0c:	df000017 	ldw	fp,0(sp)
2002df10:	dec00204 	addi	sp,sp,8
2002df14:	f800283a 	ret

2002df18 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
2002df18:	defffd04 	addi	sp,sp,-12
2002df1c:	dfc00215 	stw	ra,8(sp)
2002df20:	df000115 	stw	fp,4(sp)
2002df24:	df000104 	addi	fp,sp,4
2002df28:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
2002df2c:	e13fff17 	ldw	r4,-4(fp)
2002df30:	002edd40 	call	2002edd4 <alt_busy_sleep>
}
2002df34:	e037883a 	mov	sp,fp
2002df38:	dfc00117 	ldw	ra,4(sp)
2002df3c:	df000017 	ldw	fp,0(sp)
2002df40:	dec00204 	addi	sp,sp,8
2002df44:	f800283a 	ret

2002df48 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2002df48:	defffe04 	addi	sp,sp,-8
2002df4c:	dfc00115 	stw	ra,4(sp)
2002df50:	df000015 	stw	fp,0(sp)
2002df54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2002df58:	d0a00b17 	ldw	r2,-32724(gp)
2002df5c:	10000326 	beq	r2,zero,2002df6c <alt_get_errno+0x24>
2002df60:	d0a00b17 	ldw	r2,-32724(gp)
2002df64:	103ee83a 	callr	r2
2002df68:	00000106 	br	2002df70 <alt_get_errno+0x28>
2002df6c:	d0a6d104 	addi	r2,gp,-25788
}
2002df70:	e037883a 	mov	sp,fp
2002df74:	dfc00117 	ldw	ra,4(sp)
2002df78:	df000017 	ldw	fp,0(sp)
2002df7c:	dec00204 	addi	sp,sp,8
2002df80:	f800283a 	ret

2002df84 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
2002df84:	defff904 	addi	sp,sp,-28
2002df88:	dfc00615 	stw	ra,24(sp)
2002df8c:	df000515 	stw	fp,20(sp)
2002df90:	df000504 	addi	fp,sp,20
2002df94:	e13ffd15 	stw	r4,-12(fp)
2002df98:	e17ffe15 	stw	r5,-8(fp)
2002df9c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2002dfa0:	e0bffd17 	ldw	r2,-12(fp)
2002dfa4:	10000616 	blt	r2,zero,2002dfc0 <write+0x3c>
2002dfa8:	e0bffd17 	ldw	r2,-12(fp)
2002dfac:	10c00324 	muli	r3,r2,12
2002dfb0:	008800f4 	movhi	r2,8195
2002dfb4:	10828104 	addi	r2,r2,2564
2002dfb8:	1885883a 	add	r2,r3,r2
2002dfbc:	00000106 	br	2002dfc4 <write+0x40>
2002dfc0:	0005883a 	mov	r2,zero
2002dfc4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
2002dfc8:	e0bffb17 	ldw	r2,-20(fp)
2002dfcc:	10002126 	beq	r2,zero,2002e054 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
2002dfd0:	e0bffb17 	ldw	r2,-20(fp)
2002dfd4:	10800217 	ldw	r2,8(r2)
2002dfd8:	108000cc 	andi	r2,r2,3
2002dfdc:	10001826 	beq	r2,zero,2002e040 <write+0xbc>
2002dfe0:	e0bffb17 	ldw	r2,-20(fp)
2002dfe4:	10800017 	ldw	r2,0(r2)
2002dfe8:	10800617 	ldw	r2,24(r2)
2002dfec:	10001426 	beq	r2,zero,2002e040 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
2002dff0:	e0bffb17 	ldw	r2,-20(fp)
2002dff4:	10800017 	ldw	r2,0(r2)
2002dff8:	10800617 	ldw	r2,24(r2)
2002dffc:	e0ffff17 	ldw	r3,-4(fp)
2002e000:	180d883a 	mov	r6,r3
2002e004:	e17ffe17 	ldw	r5,-8(fp)
2002e008:	e13ffb17 	ldw	r4,-20(fp)
2002e00c:	103ee83a 	callr	r2
2002e010:	e0bffc15 	stw	r2,-16(fp)
2002e014:	e0bffc17 	ldw	r2,-16(fp)
2002e018:	1000070e 	bge	r2,zero,2002e038 <write+0xb4>
      {
        ALT_ERRNO = -rval;
2002e01c:	002df480 	call	2002df48 <alt_get_errno>
2002e020:	1007883a 	mov	r3,r2
2002e024:	e0bffc17 	ldw	r2,-16(fp)
2002e028:	0085c83a 	sub	r2,zero,r2
2002e02c:	18800015 	stw	r2,0(r3)
        return -1;
2002e030:	00bfffc4 	movi	r2,-1
2002e034:	00000c06 	br	2002e068 <write+0xe4>
      }
      return rval;
2002e038:	e0bffc17 	ldw	r2,-16(fp)
2002e03c:	00000a06 	br	2002e068 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
2002e040:	002df480 	call	2002df48 <alt_get_errno>
2002e044:	1007883a 	mov	r3,r2
2002e048:	00800344 	movi	r2,13
2002e04c:	18800015 	stw	r2,0(r3)
2002e050:	00000406 	br	2002e064 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
2002e054:	002df480 	call	2002df48 <alt_get_errno>
2002e058:	1007883a 	mov	r3,r2
2002e05c:	00801444 	movi	r2,81
2002e060:	18800015 	stw	r2,0(r3)
  }
  return -1;
2002e064:	00bfffc4 	movi	r2,-1
}
2002e068:	e037883a 	mov	sp,fp
2002e06c:	dfc00117 	ldw	ra,4(sp)
2002e070:	df000017 	ldw	fp,0(sp)
2002e074:	dec00204 	addi	sp,sp,8
2002e078:	f800283a 	ret

2002e07c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
2002e07c:	defffd04 	addi	sp,sp,-12
2002e080:	dfc00215 	stw	ra,8(sp)
2002e084:	df000115 	stw	fp,4(sp)
2002e088:	df000104 	addi	fp,sp,4
2002e08c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
2002e090:	d1600804 	addi	r5,gp,-32736
2002e094:	e13fff17 	ldw	r4,-4(fp)
2002e098:	002ef680 	call	2002ef68 <alt_dev_llist_insert>
}
2002e09c:	e037883a 	mov	sp,fp
2002e0a0:	dfc00117 	ldw	ra,4(sp)
2002e0a4:	df000017 	ldw	fp,0(sp)
2002e0a8:	dec00204 	addi	sp,sp,8
2002e0ac:	f800283a 	ret

2002e0b0 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
2002e0b0:	defffd04 	addi	sp,sp,-12
2002e0b4:	dfc00215 	stw	ra,8(sp)
2002e0b8:	df000115 	stw	fp,4(sp)
2002e0bc:	df000104 	addi	fp,sp,4
2002e0c0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
2002e0c4:	002f7340 	call	2002f734 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
2002e0c8:	00800044 	movi	r2,1
2002e0cc:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
2002e0d0:	0001883a 	nop
2002e0d4:	e037883a 	mov	sp,fp
2002e0d8:	dfc00117 	ldw	ra,4(sp)
2002e0dc:	df000017 	ldw	fp,0(sp)
2002e0e0:	dec00204 	addi	sp,sp,8
2002e0e4:	f800283a 	ret

2002e0e8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
2002e0e8:	defffe04 	addi	sp,sp,-8
2002e0ec:	dfc00115 	stw	ra,4(sp)
2002e0f0:	df000015 	stw	fp,0(sp)
2002e0f4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
2002e0f8:	01c0fa04 	movi	r7,1000
2002e0fc:	000d883a 	mov	r6,zero
2002e100:	000b883a 	mov	r5,zero
2002e104:	01080134 	movhi	r4,8196
2002e108:	21040004 	addi	r4,r4,4096
2002e10c:	002ec2c0 	call	2002ec2c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
2002e110:	01800044 	movi	r6,1
2002e114:	000b883a 	mov	r5,zero
2002e118:	010800f4 	movhi	r4,8195
2002e11c:	2102eb04 	addi	r4,r4,2988
2002e120:	002e2b00 	call	2002e2b0 <altera_avalon_jtag_uart_init>
2002e124:	010800f4 	movhi	r4,8195
2002e128:	2102e104 	addi	r4,r4,2948
2002e12c:	002e07c0 	call	2002e07c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
2002e130:	0001883a 	nop
}
2002e134:	0001883a 	nop
2002e138:	e037883a 	mov	sp,fp
2002e13c:	dfc00117 	ldw	ra,4(sp)
2002e140:	df000017 	ldw	fp,0(sp)
2002e144:	dec00204 	addi	sp,sp,8
2002e148:	f800283a 	ret

2002e14c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
2002e14c:	defffa04 	addi	sp,sp,-24
2002e150:	dfc00515 	stw	ra,20(sp)
2002e154:	df000415 	stw	fp,16(sp)
2002e158:	df000404 	addi	fp,sp,16
2002e15c:	e13ffd15 	stw	r4,-12(fp)
2002e160:	e17ffe15 	stw	r5,-8(fp)
2002e164:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
2002e168:	e0bffd17 	ldw	r2,-12(fp)
2002e16c:	10800017 	ldw	r2,0(r2)
2002e170:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
2002e174:	e0bffc17 	ldw	r2,-16(fp)
2002e178:	10c00a04 	addi	r3,r2,40
2002e17c:	e0bffd17 	ldw	r2,-12(fp)
2002e180:	10800217 	ldw	r2,8(r2)
2002e184:	100f883a 	mov	r7,r2
2002e188:	e1bfff17 	ldw	r6,-4(fp)
2002e18c:	e17ffe17 	ldw	r5,-8(fp)
2002e190:	1809883a 	mov	r4,r3
2002e194:	002e7740 	call	2002e774 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
2002e198:	e037883a 	mov	sp,fp
2002e19c:	dfc00117 	ldw	ra,4(sp)
2002e1a0:	df000017 	ldw	fp,0(sp)
2002e1a4:	dec00204 	addi	sp,sp,8
2002e1a8:	f800283a 	ret

2002e1ac <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
2002e1ac:	defffa04 	addi	sp,sp,-24
2002e1b0:	dfc00515 	stw	ra,20(sp)
2002e1b4:	df000415 	stw	fp,16(sp)
2002e1b8:	df000404 	addi	fp,sp,16
2002e1bc:	e13ffd15 	stw	r4,-12(fp)
2002e1c0:	e17ffe15 	stw	r5,-8(fp)
2002e1c4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
2002e1c8:	e0bffd17 	ldw	r2,-12(fp)
2002e1cc:	10800017 	ldw	r2,0(r2)
2002e1d0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
2002e1d4:	e0bffc17 	ldw	r2,-16(fp)
2002e1d8:	10c00a04 	addi	r3,r2,40
2002e1dc:	e0bffd17 	ldw	r2,-12(fp)
2002e1e0:	10800217 	ldw	r2,8(r2)
2002e1e4:	100f883a 	mov	r7,r2
2002e1e8:	e1bfff17 	ldw	r6,-4(fp)
2002e1ec:	e17ffe17 	ldw	r5,-8(fp)
2002e1f0:	1809883a 	mov	r4,r3
2002e1f4:	002e9900 	call	2002e990 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
2002e1f8:	e037883a 	mov	sp,fp
2002e1fc:	dfc00117 	ldw	ra,4(sp)
2002e200:	df000017 	ldw	fp,0(sp)
2002e204:	dec00204 	addi	sp,sp,8
2002e208:	f800283a 	ret

2002e20c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
2002e20c:	defffc04 	addi	sp,sp,-16
2002e210:	dfc00315 	stw	ra,12(sp)
2002e214:	df000215 	stw	fp,8(sp)
2002e218:	df000204 	addi	fp,sp,8
2002e21c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
2002e220:	e0bfff17 	ldw	r2,-4(fp)
2002e224:	10800017 	ldw	r2,0(r2)
2002e228:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
2002e22c:	e0bffe17 	ldw	r2,-8(fp)
2002e230:	10c00a04 	addi	r3,r2,40
2002e234:	e0bfff17 	ldw	r2,-4(fp)
2002e238:	10800217 	ldw	r2,8(r2)
2002e23c:	100b883a 	mov	r5,r2
2002e240:	1809883a 	mov	r4,r3
2002e244:	002e61c0 	call	2002e61c <altera_avalon_jtag_uart_close>
}
2002e248:	e037883a 	mov	sp,fp
2002e24c:	dfc00117 	ldw	ra,4(sp)
2002e250:	df000017 	ldw	fp,0(sp)
2002e254:	dec00204 	addi	sp,sp,8
2002e258:	f800283a 	ret

2002e25c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
2002e25c:	defffa04 	addi	sp,sp,-24
2002e260:	dfc00515 	stw	ra,20(sp)
2002e264:	df000415 	stw	fp,16(sp)
2002e268:	df000404 	addi	fp,sp,16
2002e26c:	e13ffd15 	stw	r4,-12(fp)
2002e270:	e17ffe15 	stw	r5,-8(fp)
2002e274:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
2002e278:	e0bffd17 	ldw	r2,-12(fp)
2002e27c:	10800017 	ldw	r2,0(r2)
2002e280:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
2002e284:	e0bffc17 	ldw	r2,-16(fp)
2002e288:	10800a04 	addi	r2,r2,40
2002e28c:	e1bfff17 	ldw	r6,-4(fp)
2002e290:	e17ffe17 	ldw	r5,-8(fp)
2002e294:	1009883a 	mov	r4,r2
2002e298:	002e6840 	call	2002e684 <altera_avalon_jtag_uart_ioctl>
}
2002e29c:	e037883a 	mov	sp,fp
2002e2a0:	dfc00117 	ldw	ra,4(sp)
2002e2a4:	df000017 	ldw	fp,0(sp)
2002e2a8:	dec00204 	addi	sp,sp,8
2002e2ac:	f800283a 	ret

2002e2b0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
2002e2b0:	defffa04 	addi	sp,sp,-24
2002e2b4:	dfc00515 	stw	ra,20(sp)
2002e2b8:	df000415 	stw	fp,16(sp)
2002e2bc:	df000404 	addi	fp,sp,16
2002e2c0:	e13ffd15 	stw	r4,-12(fp)
2002e2c4:	e17ffe15 	stw	r5,-8(fp)
2002e2c8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
2002e2cc:	e0bffd17 	ldw	r2,-12(fp)
2002e2d0:	00c00044 	movi	r3,1
2002e2d4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
2002e2d8:	e0bffd17 	ldw	r2,-12(fp)
2002e2dc:	10800017 	ldw	r2,0(r2)
2002e2e0:	10800104 	addi	r2,r2,4
2002e2e4:	1007883a 	mov	r3,r2
2002e2e8:	e0bffd17 	ldw	r2,-12(fp)
2002e2ec:	10800817 	ldw	r2,32(r2)
2002e2f0:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
2002e2f4:	e0bffe17 	ldw	r2,-8(fp)
2002e2f8:	e0ffff17 	ldw	r3,-4(fp)
2002e2fc:	d8000015 	stw	zero,0(sp)
2002e300:	e1fffd17 	ldw	r7,-12(fp)
2002e304:	018800f4 	movhi	r6,8195
2002e308:	31b8dc04 	addi	r6,r6,-7312
2002e30c:	180b883a 	mov	r5,r3
2002e310:	1009883a 	mov	r4,r2
2002e314:	002f1000 	call	2002f100 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
2002e318:	e0bffd17 	ldw	r2,-12(fp)
2002e31c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
2002e320:	e0bffd17 	ldw	r2,-12(fp)
2002e324:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
2002e328:	d0e6d517 	ldw	r3,-25772(gp)
2002e32c:	e1fffd17 	ldw	r7,-12(fp)
2002e330:	018800f4 	movhi	r6,8195
2002e334:	31b95f04 	addi	r6,r6,-6788
2002e338:	180b883a 	mov	r5,r3
2002e33c:	1009883a 	mov	r4,r2
2002e340:	002eca80 	call	2002eca8 <alt_alarm_start>
2002e344:	1000040e 	bge	r2,zero,2002e358 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
2002e348:	e0fffd17 	ldw	r3,-12(fp)
2002e34c:	00a00034 	movhi	r2,32768
2002e350:	10bfffc4 	addi	r2,r2,-1
2002e354:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
2002e358:	0001883a 	nop
2002e35c:	e037883a 	mov	sp,fp
2002e360:	dfc00117 	ldw	ra,4(sp)
2002e364:	df000017 	ldw	fp,0(sp)
2002e368:	dec00204 	addi	sp,sp,8
2002e36c:	f800283a 	ret

2002e370 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
2002e370:	defff804 	addi	sp,sp,-32
2002e374:	df000715 	stw	fp,28(sp)
2002e378:	df000704 	addi	fp,sp,28
2002e37c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
2002e380:	e0bfff17 	ldw	r2,-4(fp)
2002e384:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
2002e388:	e0bffb17 	ldw	r2,-20(fp)
2002e38c:	10800017 	ldw	r2,0(r2)
2002e390:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
2002e394:	e0bffc17 	ldw	r2,-16(fp)
2002e398:	10800104 	addi	r2,r2,4
2002e39c:	10800037 	ldwio	r2,0(r2)
2002e3a0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
2002e3a4:	e0bffd17 	ldw	r2,-12(fp)
2002e3a8:	1080c00c 	andi	r2,r2,768
2002e3ac:	10006d26 	beq	r2,zero,2002e564 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
2002e3b0:	e0bffd17 	ldw	r2,-12(fp)
2002e3b4:	1080400c 	andi	r2,r2,256
2002e3b8:	10003526 	beq	r2,zero,2002e490 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
2002e3bc:	00800074 	movhi	r2,1
2002e3c0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2002e3c4:	e0bffb17 	ldw	r2,-20(fp)
2002e3c8:	10800a17 	ldw	r2,40(r2)
2002e3cc:	10800044 	addi	r2,r2,1
2002e3d0:	1081ffcc 	andi	r2,r2,2047
2002e3d4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
2002e3d8:	e0bffb17 	ldw	r2,-20(fp)
2002e3dc:	10c00b17 	ldw	r3,44(r2)
2002e3e0:	e0bffe17 	ldw	r2,-8(fp)
2002e3e4:	18801526 	beq	r3,r2,2002e43c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
2002e3e8:	e0bffc17 	ldw	r2,-16(fp)
2002e3ec:	10800037 	ldwio	r2,0(r2)
2002e3f0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
2002e3f4:	e0bff917 	ldw	r2,-28(fp)
2002e3f8:	10a0000c 	andi	r2,r2,32768
2002e3fc:	10001126 	beq	r2,zero,2002e444 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
2002e400:	e0bffb17 	ldw	r2,-20(fp)
2002e404:	10800a17 	ldw	r2,40(r2)
2002e408:	e0fff917 	ldw	r3,-28(fp)
2002e40c:	1809883a 	mov	r4,r3
2002e410:	e0fffb17 	ldw	r3,-20(fp)
2002e414:	1885883a 	add	r2,r3,r2
2002e418:	10800e04 	addi	r2,r2,56
2002e41c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2002e420:	e0bffb17 	ldw	r2,-20(fp)
2002e424:	10800a17 	ldw	r2,40(r2)
2002e428:	10800044 	addi	r2,r2,1
2002e42c:	10c1ffcc 	andi	r3,r2,2047
2002e430:	e0bffb17 	ldw	r2,-20(fp)
2002e434:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
2002e438:	003fe206 	br	2002e3c4 <__alt_data_end+0xfffeefc4>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
2002e43c:	0001883a 	nop
2002e440:	00000106 	br	2002e448 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
2002e444:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
2002e448:	e0bff917 	ldw	r2,-28(fp)
2002e44c:	10bfffec 	andhi	r2,r2,65535
2002e450:	10000f26 	beq	r2,zero,2002e490 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
2002e454:	e0bffb17 	ldw	r2,-20(fp)
2002e458:	10c00817 	ldw	r3,32(r2)
2002e45c:	00bfff84 	movi	r2,-2
2002e460:	1886703a 	and	r3,r3,r2
2002e464:	e0bffb17 	ldw	r2,-20(fp)
2002e468:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
2002e46c:	e0bffc17 	ldw	r2,-16(fp)
2002e470:	10800104 	addi	r2,r2,4
2002e474:	1007883a 	mov	r3,r2
2002e478:	e0bffb17 	ldw	r2,-20(fp)
2002e47c:	10800817 	ldw	r2,32(r2)
2002e480:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
2002e484:	e0bffc17 	ldw	r2,-16(fp)
2002e488:	10800104 	addi	r2,r2,4
2002e48c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
2002e490:	e0bffd17 	ldw	r2,-12(fp)
2002e494:	1080800c 	andi	r2,r2,512
2002e498:	103fbe26 	beq	r2,zero,2002e394 <__alt_data_end+0xfffeef94>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
2002e49c:	e0bffd17 	ldw	r2,-12(fp)
2002e4a0:	1004d43a 	srli	r2,r2,16
2002e4a4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
2002e4a8:	00001406 	br	2002e4fc <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
2002e4ac:	e0bffc17 	ldw	r2,-16(fp)
2002e4b0:	e0fffb17 	ldw	r3,-20(fp)
2002e4b4:	18c00d17 	ldw	r3,52(r3)
2002e4b8:	e13ffb17 	ldw	r4,-20(fp)
2002e4bc:	20c7883a 	add	r3,r4,r3
2002e4c0:	18c20e04 	addi	r3,r3,2104
2002e4c4:	18c00003 	ldbu	r3,0(r3)
2002e4c8:	18c03fcc 	andi	r3,r3,255
2002e4cc:	18c0201c 	xori	r3,r3,128
2002e4d0:	18ffe004 	addi	r3,r3,-128
2002e4d4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2002e4d8:	e0bffb17 	ldw	r2,-20(fp)
2002e4dc:	10800d17 	ldw	r2,52(r2)
2002e4e0:	10800044 	addi	r2,r2,1
2002e4e4:	10c1ffcc 	andi	r3,r2,2047
2002e4e8:	e0bffb17 	ldw	r2,-20(fp)
2002e4ec:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
2002e4f0:	e0bffa17 	ldw	r2,-24(fp)
2002e4f4:	10bfffc4 	addi	r2,r2,-1
2002e4f8:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
2002e4fc:	e0bffa17 	ldw	r2,-24(fp)
2002e500:	10000526 	beq	r2,zero,2002e518 <altera_avalon_jtag_uart_irq+0x1a8>
2002e504:	e0bffb17 	ldw	r2,-20(fp)
2002e508:	10c00d17 	ldw	r3,52(r2)
2002e50c:	e0bffb17 	ldw	r2,-20(fp)
2002e510:	10800c17 	ldw	r2,48(r2)
2002e514:	18bfe51e 	bne	r3,r2,2002e4ac <__alt_data_end+0xfffef0ac>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
2002e518:	e0bffa17 	ldw	r2,-24(fp)
2002e51c:	103f9d26 	beq	r2,zero,2002e394 <__alt_data_end+0xfffeef94>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
2002e520:	e0bffb17 	ldw	r2,-20(fp)
2002e524:	10c00817 	ldw	r3,32(r2)
2002e528:	00bfff44 	movi	r2,-3
2002e52c:	1886703a 	and	r3,r3,r2
2002e530:	e0bffb17 	ldw	r2,-20(fp)
2002e534:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
2002e538:	e0bffb17 	ldw	r2,-20(fp)
2002e53c:	10800017 	ldw	r2,0(r2)
2002e540:	10800104 	addi	r2,r2,4
2002e544:	1007883a 	mov	r3,r2
2002e548:	e0bffb17 	ldw	r2,-20(fp)
2002e54c:	10800817 	ldw	r2,32(r2)
2002e550:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
2002e554:	e0bffc17 	ldw	r2,-16(fp)
2002e558:	10800104 	addi	r2,r2,4
2002e55c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
2002e560:	003f8c06 	br	2002e394 <__alt_data_end+0xfffeef94>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
2002e564:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
2002e568:	0001883a 	nop
2002e56c:	e037883a 	mov	sp,fp
2002e570:	df000017 	ldw	fp,0(sp)
2002e574:	dec00104 	addi	sp,sp,4
2002e578:	f800283a 	ret

2002e57c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
2002e57c:	defff804 	addi	sp,sp,-32
2002e580:	df000715 	stw	fp,28(sp)
2002e584:	df000704 	addi	fp,sp,28
2002e588:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
2002e58c:	e0bffb17 	ldw	r2,-20(fp)
2002e590:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
2002e594:	e0bff917 	ldw	r2,-28(fp)
2002e598:	10800017 	ldw	r2,0(r2)
2002e59c:	10800104 	addi	r2,r2,4
2002e5a0:	10800037 	ldwio	r2,0(r2)
2002e5a4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
2002e5a8:	e0bffa17 	ldw	r2,-24(fp)
2002e5ac:	1081000c 	andi	r2,r2,1024
2002e5b0:	10000b26 	beq	r2,zero,2002e5e0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
2002e5b4:	e0bff917 	ldw	r2,-28(fp)
2002e5b8:	10800017 	ldw	r2,0(r2)
2002e5bc:	10800104 	addi	r2,r2,4
2002e5c0:	1007883a 	mov	r3,r2
2002e5c4:	e0bff917 	ldw	r2,-28(fp)
2002e5c8:	10800817 	ldw	r2,32(r2)
2002e5cc:	10810014 	ori	r2,r2,1024
2002e5d0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
2002e5d4:	e0bff917 	ldw	r2,-28(fp)
2002e5d8:	10000915 	stw	zero,36(r2)
2002e5dc:	00000a06 	br	2002e608 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
2002e5e0:	e0bff917 	ldw	r2,-28(fp)
2002e5e4:	10c00917 	ldw	r3,36(r2)
2002e5e8:	00a00034 	movhi	r2,32768
2002e5ec:	10bfff04 	addi	r2,r2,-4
2002e5f0:	10c00536 	bltu	r2,r3,2002e608 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
2002e5f4:	e0bff917 	ldw	r2,-28(fp)
2002e5f8:	10800917 	ldw	r2,36(r2)
2002e5fc:	10c00044 	addi	r3,r2,1
2002e600:	e0bff917 	ldw	r2,-28(fp)
2002e604:	10c00915 	stw	r3,36(r2)
2002e608:	d0a6d517 	ldw	r2,-25772(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
2002e60c:	e037883a 	mov	sp,fp
2002e610:	df000017 	ldw	fp,0(sp)
2002e614:	dec00104 	addi	sp,sp,4
2002e618:	f800283a 	ret

2002e61c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
2002e61c:	defffd04 	addi	sp,sp,-12
2002e620:	df000215 	stw	fp,8(sp)
2002e624:	df000204 	addi	fp,sp,8
2002e628:	e13ffe15 	stw	r4,-8(fp)
2002e62c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
2002e630:	00000506 	br	2002e648 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
2002e634:	e0bfff17 	ldw	r2,-4(fp)
2002e638:	1090000c 	andi	r2,r2,16384
2002e63c:	10000226 	beq	r2,zero,2002e648 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
2002e640:	00bffd44 	movi	r2,-11
2002e644:	00000b06 	br	2002e674 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
2002e648:	e0bffe17 	ldw	r2,-8(fp)
2002e64c:	10c00d17 	ldw	r3,52(r2)
2002e650:	e0bffe17 	ldw	r2,-8(fp)
2002e654:	10800c17 	ldw	r2,48(r2)
2002e658:	18800526 	beq	r3,r2,2002e670 <altera_avalon_jtag_uart_close+0x54>
2002e65c:	e0bffe17 	ldw	r2,-8(fp)
2002e660:	10c00917 	ldw	r3,36(r2)
2002e664:	e0bffe17 	ldw	r2,-8(fp)
2002e668:	10800117 	ldw	r2,4(r2)
2002e66c:	18bff136 	bltu	r3,r2,2002e634 <__alt_data_end+0xfffef234>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
2002e670:	0005883a 	mov	r2,zero
}
2002e674:	e037883a 	mov	sp,fp
2002e678:	df000017 	ldw	fp,0(sp)
2002e67c:	dec00104 	addi	sp,sp,4
2002e680:	f800283a 	ret

2002e684 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
2002e684:	defffa04 	addi	sp,sp,-24
2002e688:	df000515 	stw	fp,20(sp)
2002e68c:	df000504 	addi	fp,sp,20
2002e690:	e13ffd15 	stw	r4,-12(fp)
2002e694:	e17ffe15 	stw	r5,-8(fp)
2002e698:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
2002e69c:	00bff9c4 	movi	r2,-25
2002e6a0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
2002e6a4:	e0bffe17 	ldw	r2,-8(fp)
2002e6a8:	10da8060 	cmpeqi	r3,r2,27137
2002e6ac:	1800031e 	bne	r3,zero,2002e6bc <altera_avalon_jtag_uart_ioctl+0x38>
2002e6b0:	109a80a0 	cmpeqi	r2,r2,27138
2002e6b4:	1000181e 	bne	r2,zero,2002e718 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
2002e6b8:	00002906 	br	2002e760 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
2002e6bc:	e0bffd17 	ldw	r2,-12(fp)
2002e6c0:	10c00117 	ldw	r3,4(r2)
2002e6c4:	00a00034 	movhi	r2,32768
2002e6c8:	10bfffc4 	addi	r2,r2,-1
2002e6cc:	18802126 	beq	r3,r2,2002e754 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
2002e6d0:	e0bfff17 	ldw	r2,-4(fp)
2002e6d4:	10800017 	ldw	r2,0(r2)
2002e6d8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
2002e6dc:	e0bffc17 	ldw	r2,-16(fp)
2002e6e0:	10800090 	cmplti	r2,r2,2
2002e6e4:	1000061e 	bne	r2,zero,2002e700 <altera_avalon_jtag_uart_ioctl+0x7c>
2002e6e8:	e0fffc17 	ldw	r3,-16(fp)
2002e6ec:	00a00034 	movhi	r2,32768
2002e6f0:	10bfffc4 	addi	r2,r2,-1
2002e6f4:	18800226 	beq	r3,r2,2002e700 <altera_avalon_jtag_uart_ioctl+0x7c>
2002e6f8:	e0bffc17 	ldw	r2,-16(fp)
2002e6fc:	00000206 	br	2002e708 <altera_avalon_jtag_uart_ioctl+0x84>
2002e700:	00a00034 	movhi	r2,32768
2002e704:	10bfff84 	addi	r2,r2,-2
2002e708:	e0fffd17 	ldw	r3,-12(fp)
2002e70c:	18800115 	stw	r2,4(r3)
      rc = 0;
2002e710:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
2002e714:	00000f06 	br	2002e754 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
2002e718:	e0bffd17 	ldw	r2,-12(fp)
2002e71c:	10c00117 	ldw	r3,4(r2)
2002e720:	00a00034 	movhi	r2,32768
2002e724:	10bfffc4 	addi	r2,r2,-1
2002e728:	18800c26 	beq	r3,r2,2002e75c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
2002e72c:	e0bffd17 	ldw	r2,-12(fp)
2002e730:	10c00917 	ldw	r3,36(r2)
2002e734:	e0bffd17 	ldw	r2,-12(fp)
2002e738:	10800117 	ldw	r2,4(r2)
2002e73c:	1885803a 	cmpltu	r2,r3,r2
2002e740:	10c03fcc 	andi	r3,r2,255
2002e744:	e0bfff17 	ldw	r2,-4(fp)
2002e748:	10c00015 	stw	r3,0(r2)
      rc = 0;
2002e74c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
2002e750:	00000206 	br	2002e75c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
2002e754:	0001883a 	nop
2002e758:	00000106 	br	2002e760 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
2002e75c:	0001883a 	nop

  default:
    break;
  }

  return rc;
2002e760:	e0bffb17 	ldw	r2,-20(fp)
}
2002e764:	e037883a 	mov	sp,fp
2002e768:	df000017 	ldw	fp,0(sp)
2002e76c:	dec00104 	addi	sp,sp,4
2002e770:	f800283a 	ret

2002e774 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
2002e774:	defff304 	addi	sp,sp,-52
2002e778:	dfc00c15 	stw	ra,48(sp)
2002e77c:	df000b15 	stw	fp,44(sp)
2002e780:	df000b04 	addi	fp,sp,44
2002e784:	e13ffc15 	stw	r4,-16(fp)
2002e788:	e17ffd15 	stw	r5,-12(fp)
2002e78c:	e1bffe15 	stw	r6,-8(fp)
2002e790:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
2002e794:	e0bffd17 	ldw	r2,-12(fp)
2002e798:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
2002e79c:	00004706 	br	2002e8bc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
2002e7a0:	e0bffc17 	ldw	r2,-16(fp)
2002e7a4:	10800a17 	ldw	r2,40(r2)
2002e7a8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
2002e7ac:	e0bffc17 	ldw	r2,-16(fp)
2002e7b0:	10800b17 	ldw	r2,44(r2)
2002e7b4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
2002e7b8:	e0fff717 	ldw	r3,-36(fp)
2002e7bc:	e0bff817 	ldw	r2,-32(fp)
2002e7c0:	18800536 	bltu	r3,r2,2002e7d8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
2002e7c4:	e0fff717 	ldw	r3,-36(fp)
2002e7c8:	e0bff817 	ldw	r2,-32(fp)
2002e7cc:	1885c83a 	sub	r2,r3,r2
2002e7d0:	e0bff615 	stw	r2,-40(fp)
2002e7d4:	00000406 	br	2002e7e8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
2002e7d8:	00c20004 	movi	r3,2048
2002e7dc:	e0bff817 	ldw	r2,-32(fp)
2002e7e0:	1885c83a 	sub	r2,r3,r2
2002e7e4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
2002e7e8:	e0bff617 	ldw	r2,-40(fp)
2002e7ec:	10001e26 	beq	r2,zero,2002e868 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
2002e7f0:	e0fffe17 	ldw	r3,-8(fp)
2002e7f4:	e0bff617 	ldw	r2,-40(fp)
2002e7f8:	1880022e 	bgeu	r3,r2,2002e804 <altera_avalon_jtag_uart_read+0x90>
        n = space;
2002e7fc:	e0bffe17 	ldw	r2,-8(fp)
2002e800:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
2002e804:	e0bffc17 	ldw	r2,-16(fp)
2002e808:	10c00e04 	addi	r3,r2,56
2002e80c:	e0bff817 	ldw	r2,-32(fp)
2002e810:	1885883a 	add	r2,r3,r2
2002e814:	e1bff617 	ldw	r6,-40(fp)
2002e818:	100b883a 	mov	r5,r2
2002e81c:	e13ff517 	ldw	r4,-44(fp)
2002e820:	0020b4c0 	call	20020b4c <memcpy>
      ptr   += n;
2002e824:	e0fff517 	ldw	r3,-44(fp)
2002e828:	e0bff617 	ldw	r2,-40(fp)
2002e82c:	1885883a 	add	r2,r3,r2
2002e830:	e0bff515 	stw	r2,-44(fp)
      space -= n;
2002e834:	e0fffe17 	ldw	r3,-8(fp)
2002e838:	e0bff617 	ldw	r2,-40(fp)
2002e83c:	1885c83a 	sub	r2,r3,r2
2002e840:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2002e844:	e0fff817 	ldw	r3,-32(fp)
2002e848:	e0bff617 	ldw	r2,-40(fp)
2002e84c:	1885883a 	add	r2,r3,r2
2002e850:	10c1ffcc 	andi	r3,r2,2047
2002e854:	e0bffc17 	ldw	r2,-16(fp)
2002e858:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
2002e85c:	e0bffe17 	ldw	r2,-8(fp)
2002e860:	00bfcf16 	blt	zero,r2,2002e7a0 <__alt_data_end+0xfffef3a0>
2002e864:	00000106 	br	2002e86c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
2002e868:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
2002e86c:	e0fff517 	ldw	r3,-44(fp)
2002e870:	e0bffd17 	ldw	r2,-12(fp)
2002e874:	1880141e 	bne	r3,r2,2002e8c8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
2002e878:	e0bfff17 	ldw	r2,-4(fp)
2002e87c:	1090000c 	andi	r2,r2,16384
2002e880:	1000131e 	bne	r2,zero,2002e8d0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
2002e884:	0001883a 	nop
2002e888:	e0bffc17 	ldw	r2,-16(fp)
2002e88c:	10c00a17 	ldw	r3,40(r2)
2002e890:	e0bff717 	ldw	r2,-36(fp)
2002e894:	1880051e 	bne	r3,r2,2002e8ac <altera_avalon_jtag_uart_read+0x138>
2002e898:	e0bffc17 	ldw	r2,-16(fp)
2002e89c:	10c00917 	ldw	r3,36(r2)
2002e8a0:	e0bffc17 	ldw	r2,-16(fp)
2002e8a4:	10800117 	ldw	r2,4(r2)
2002e8a8:	18bff736 	bltu	r3,r2,2002e888 <__alt_data_end+0xfffef488>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
2002e8ac:	e0bffc17 	ldw	r2,-16(fp)
2002e8b0:	10c00a17 	ldw	r3,40(r2)
2002e8b4:	e0bff717 	ldw	r2,-36(fp)
2002e8b8:	18800726 	beq	r3,r2,2002e8d8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
2002e8bc:	e0bffe17 	ldw	r2,-8(fp)
2002e8c0:	00bfb716 	blt	zero,r2,2002e7a0 <__alt_data_end+0xfffef3a0>
2002e8c4:	00000506 	br	2002e8dc <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
2002e8c8:	0001883a 	nop
2002e8cc:	00000306 	br	2002e8dc <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
2002e8d0:	0001883a 	nop
2002e8d4:	00000106 	br	2002e8dc <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
2002e8d8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
2002e8dc:	e0fff517 	ldw	r3,-44(fp)
2002e8e0:	e0bffd17 	ldw	r2,-12(fp)
2002e8e4:	18801826 	beq	r3,r2,2002e948 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2002e8e8:	0005303a 	rdctl	r2,status
2002e8ec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2002e8f0:	e0fffb17 	ldw	r3,-20(fp)
2002e8f4:	00bfff84 	movi	r2,-2
2002e8f8:	1884703a 	and	r2,r3,r2
2002e8fc:	1001703a 	wrctl	status,r2
  
  return context;
2002e900:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
2002e904:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
2002e908:	e0bffc17 	ldw	r2,-16(fp)
2002e90c:	10800817 	ldw	r2,32(r2)
2002e910:	10c00054 	ori	r3,r2,1
2002e914:	e0bffc17 	ldw	r2,-16(fp)
2002e918:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
2002e91c:	e0bffc17 	ldw	r2,-16(fp)
2002e920:	10800017 	ldw	r2,0(r2)
2002e924:	10800104 	addi	r2,r2,4
2002e928:	1007883a 	mov	r3,r2
2002e92c:	e0bffc17 	ldw	r2,-16(fp)
2002e930:	10800817 	ldw	r2,32(r2)
2002e934:	18800035 	stwio	r2,0(r3)
2002e938:	e0bffa17 	ldw	r2,-24(fp)
2002e93c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2002e940:	e0bff917 	ldw	r2,-28(fp)
2002e944:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
2002e948:	e0fff517 	ldw	r3,-44(fp)
2002e94c:	e0bffd17 	ldw	r2,-12(fp)
2002e950:	18800426 	beq	r3,r2,2002e964 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
2002e954:	e0fff517 	ldw	r3,-44(fp)
2002e958:	e0bffd17 	ldw	r2,-12(fp)
2002e95c:	1885c83a 	sub	r2,r3,r2
2002e960:	00000606 	br	2002e97c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
2002e964:	e0bfff17 	ldw	r2,-4(fp)
2002e968:	1090000c 	andi	r2,r2,16384
2002e96c:	10000226 	beq	r2,zero,2002e978 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
2002e970:	00bffd44 	movi	r2,-11
2002e974:	00000106 	br	2002e97c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
2002e978:	00bffec4 	movi	r2,-5
}
2002e97c:	e037883a 	mov	sp,fp
2002e980:	dfc00117 	ldw	ra,4(sp)
2002e984:	df000017 	ldw	fp,0(sp)
2002e988:	dec00204 	addi	sp,sp,8
2002e98c:	f800283a 	ret

2002e990 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
2002e990:	defff304 	addi	sp,sp,-52
2002e994:	dfc00c15 	stw	ra,48(sp)
2002e998:	df000b15 	stw	fp,44(sp)
2002e99c:	df000b04 	addi	fp,sp,44
2002e9a0:	e13ffc15 	stw	r4,-16(fp)
2002e9a4:	e17ffd15 	stw	r5,-12(fp)
2002e9a8:	e1bffe15 	stw	r6,-8(fp)
2002e9ac:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
2002e9b0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
2002e9b4:	e0bffd17 	ldw	r2,-12(fp)
2002e9b8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
2002e9bc:	00003706 	br	2002ea9c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
2002e9c0:	e0bffc17 	ldw	r2,-16(fp)
2002e9c4:	10800c17 	ldw	r2,48(r2)
2002e9c8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
2002e9cc:	e0bffc17 	ldw	r2,-16(fp)
2002e9d0:	10800d17 	ldw	r2,52(r2)
2002e9d4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
2002e9d8:	e0fff917 	ldw	r3,-28(fp)
2002e9dc:	e0bff517 	ldw	r2,-44(fp)
2002e9e0:	1880062e 	bgeu	r3,r2,2002e9fc <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
2002e9e4:	e0fff517 	ldw	r3,-44(fp)
2002e9e8:	e0bff917 	ldw	r2,-28(fp)
2002e9ec:	1885c83a 	sub	r2,r3,r2
2002e9f0:	10bfffc4 	addi	r2,r2,-1
2002e9f4:	e0bff615 	stw	r2,-40(fp)
2002e9f8:	00000b06 	br	2002ea28 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
2002e9fc:	e0bff517 	ldw	r2,-44(fp)
2002ea00:	10000526 	beq	r2,zero,2002ea18 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
2002ea04:	00c20004 	movi	r3,2048
2002ea08:	e0bff917 	ldw	r2,-28(fp)
2002ea0c:	1885c83a 	sub	r2,r3,r2
2002ea10:	e0bff615 	stw	r2,-40(fp)
2002ea14:	00000406 	br	2002ea28 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
2002ea18:	00c1ffc4 	movi	r3,2047
2002ea1c:	e0bff917 	ldw	r2,-28(fp)
2002ea20:	1885c83a 	sub	r2,r3,r2
2002ea24:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
2002ea28:	e0bff617 	ldw	r2,-40(fp)
2002ea2c:	10001e26 	beq	r2,zero,2002eaa8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
2002ea30:	e0fffe17 	ldw	r3,-8(fp)
2002ea34:	e0bff617 	ldw	r2,-40(fp)
2002ea38:	1880022e 	bgeu	r3,r2,2002ea44 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
2002ea3c:	e0bffe17 	ldw	r2,-8(fp)
2002ea40:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
2002ea44:	e0bffc17 	ldw	r2,-16(fp)
2002ea48:	10c20e04 	addi	r3,r2,2104
2002ea4c:	e0bff917 	ldw	r2,-28(fp)
2002ea50:	1885883a 	add	r2,r3,r2
2002ea54:	e1bff617 	ldw	r6,-40(fp)
2002ea58:	e17ffd17 	ldw	r5,-12(fp)
2002ea5c:	1009883a 	mov	r4,r2
2002ea60:	0020b4c0 	call	20020b4c <memcpy>
      ptr   += n;
2002ea64:	e0fffd17 	ldw	r3,-12(fp)
2002ea68:	e0bff617 	ldw	r2,-40(fp)
2002ea6c:	1885883a 	add	r2,r3,r2
2002ea70:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
2002ea74:	e0fffe17 	ldw	r3,-8(fp)
2002ea78:	e0bff617 	ldw	r2,-40(fp)
2002ea7c:	1885c83a 	sub	r2,r3,r2
2002ea80:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2002ea84:	e0fff917 	ldw	r3,-28(fp)
2002ea88:	e0bff617 	ldw	r2,-40(fp)
2002ea8c:	1885883a 	add	r2,r3,r2
2002ea90:	10c1ffcc 	andi	r3,r2,2047
2002ea94:	e0bffc17 	ldw	r2,-16(fp)
2002ea98:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
2002ea9c:	e0bffe17 	ldw	r2,-8(fp)
2002eaa0:	00bfc716 	blt	zero,r2,2002e9c0 <__alt_data_end+0xfffef5c0>
2002eaa4:	00000106 	br	2002eaac <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
2002eaa8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2002eaac:	0005303a 	rdctl	r2,status
2002eab0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2002eab4:	e0fffb17 	ldw	r3,-20(fp)
2002eab8:	00bfff84 	movi	r2,-2
2002eabc:	1884703a 	and	r2,r3,r2
2002eac0:	1001703a 	wrctl	status,r2
  
  return context;
2002eac4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
2002eac8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
2002eacc:	e0bffc17 	ldw	r2,-16(fp)
2002ead0:	10800817 	ldw	r2,32(r2)
2002ead4:	10c00094 	ori	r3,r2,2
2002ead8:	e0bffc17 	ldw	r2,-16(fp)
2002eadc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
2002eae0:	e0bffc17 	ldw	r2,-16(fp)
2002eae4:	10800017 	ldw	r2,0(r2)
2002eae8:	10800104 	addi	r2,r2,4
2002eaec:	1007883a 	mov	r3,r2
2002eaf0:	e0bffc17 	ldw	r2,-16(fp)
2002eaf4:	10800817 	ldw	r2,32(r2)
2002eaf8:	18800035 	stwio	r2,0(r3)
2002eafc:	e0bffa17 	ldw	r2,-24(fp)
2002eb00:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2002eb04:	e0bff817 	ldw	r2,-32(fp)
2002eb08:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
2002eb0c:	e0bffe17 	ldw	r2,-8(fp)
2002eb10:	0080100e 	bge	zero,r2,2002eb54 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
2002eb14:	e0bfff17 	ldw	r2,-4(fp)
2002eb18:	1090000c 	andi	r2,r2,16384
2002eb1c:	1000101e 	bne	r2,zero,2002eb60 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
2002eb20:	0001883a 	nop
2002eb24:	e0bffc17 	ldw	r2,-16(fp)
2002eb28:	10c00d17 	ldw	r3,52(r2)
2002eb2c:	e0bff517 	ldw	r2,-44(fp)
2002eb30:	1880051e 	bne	r3,r2,2002eb48 <altera_avalon_jtag_uart_write+0x1b8>
2002eb34:	e0bffc17 	ldw	r2,-16(fp)
2002eb38:	10c00917 	ldw	r3,36(r2)
2002eb3c:	e0bffc17 	ldw	r2,-16(fp)
2002eb40:	10800117 	ldw	r2,4(r2)
2002eb44:	18bff736 	bltu	r3,r2,2002eb24 <__alt_data_end+0xfffef724>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
2002eb48:	e0bffc17 	ldw	r2,-16(fp)
2002eb4c:	10800917 	ldw	r2,36(r2)
2002eb50:	1000051e 	bne	r2,zero,2002eb68 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
2002eb54:	e0bffe17 	ldw	r2,-8(fp)
2002eb58:	00bfd016 	blt	zero,r2,2002ea9c <__alt_data_end+0xfffef69c>
2002eb5c:	00000306 	br	2002eb6c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
2002eb60:	0001883a 	nop
2002eb64:	00000106 	br	2002eb6c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
2002eb68:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
2002eb6c:	e0fffd17 	ldw	r3,-12(fp)
2002eb70:	e0bff717 	ldw	r2,-36(fp)
2002eb74:	18800426 	beq	r3,r2,2002eb88 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
2002eb78:	e0fffd17 	ldw	r3,-12(fp)
2002eb7c:	e0bff717 	ldw	r2,-36(fp)
2002eb80:	1885c83a 	sub	r2,r3,r2
2002eb84:	00000606 	br	2002eba0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
2002eb88:	e0bfff17 	ldw	r2,-4(fp)
2002eb8c:	1090000c 	andi	r2,r2,16384
2002eb90:	10000226 	beq	r2,zero,2002eb9c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
2002eb94:	00bffd44 	movi	r2,-11
2002eb98:	00000106 	br	2002eba0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
2002eb9c:	00bffec4 	movi	r2,-5
}
2002eba0:	e037883a 	mov	sp,fp
2002eba4:	dfc00117 	ldw	ra,4(sp)
2002eba8:	df000017 	ldw	fp,0(sp)
2002ebac:	dec00204 	addi	sp,sp,8
2002ebb0:	f800283a 	ret

2002ebb4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
2002ebb4:	defffa04 	addi	sp,sp,-24
2002ebb8:	dfc00515 	stw	ra,20(sp)
2002ebbc:	df000415 	stw	fp,16(sp)
2002ebc0:	df000404 	addi	fp,sp,16
2002ebc4:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
2002ebc8:	0007883a 	mov	r3,zero
2002ebcc:	e0bfff17 	ldw	r2,-4(fp)
2002ebd0:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
2002ebd4:	e0bfff17 	ldw	r2,-4(fp)
2002ebd8:	10800104 	addi	r2,r2,4
2002ebdc:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2002ebe0:	0005303a 	rdctl	r2,status
2002ebe4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2002ebe8:	e0fffd17 	ldw	r3,-12(fp)
2002ebec:	00bfff84 	movi	r2,-2
2002ebf0:	1884703a 	and	r2,r3,r2
2002ebf4:	1001703a 	wrctl	status,r2
  
  return context;
2002ebf8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
2002ebfc:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
2002ec00:	002de100 	call	2002de10 <alt_tick>
2002ec04:	e0bffc17 	ldw	r2,-16(fp)
2002ec08:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2002ec0c:	e0bffe17 	ldw	r2,-8(fp)
2002ec10:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
2002ec14:	0001883a 	nop
2002ec18:	e037883a 	mov	sp,fp
2002ec1c:	dfc00117 	ldw	ra,4(sp)
2002ec20:	df000017 	ldw	fp,0(sp)
2002ec24:	dec00204 	addi	sp,sp,8
2002ec28:	f800283a 	ret

2002ec2c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
2002ec2c:	defff804 	addi	sp,sp,-32
2002ec30:	dfc00715 	stw	ra,28(sp)
2002ec34:	df000615 	stw	fp,24(sp)
2002ec38:	df000604 	addi	fp,sp,24
2002ec3c:	e13ffc15 	stw	r4,-16(fp)
2002ec40:	e17ffd15 	stw	r5,-12(fp)
2002ec44:	e1bffe15 	stw	r6,-8(fp)
2002ec48:	e1ffff15 	stw	r7,-4(fp)
2002ec4c:	e0bfff17 	ldw	r2,-4(fp)
2002ec50:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
2002ec54:	d0a6d517 	ldw	r2,-25772(gp)
2002ec58:	1000021e 	bne	r2,zero,2002ec64 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
2002ec5c:	e0bffb17 	ldw	r2,-20(fp)
2002ec60:	d0a6d515 	stw	r2,-25772(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
2002ec64:	e0bffc17 	ldw	r2,-16(fp)
2002ec68:	10800104 	addi	r2,r2,4
2002ec6c:	00c001c4 	movi	r3,7
2002ec70:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
2002ec74:	d8000015 	stw	zero,0(sp)
2002ec78:	e1fffc17 	ldw	r7,-16(fp)
2002ec7c:	018800f4 	movhi	r6,8195
2002ec80:	31baed04 	addi	r6,r6,-5196
2002ec84:	e17ffe17 	ldw	r5,-8(fp)
2002ec88:	e13ffd17 	ldw	r4,-12(fp)
2002ec8c:	002f1000 	call	2002f100 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
2002ec90:	0001883a 	nop
2002ec94:	e037883a 	mov	sp,fp
2002ec98:	dfc00117 	ldw	ra,4(sp)
2002ec9c:	df000017 	ldw	fp,0(sp)
2002eca0:	dec00204 	addi	sp,sp,8
2002eca4:	f800283a 	ret

2002eca8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
2002eca8:	defff504 	addi	sp,sp,-44
2002ecac:	df000a15 	stw	fp,40(sp)
2002ecb0:	df000a04 	addi	fp,sp,40
2002ecb4:	e13ffc15 	stw	r4,-16(fp)
2002ecb8:	e17ffd15 	stw	r5,-12(fp)
2002ecbc:	e1bffe15 	stw	r6,-8(fp)
2002ecc0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
2002ecc4:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
2002ecc8:	d0a6d517 	ldw	r2,-25772(gp)
  
  if (alt_ticks_per_second ())
2002eccc:	10003c26 	beq	r2,zero,2002edc0 <alt_alarm_start+0x118>
  {
    if (alarm)
2002ecd0:	e0bffc17 	ldw	r2,-16(fp)
2002ecd4:	10003826 	beq	r2,zero,2002edb8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
2002ecd8:	e0bffc17 	ldw	r2,-16(fp)
2002ecdc:	e0fffe17 	ldw	r3,-8(fp)
2002ece0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
2002ece4:	e0bffc17 	ldw	r2,-16(fp)
2002ece8:	e0ffff17 	ldw	r3,-4(fp)
2002ecec:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2002ecf0:	0005303a 	rdctl	r2,status
2002ecf4:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2002ecf8:	e0fff917 	ldw	r3,-28(fp)
2002ecfc:	00bfff84 	movi	r2,-2
2002ed00:	1884703a 	and	r2,r3,r2
2002ed04:	1001703a 	wrctl	status,r2
  
  return context;
2002ed08:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
2002ed0c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
2002ed10:	d0a6d617 	ldw	r2,-25768(gp)
      
      current_nticks = alt_nticks();
2002ed14:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
2002ed18:	e0fffd17 	ldw	r3,-12(fp)
2002ed1c:	e0bff617 	ldw	r2,-40(fp)
2002ed20:	1885883a 	add	r2,r3,r2
2002ed24:	10c00044 	addi	r3,r2,1
2002ed28:	e0bffc17 	ldw	r2,-16(fp)
2002ed2c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
2002ed30:	e0bffc17 	ldw	r2,-16(fp)
2002ed34:	10c00217 	ldw	r3,8(r2)
2002ed38:	e0bff617 	ldw	r2,-40(fp)
2002ed3c:	1880042e 	bgeu	r3,r2,2002ed50 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
2002ed40:	e0bffc17 	ldw	r2,-16(fp)
2002ed44:	00c00044 	movi	r3,1
2002ed48:	10c00405 	stb	r3,16(r2)
2002ed4c:	00000206 	br	2002ed58 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
2002ed50:	e0bffc17 	ldw	r2,-16(fp)
2002ed54:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
2002ed58:	e0bffc17 	ldw	r2,-16(fp)
2002ed5c:	d0e00d04 	addi	r3,gp,-32716
2002ed60:	e0fffa15 	stw	r3,-24(fp)
2002ed64:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
2002ed68:	e0bffb17 	ldw	r2,-20(fp)
2002ed6c:	e0fffa17 	ldw	r3,-24(fp)
2002ed70:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
2002ed74:	e0bffa17 	ldw	r2,-24(fp)
2002ed78:	10c00017 	ldw	r3,0(r2)
2002ed7c:	e0bffb17 	ldw	r2,-20(fp)
2002ed80:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
2002ed84:	e0bffa17 	ldw	r2,-24(fp)
2002ed88:	10800017 	ldw	r2,0(r2)
2002ed8c:	e0fffb17 	ldw	r3,-20(fp)
2002ed90:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
2002ed94:	e0bffa17 	ldw	r2,-24(fp)
2002ed98:	e0fffb17 	ldw	r3,-20(fp)
2002ed9c:	10c00015 	stw	r3,0(r2)
2002eda0:	e0bff817 	ldw	r2,-32(fp)
2002eda4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2002eda8:	e0bff717 	ldw	r2,-36(fp)
2002edac:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
2002edb0:	0005883a 	mov	r2,zero
2002edb4:	00000306 	br	2002edc4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
2002edb8:	00bffa84 	movi	r2,-22
2002edbc:	00000106 	br	2002edc4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
2002edc0:	00bfde84 	movi	r2,-134
  }
}
2002edc4:	e037883a 	mov	sp,fp
2002edc8:	df000017 	ldw	fp,0(sp)
2002edcc:	dec00104 	addi	sp,sp,4
2002edd0:	f800283a 	ret

2002edd4 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
2002edd4:	defffa04 	addi	sp,sp,-24
2002edd8:	dfc00515 	stw	ra,20(sp)
2002eddc:	df000415 	stw	fp,16(sp)
2002ede0:	df000404 	addi	fp,sp,16
2002ede4:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
2002ede8:	008000c4 	movi	r2,3
2002edec:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
2002edf0:	e0fffd17 	ldw	r3,-12(fp)
2002edf4:	008003f4 	movhi	r2,15
2002edf8:	10909004 	addi	r2,r2,16960
2002edfc:	1885383a 	mul	r2,r3,r2
2002ee00:	100b883a 	mov	r5,r2
2002ee04:	010221b4 	movhi	r4,2182
2002ee08:	21007004 	addi	r4,r4,448
2002ee0c:	0020a900 	call	20020a90 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
2002ee10:	100b883a 	mov	r5,r2
2002ee14:	01200034 	movhi	r4,32768
2002ee18:	213fffc4 	addi	r4,r4,-1
2002ee1c:	0020a900 	call	20020a90 <__udivsi3>
2002ee20:	100b883a 	mov	r5,r2
2002ee24:	e13fff17 	ldw	r4,-4(fp)
2002ee28:	0020a900 	call	20020a90 <__udivsi3>
2002ee2c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
2002ee30:	e0bffe17 	ldw	r2,-8(fp)
2002ee34:	10002a26 	beq	r2,zero,2002eee0 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
2002ee38:	e03ffc15 	stw	zero,-16(fp)
2002ee3c:	00001706 	br	2002ee9c <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
2002ee40:	00a00034 	movhi	r2,32768
2002ee44:	10bfffc4 	addi	r2,r2,-1
2002ee48:	10bfffc4 	addi	r2,r2,-1
2002ee4c:	103ffe1e 	bne	r2,zero,2002ee48 <__alt_data_end+0xfffefa48>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
2002ee50:	e0fffd17 	ldw	r3,-12(fp)
2002ee54:	008003f4 	movhi	r2,15
2002ee58:	10909004 	addi	r2,r2,16960
2002ee5c:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
2002ee60:	100b883a 	mov	r5,r2
2002ee64:	010221b4 	movhi	r4,2182
2002ee68:	21007004 	addi	r4,r4,448
2002ee6c:	0020a900 	call	20020a90 <__udivsi3>
2002ee70:	100b883a 	mov	r5,r2
2002ee74:	01200034 	movhi	r4,32768
2002ee78:	213fffc4 	addi	r4,r4,-1
2002ee7c:	0020a900 	call	20020a90 <__udivsi3>
2002ee80:	1007883a 	mov	r3,r2
2002ee84:	e0bfff17 	ldw	r2,-4(fp)
2002ee88:	10c5c83a 	sub	r2,r2,r3
2002ee8c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
2002ee90:	e0bffc17 	ldw	r2,-16(fp)
2002ee94:	10800044 	addi	r2,r2,1
2002ee98:	e0bffc15 	stw	r2,-16(fp)
2002ee9c:	e0fffc17 	ldw	r3,-16(fp)
2002eea0:	e0bffe17 	ldw	r2,-8(fp)
2002eea4:	18bfe616 	blt	r3,r2,2002ee40 <__alt_data_end+0xfffefa40>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
2002eea8:	e0fffd17 	ldw	r3,-12(fp)
2002eeac:	008003f4 	movhi	r2,15
2002eeb0:	10909004 	addi	r2,r2,16960
2002eeb4:	1885383a 	mul	r2,r3,r2
2002eeb8:	100b883a 	mov	r5,r2
2002eebc:	010221b4 	movhi	r4,2182
2002eec0:	21007004 	addi	r4,r4,448
2002eec4:	0020a900 	call	20020a90 <__udivsi3>
2002eec8:	1007883a 	mov	r3,r2
2002eecc:	e0bfff17 	ldw	r2,-4(fp)
2002eed0:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
2002eed4:	10bfffc4 	addi	r2,r2,-1
2002eed8:	103ffe1e 	bne	r2,zero,2002eed4 <__alt_data_end+0xfffefad4>
2002eedc:	00000d06 	br	2002ef14 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
2002eee0:	e0fffd17 	ldw	r3,-12(fp)
2002eee4:	008003f4 	movhi	r2,15
2002eee8:	10909004 	addi	r2,r2,16960
2002eeec:	1885383a 	mul	r2,r3,r2
2002eef0:	100b883a 	mov	r5,r2
2002eef4:	010221b4 	movhi	r4,2182
2002eef8:	21007004 	addi	r4,r4,448
2002eefc:	0020a900 	call	20020a90 <__udivsi3>
2002ef00:	1007883a 	mov	r3,r2
2002ef04:	e0bfff17 	ldw	r2,-4(fp)
2002ef08:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
2002ef0c:	10bfffc4 	addi	r2,r2,-1
2002ef10:	00bffe16 	blt	zero,r2,2002ef0c <__alt_data_end+0xfffefb0c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
2002ef14:	0005883a 	mov	r2,zero
}
2002ef18:	e037883a 	mov	sp,fp
2002ef1c:	dfc00117 	ldw	ra,4(sp)
2002ef20:	df000017 	ldw	fp,0(sp)
2002ef24:	dec00204 	addi	sp,sp,8
2002ef28:	f800283a 	ret

2002ef2c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2002ef2c:	defffe04 	addi	sp,sp,-8
2002ef30:	dfc00115 	stw	ra,4(sp)
2002ef34:	df000015 	stw	fp,0(sp)
2002ef38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2002ef3c:	d0a00b17 	ldw	r2,-32724(gp)
2002ef40:	10000326 	beq	r2,zero,2002ef50 <alt_get_errno+0x24>
2002ef44:	d0a00b17 	ldw	r2,-32724(gp)
2002ef48:	103ee83a 	callr	r2
2002ef4c:	00000106 	br	2002ef54 <alt_get_errno+0x28>
2002ef50:	d0a6d104 	addi	r2,gp,-25788
}
2002ef54:	e037883a 	mov	sp,fp
2002ef58:	dfc00117 	ldw	ra,4(sp)
2002ef5c:	df000017 	ldw	fp,0(sp)
2002ef60:	dec00204 	addi	sp,sp,8
2002ef64:	f800283a 	ret

2002ef68 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
2002ef68:	defffa04 	addi	sp,sp,-24
2002ef6c:	dfc00515 	stw	ra,20(sp)
2002ef70:	df000415 	stw	fp,16(sp)
2002ef74:	df000404 	addi	fp,sp,16
2002ef78:	e13ffe15 	stw	r4,-8(fp)
2002ef7c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
2002ef80:	e0bffe17 	ldw	r2,-8(fp)
2002ef84:	10000326 	beq	r2,zero,2002ef94 <alt_dev_llist_insert+0x2c>
2002ef88:	e0bffe17 	ldw	r2,-8(fp)
2002ef8c:	10800217 	ldw	r2,8(r2)
2002ef90:	1000061e 	bne	r2,zero,2002efac <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
2002ef94:	002ef2c0 	call	2002ef2c <alt_get_errno>
2002ef98:	1007883a 	mov	r3,r2
2002ef9c:	00800584 	movi	r2,22
2002efa0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
2002efa4:	00bffa84 	movi	r2,-22
2002efa8:	00001306 	br	2002eff8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
2002efac:	e0bffe17 	ldw	r2,-8(fp)
2002efb0:	e0ffff17 	ldw	r3,-4(fp)
2002efb4:	e0fffc15 	stw	r3,-16(fp)
2002efb8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
2002efbc:	e0bffd17 	ldw	r2,-12(fp)
2002efc0:	e0fffc17 	ldw	r3,-16(fp)
2002efc4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
2002efc8:	e0bffc17 	ldw	r2,-16(fp)
2002efcc:	10c00017 	ldw	r3,0(r2)
2002efd0:	e0bffd17 	ldw	r2,-12(fp)
2002efd4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
2002efd8:	e0bffc17 	ldw	r2,-16(fp)
2002efdc:	10800017 	ldw	r2,0(r2)
2002efe0:	e0fffd17 	ldw	r3,-12(fp)
2002efe4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
2002efe8:	e0bffc17 	ldw	r2,-16(fp)
2002efec:	e0fffd17 	ldw	r3,-12(fp)
2002eff0:	10c00015 	stw	r3,0(r2)

  return 0;  
2002eff4:	0005883a 	mov	r2,zero
}
2002eff8:	e037883a 	mov	sp,fp
2002effc:	dfc00117 	ldw	ra,4(sp)
2002f000:	df000017 	ldw	fp,0(sp)
2002f004:	dec00204 	addi	sp,sp,8
2002f008:	f800283a 	ret

2002f00c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
2002f00c:	defffd04 	addi	sp,sp,-12
2002f010:	dfc00215 	stw	ra,8(sp)
2002f014:	df000115 	stw	fp,4(sp)
2002f018:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
2002f01c:	008800f4 	movhi	r2,8195
2002f020:	10bf6d04 	addi	r2,r2,-588
2002f024:	e0bfff15 	stw	r2,-4(fp)
2002f028:	00000606 	br	2002f044 <_do_ctors+0x38>
        (*ctor) (); 
2002f02c:	e0bfff17 	ldw	r2,-4(fp)
2002f030:	10800017 	ldw	r2,0(r2)
2002f034:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
2002f038:	e0bfff17 	ldw	r2,-4(fp)
2002f03c:	10bfff04 	addi	r2,r2,-4
2002f040:	e0bfff15 	stw	r2,-4(fp)
2002f044:	e0ffff17 	ldw	r3,-4(fp)
2002f048:	008800f4 	movhi	r2,8195
2002f04c:	10bf6e04 	addi	r2,r2,-584
2002f050:	18bff62e 	bgeu	r3,r2,2002f02c <__alt_data_end+0xfffefc2c>
        (*ctor) (); 
}
2002f054:	0001883a 	nop
2002f058:	e037883a 	mov	sp,fp
2002f05c:	dfc00117 	ldw	ra,4(sp)
2002f060:	df000017 	ldw	fp,0(sp)
2002f064:	dec00204 	addi	sp,sp,8
2002f068:	f800283a 	ret

2002f06c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
2002f06c:	defffd04 	addi	sp,sp,-12
2002f070:	dfc00215 	stw	ra,8(sp)
2002f074:	df000115 	stw	fp,4(sp)
2002f078:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
2002f07c:	008800f4 	movhi	r2,8195
2002f080:	10bf6d04 	addi	r2,r2,-588
2002f084:	e0bfff15 	stw	r2,-4(fp)
2002f088:	00000606 	br	2002f0a4 <_do_dtors+0x38>
        (*dtor) (); 
2002f08c:	e0bfff17 	ldw	r2,-4(fp)
2002f090:	10800017 	ldw	r2,0(r2)
2002f094:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
2002f098:	e0bfff17 	ldw	r2,-4(fp)
2002f09c:	10bfff04 	addi	r2,r2,-4
2002f0a0:	e0bfff15 	stw	r2,-4(fp)
2002f0a4:	e0ffff17 	ldw	r3,-4(fp)
2002f0a8:	008800f4 	movhi	r2,8195
2002f0ac:	10bf6e04 	addi	r2,r2,-584
2002f0b0:	18bff62e 	bgeu	r3,r2,2002f08c <__alt_data_end+0xfffefc8c>
        (*dtor) (); 
}
2002f0b4:	0001883a 	nop
2002f0b8:	e037883a 	mov	sp,fp
2002f0bc:	dfc00117 	ldw	ra,4(sp)
2002f0c0:	df000017 	ldw	fp,0(sp)
2002f0c4:	dec00204 	addi	sp,sp,8
2002f0c8:	f800283a 	ret

2002f0cc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
2002f0cc:	defffe04 	addi	sp,sp,-8
2002f0d0:	dfc00115 	stw	ra,4(sp)
2002f0d4:	df000015 	stw	fp,0(sp)
2002f0d8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
2002f0dc:	01440004 	movi	r5,4096
2002f0e0:	0009883a 	mov	r4,zero
2002f0e4:	002f9940 	call	2002f994 <alt_icache_flush>
#endif
}
2002f0e8:	0001883a 	nop
2002f0ec:	e037883a 	mov	sp,fp
2002f0f0:	dfc00117 	ldw	ra,4(sp)
2002f0f4:	df000017 	ldw	fp,0(sp)
2002f0f8:	dec00204 	addi	sp,sp,8
2002f0fc:	f800283a 	ret

2002f100 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
2002f100:	defff904 	addi	sp,sp,-28
2002f104:	dfc00615 	stw	ra,24(sp)
2002f108:	df000515 	stw	fp,20(sp)
2002f10c:	df000504 	addi	fp,sp,20
2002f110:	e13ffc15 	stw	r4,-16(fp)
2002f114:	e17ffd15 	stw	r5,-12(fp)
2002f118:	e1bffe15 	stw	r6,-8(fp)
2002f11c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
2002f120:	e0800217 	ldw	r2,8(fp)
2002f124:	d8800015 	stw	r2,0(sp)
2002f128:	e1ffff17 	ldw	r7,-4(fp)
2002f12c:	e1bffe17 	ldw	r6,-8(fp)
2002f130:	e17ffd17 	ldw	r5,-12(fp)
2002f134:	e13ffc17 	ldw	r4,-16(fp)
2002f138:	002f2b00 	call	2002f2b0 <alt_iic_isr_register>
}  
2002f13c:	e037883a 	mov	sp,fp
2002f140:	dfc00117 	ldw	ra,4(sp)
2002f144:	df000017 	ldw	fp,0(sp)
2002f148:	dec00204 	addi	sp,sp,8
2002f14c:	f800283a 	ret

2002f150 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
2002f150:	defff904 	addi	sp,sp,-28
2002f154:	df000615 	stw	fp,24(sp)
2002f158:	df000604 	addi	fp,sp,24
2002f15c:	e13ffe15 	stw	r4,-8(fp)
2002f160:	e17fff15 	stw	r5,-4(fp)
2002f164:	e0bfff17 	ldw	r2,-4(fp)
2002f168:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2002f16c:	0005303a 	rdctl	r2,status
2002f170:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2002f174:	e0fffb17 	ldw	r3,-20(fp)
2002f178:	00bfff84 	movi	r2,-2
2002f17c:	1884703a 	and	r2,r3,r2
2002f180:	1001703a 	wrctl	status,r2
  
  return context;
2002f184:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
2002f188:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
2002f18c:	00c00044 	movi	r3,1
2002f190:	e0bffa17 	ldw	r2,-24(fp)
2002f194:	1884983a 	sll	r2,r3,r2
2002f198:	1007883a 	mov	r3,r2
2002f19c:	d0a6d717 	ldw	r2,-25764(gp)
2002f1a0:	1884b03a 	or	r2,r3,r2
2002f1a4:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
2002f1a8:	d0a6d717 	ldw	r2,-25764(gp)
2002f1ac:	100170fa 	wrctl	ienable,r2
2002f1b0:	e0bffc17 	ldw	r2,-16(fp)
2002f1b4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2002f1b8:	e0bffd17 	ldw	r2,-12(fp)
2002f1bc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
2002f1c0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
2002f1c4:	0001883a 	nop
}
2002f1c8:	e037883a 	mov	sp,fp
2002f1cc:	df000017 	ldw	fp,0(sp)
2002f1d0:	dec00104 	addi	sp,sp,4
2002f1d4:	f800283a 	ret

2002f1d8 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
2002f1d8:	defff904 	addi	sp,sp,-28
2002f1dc:	df000615 	stw	fp,24(sp)
2002f1e0:	df000604 	addi	fp,sp,24
2002f1e4:	e13ffe15 	stw	r4,-8(fp)
2002f1e8:	e17fff15 	stw	r5,-4(fp)
2002f1ec:	e0bfff17 	ldw	r2,-4(fp)
2002f1f0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2002f1f4:	0005303a 	rdctl	r2,status
2002f1f8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2002f1fc:	e0fffb17 	ldw	r3,-20(fp)
2002f200:	00bfff84 	movi	r2,-2
2002f204:	1884703a 	and	r2,r3,r2
2002f208:	1001703a 	wrctl	status,r2
  
  return context;
2002f20c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
2002f210:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
2002f214:	00c00044 	movi	r3,1
2002f218:	e0bffa17 	ldw	r2,-24(fp)
2002f21c:	1884983a 	sll	r2,r3,r2
2002f220:	0084303a 	nor	r2,zero,r2
2002f224:	1007883a 	mov	r3,r2
2002f228:	d0a6d717 	ldw	r2,-25764(gp)
2002f22c:	1884703a 	and	r2,r3,r2
2002f230:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
2002f234:	d0a6d717 	ldw	r2,-25764(gp)
2002f238:	100170fa 	wrctl	ienable,r2
2002f23c:	e0bffc17 	ldw	r2,-16(fp)
2002f240:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2002f244:	e0bffd17 	ldw	r2,-12(fp)
2002f248:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
2002f24c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
2002f250:	0001883a 	nop
}
2002f254:	e037883a 	mov	sp,fp
2002f258:	df000017 	ldw	fp,0(sp)
2002f25c:	dec00104 	addi	sp,sp,4
2002f260:	f800283a 	ret

2002f264 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
2002f264:	defffc04 	addi	sp,sp,-16
2002f268:	df000315 	stw	fp,12(sp)
2002f26c:	df000304 	addi	fp,sp,12
2002f270:	e13ffe15 	stw	r4,-8(fp)
2002f274:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
2002f278:	000530fa 	rdctl	r2,ienable
2002f27c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
2002f280:	00c00044 	movi	r3,1
2002f284:	e0bfff17 	ldw	r2,-4(fp)
2002f288:	1884983a 	sll	r2,r3,r2
2002f28c:	1007883a 	mov	r3,r2
2002f290:	e0bffd17 	ldw	r2,-12(fp)
2002f294:	1884703a 	and	r2,r3,r2
2002f298:	1004c03a 	cmpne	r2,r2,zero
2002f29c:	10803fcc 	andi	r2,r2,255
}
2002f2a0:	e037883a 	mov	sp,fp
2002f2a4:	df000017 	ldw	fp,0(sp)
2002f2a8:	dec00104 	addi	sp,sp,4
2002f2ac:	f800283a 	ret

2002f2b0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
2002f2b0:	defff504 	addi	sp,sp,-44
2002f2b4:	dfc00a15 	stw	ra,40(sp)
2002f2b8:	df000915 	stw	fp,36(sp)
2002f2bc:	df000904 	addi	fp,sp,36
2002f2c0:	e13ffc15 	stw	r4,-16(fp)
2002f2c4:	e17ffd15 	stw	r5,-12(fp)
2002f2c8:	e1bffe15 	stw	r6,-8(fp)
2002f2cc:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
2002f2d0:	00bffa84 	movi	r2,-22
2002f2d4:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
2002f2d8:	e0bffd17 	ldw	r2,-12(fp)
2002f2dc:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
2002f2e0:	e0bff817 	ldw	r2,-32(fp)
2002f2e4:	10800808 	cmpgei	r2,r2,32
2002f2e8:	1000271e 	bne	r2,zero,2002f388 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2002f2ec:	0005303a 	rdctl	r2,status
2002f2f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2002f2f4:	e0fffb17 	ldw	r3,-20(fp)
2002f2f8:	00bfff84 	movi	r2,-2
2002f2fc:	1884703a 	and	r2,r3,r2
2002f300:	1001703a 	wrctl	status,r2
  
  return context;
2002f304:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
2002f308:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
2002f30c:	008800f4 	movhi	r2,8195
2002f310:	108ddb04 	addi	r2,r2,14188
2002f314:	e0fff817 	ldw	r3,-32(fp)
2002f318:	180690fa 	slli	r3,r3,3
2002f31c:	10c5883a 	add	r2,r2,r3
2002f320:	e0fffe17 	ldw	r3,-8(fp)
2002f324:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
2002f328:	008800f4 	movhi	r2,8195
2002f32c:	108ddb04 	addi	r2,r2,14188
2002f330:	e0fff817 	ldw	r3,-32(fp)
2002f334:	180690fa 	slli	r3,r3,3
2002f338:	10c5883a 	add	r2,r2,r3
2002f33c:	10800104 	addi	r2,r2,4
2002f340:	e0ffff17 	ldw	r3,-4(fp)
2002f344:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
2002f348:	e0bffe17 	ldw	r2,-8(fp)
2002f34c:	10000526 	beq	r2,zero,2002f364 <alt_iic_isr_register+0xb4>
2002f350:	e0bff817 	ldw	r2,-32(fp)
2002f354:	100b883a 	mov	r5,r2
2002f358:	e13ffc17 	ldw	r4,-16(fp)
2002f35c:	002f1500 	call	2002f150 <alt_ic_irq_enable>
2002f360:	00000406 	br	2002f374 <alt_iic_isr_register+0xc4>
2002f364:	e0bff817 	ldw	r2,-32(fp)
2002f368:	100b883a 	mov	r5,r2
2002f36c:	e13ffc17 	ldw	r4,-16(fp)
2002f370:	002f1d80 	call	2002f1d8 <alt_ic_irq_disable>
2002f374:	e0bff715 	stw	r2,-36(fp)
2002f378:	e0bffa17 	ldw	r2,-24(fp)
2002f37c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2002f380:	e0bff917 	ldw	r2,-28(fp)
2002f384:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
2002f388:	e0bff717 	ldw	r2,-36(fp)
}
2002f38c:	e037883a 	mov	sp,fp
2002f390:	dfc00117 	ldw	ra,4(sp)
2002f394:	df000017 	ldw	fp,0(sp)
2002f398:	dec00204 	addi	sp,sp,8
2002f39c:	f800283a 	ret

2002f3a0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
2002f3a0:	defff904 	addi	sp,sp,-28
2002f3a4:	dfc00615 	stw	ra,24(sp)
2002f3a8:	df000515 	stw	fp,20(sp)
2002f3ac:	df000504 	addi	fp,sp,20
2002f3b0:	e13ffc15 	stw	r4,-16(fp)
2002f3b4:	e17ffd15 	stw	r5,-12(fp)
2002f3b8:	e1bffe15 	stw	r6,-8(fp)
2002f3bc:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
2002f3c0:	e1bfff17 	ldw	r6,-4(fp)
2002f3c4:	e17ffe17 	ldw	r5,-8(fp)
2002f3c8:	e13ffd17 	ldw	r4,-12(fp)
2002f3cc:	002f5e00 	call	2002f5e0 <open>
2002f3d0:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
2002f3d4:	e0bffb17 	ldw	r2,-20(fp)
2002f3d8:	10001c16 	blt	r2,zero,2002f44c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
2002f3dc:	008800f4 	movhi	r2,8195
2002f3e0:	10828104 	addi	r2,r2,2564
2002f3e4:	e0fffb17 	ldw	r3,-20(fp)
2002f3e8:	18c00324 	muli	r3,r3,12
2002f3ec:	10c5883a 	add	r2,r2,r3
2002f3f0:	10c00017 	ldw	r3,0(r2)
2002f3f4:	e0bffc17 	ldw	r2,-16(fp)
2002f3f8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
2002f3fc:	008800f4 	movhi	r2,8195
2002f400:	10828104 	addi	r2,r2,2564
2002f404:	e0fffb17 	ldw	r3,-20(fp)
2002f408:	18c00324 	muli	r3,r3,12
2002f40c:	10c5883a 	add	r2,r2,r3
2002f410:	10800104 	addi	r2,r2,4
2002f414:	10c00017 	ldw	r3,0(r2)
2002f418:	e0bffc17 	ldw	r2,-16(fp)
2002f41c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
2002f420:	008800f4 	movhi	r2,8195
2002f424:	10828104 	addi	r2,r2,2564
2002f428:	e0fffb17 	ldw	r3,-20(fp)
2002f42c:	18c00324 	muli	r3,r3,12
2002f430:	10c5883a 	add	r2,r2,r3
2002f434:	10800204 	addi	r2,r2,8
2002f438:	10c00017 	ldw	r3,0(r2)
2002f43c:	e0bffc17 	ldw	r2,-16(fp)
2002f440:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
2002f444:	e13ffb17 	ldw	r4,-20(fp)
2002f448:	002dc600 	call	2002dc60 <alt_release_fd>
  }
} 
2002f44c:	0001883a 	nop
2002f450:	e037883a 	mov	sp,fp
2002f454:	dfc00117 	ldw	ra,4(sp)
2002f458:	df000017 	ldw	fp,0(sp)
2002f45c:	dec00204 	addi	sp,sp,8
2002f460:	f800283a 	ret

2002f464 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
2002f464:	defffb04 	addi	sp,sp,-20
2002f468:	dfc00415 	stw	ra,16(sp)
2002f46c:	df000315 	stw	fp,12(sp)
2002f470:	df000304 	addi	fp,sp,12
2002f474:	e13ffd15 	stw	r4,-12(fp)
2002f478:	e17ffe15 	stw	r5,-8(fp)
2002f47c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
2002f480:	01c07fc4 	movi	r7,511
2002f484:	01800044 	movi	r6,1
2002f488:	e17ffd17 	ldw	r5,-12(fp)
2002f48c:	010800f4 	movhi	r4,8195
2002f490:	21028404 	addi	r4,r4,2576
2002f494:	002f3a00 	call	2002f3a0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
2002f498:	01c07fc4 	movi	r7,511
2002f49c:	000d883a 	mov	r6,zero
2002f4a0:	e17ffe17 	ldw	r5,-8(fp)
2002f4a4:	010800f4 	movhi	r4,8195
2002f4a8:	21028104 	addi	r4,r4,2564
2002f4ac:	002f3a00 	call	2002f3a0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
2002f4b0:	01c07fc4 	movi	r7,511
2002f4b4:	01800044 	movi	r6,1
2002f4b8:	e17fff17 	ldw	r5,-4(fp)
2002f4bc:	010800f4 	movhi	r4,8195
2002f4c0:	21028704 	addi	r4,r4,2588
2002f4c4:	002f3a00 	call	2002f3a0 <alt_open_fd>
}  
2002f4c8:	0001883a 	nop
2002f4cc:	e037883a 	mov	sp,fp
2002f4d0:	dfc00117 	ldw	ra,4(sp)
2002f4d4:	df000017 	ldw	fp,0(sp)
2002f4d8:	dec00204 	addi	sp,sp,8
2002f4dc:	f800283a 	ret

2002f4e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2002f4e0:	defffe04 	addi	sp,sp,-8
2002f4e4:	dfc00115 	stw	ra,4(sp)
2002f4e8:	df000015 	stw	fp,0(sp)
2002f4ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2002f4f0:	d0a00b17 	ldw	r2,-32724(gp)
2002f4f4:	10000326 	beq	r2,zero,2002f504 <alt_get_errno+0x24>
2002f4f8:	d0a00b17 	ldw	r2,-32724(gp)
2002f4fc:	103ee83a 	callr	r2
2002f500:	00000106 	br	2002f508 <alt_get_errno+0x28>
2002f504:	d0a6d104 	addi	r2,gp,-25788
}
2002f508:	e037883a 	mov	sp,fp
2002f50c:	dfc00117 	ldw	ra,4(sp)
2002f510:	df000017 	ldw	fp,0(sp)
2002f514:	dec00204 	addi	sp,sp,8
2002f518:	f800283a 	ret

2002f51c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
2002f51c:	defffd04 	addi	sp,sp,-12
2002f520:	df000215 	stw	fp,8(sp)
2002f524:	df000204 	addi	fp,sp,8
2002f528:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
2002f52c:	e0bfff17 	ldw	r2,-4(fp)
2002f530:	10800217 	ldw	r2,8(r2)
2002f534:	10d00034 	orhi	r3,r2,16384
2002f538:	e0bfff17 	ldw	r2,-4(fp)
2002f53c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
2002f540:	e03ffe15 	stw	zero,-8(fp)
2002f544:	00001d06 	br	2002f5bc <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
2002f548:	008800f4 	movhi	r2,8195
2002f54c:	10828104 	addi	r2,r2,2564
2002f550:	e0fffe17 	ldw	r3,-8(fp)
2002f554:	18c00324 	muli	r3,r3,12
2002f558:	10c5883a 	add	r2,r2,r3
2002f55c:	10c00017 	ldw	r3,0(r2)
2002f560:	e0bfff17 	ldw	r2,-4(fp)
2002f564:	10800017 	ldw	r2,0(r2)
2002f568:	1880111e 	bne	r3,r2,2002f5b0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
2002f56c:	008800f4 	movhi	r2,8195
2002f570:	10828104 	addi	r2,r2,2564
2002f574:	e0fffe17 	ldw	r3,-8(fp)
2002f578:	18c00324 	muli	r3,r3,12
2002f57c:	10c5883a 	add	r2,r2,r3
2002f580:	10800204 	addi	r2,r2,8
2002f584:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
2002f588:	1000090e 	bge	r2,zero,2002f5b0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
2002f58c:	e0bffe17 	ldw	r2,-8(fp)
2002f590:	10c00324 	muli	r3,r2,12
2002f594:	008800f4 	movhi	r2,8195
2002f598:	10828104 	addi	r2,r2,2564
2002f59c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
2002f5a0:	e0bfff17 	ldw	r2,-4(fp)
2002f5a4:	18800226 	beq	r3,r2,2002f5b0 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
2002f5a8:	00bffcc4 	movi	r2,-13
2002f5ac:	00000806 	br	2002f5d0 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
2002f5b0:	e0bffe17 	ldw	r2,-8(fp)
2002f5b4:	10800044 	addi	r2,r2,1
2002f5b8:	e0bffe15 	stw	r2,-8(fp)
2002f5bc:	d0a00a17 	ldw	r2,-32728(gp)
2002f5c0:	1007883a 	mov	r3,r2
2002f5c4:	e0bffe17 	ldw	r2,-8(fp)
2002f5c8:	18bfdf2e 	bgeu	r3,r2,2002f548 <__alt_data_end+0xffff0148>
    }
  }
  
  /* The device is not locked */
 
  return 0;
2002f5cc:	0005883a 	mov	r2,zero
}
2002f5d0:	e037883a 	mov	sp,fp
2002f5d4:	df000017 	ldw	fp,0(sp)
2002f5d8:	dec00104 	addi	sp,sp,4
2002f5dc:	f800283a 	ret

2002f5e0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
2002f5e0:	defff604 	addi	sp,sp,-40
2002f5e4:	dfc00915 	stw	ra,36(sp)
2002f5e8:	df000815 	stw	fp,32(sp)
2002f5ec:	df000804 	addi	fp,sp,32
2002f5f0:	e13ffd15 	stw	r4,-12(fp)
2002f5f4:	e17ffe15 	stw	r5,-8(fp)
2002f5f8:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
2002f5fc:	00bfffc4 	movi	r2,-1
2002f600:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
2002f604:	00bffb44 	movi	r2,-19
2002f608:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
2002f60c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
2002f610:	d1600804 	addi	r5,gp,-32736
2002f614:	e13ffd17 	ldw	r4,-12(fp)
2002f618:	002f7580 	call	2002f758 <alt_find_dev>
2002f61c:	e0bff815 	stw	r2,-32(fp)
2002f620:	e0bff817 	ldw	r2,-32(fp)
2002f624:	1000051e 	bne	r2,zero,2002f63c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
2002f628:	e13ffd17 	ldw	r4,-12(fp)
2002f62c:	002f7e80 	call	2002f7e8 <alt_find_file>
2002f630:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
2002f634:	00800044 	movi	r2,1
2002f638:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
2002f63c:	e0bff817 	ldw	r2,-32(fp)
2002f640:	10002926 	beq	r2,zero,2002f6e8 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
2002f644:	e13ff817 	ldw	r4,-32(fp)
2002f648:	002f8f00 	call	2002f8f0 <alt_get_fd>
2002f64c:	e0bff915 	stw	r2,-28(fp)
2002f650:	e0bff917 	ldw	r2,-28(fp)
2002f654:	1000030e 	bge	r2,zero,2002f664 <open+0x84>
    {
      status = index;
2002f658:	e0bff917 	ldw	r2,-28(fp)
2002f65c:	e0bffa15 	stw	r2,-24(fp)
2002f660:	00002306 	br	2002f6f0 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
2002f664:	e0bff917 	ldw	r2,-28(fp)
2002f668:	10c00324 	muli	r3,r2,12
2002f66c:	008800f4 	movhi	r2,8195
2002f670:	10828104 	addi	r2,r2,2564
2002f674:	1885883a 	add	r2,r3,r2
2002f678:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
2002f67c:	e0fffe17 	ldw	r3,-8(fp)
2002f680:	00900034 	movhi	r2,16384
2002f684:	10bfffc4 	addi	r2,r2,-1
2002f688:	1886703a 	and	r3,r3,r2
2002f68c:	e0bffc17 	ldw	r2,-16(fp)
2002f690:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
2002f694:	e0bffb17 	ldw	r2,-20(fp)
2002f698:	1000051e 	bne	r2,zero,2002f6b0 <open+0xd0>
2002f69c:	e13ffc17 	ldw	r4,-16(fp)
2002f6a0:	002f51c0 	call	2002f51c <alt_file_locked>
2002f6a4:	e0bffa15 	stw	r2,-24(fp)
2002f6a8:	e0bffa17 	ldw	r2,-24(fp)
2002f6ac:	10001016 	blt	r2,zero,2002f6f0 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
2002f6b0:	e0bff817 	ldw	r2,-32(fp)
2002f6b4:	10800317 	ldw	r2,12(r2)
2002f6b8:	10000826 	beq	r2,zero,2002f6dc <open+0xfc>
2002f6bc:	e0bff817 	ldw	r2,-32(fp)
2002f6c0:	10800317 	ldw	r2,12(r2)
2002f6c4:	e1ffff17 	ldw	r7,-4(fp)
2002f6c8:	e1bffe17 	ldw	r6,-8(fp)
2002f6cc:	e17ffd17 	ldw	r5,-12(fp)
2002f6d0:	e13ffc17 	ldw	r4,-16(fp)
2002f6d4:	103ee83a 	callr	r2
2002f6d8:	00000106 	br	2002f6e0 <open+0x100>
2002f6dc:	0005883a 	mov	r2,zero
2002f6e0:	e0bffa15 	stw	r2,-24(fp)
2002f6e4:	00000206 	br	2002f6f0 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
2002f6e8:	00bffb44 	movi	r2,-19
2002f6ec:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
2002f6f0:	e0bffa17 	ldw	r2,-24(fp)
2002f6f4:	1000090e 	bge	r2,zero,2002f71c <open+0x13c>
  {
    alt_release_fd (index);  
2002f6f8:	e13ff917 	ldw	r4,-28(fp)
2002f6fc:	002dc600 	call	2002dc60 <alt_release_fd>
    ALT_ERRNO = -status;
2002f700:	002f4e00 	call	2002f4e0 <alt_get_errno>
2002f704:	1007883a 	mov	r3,r2
2002f708:	e0bffa17 	ldw	r2,-24(fp)
2002f70c:	0085c83a 	sub	r2,zero,r2
2002f710:	18800015 	stw	r2,0(r3)
    return -1;
2002f714:	00bfffc4 	movi	r2,-1
2002f718:	00000106 	br	2002f720 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
2002f71c:	e0bff917 	ldw	r2,-28(fp)
}
2002f720:	e037883a 	mov	sp,fp
2002f724:	dfc00117 	ldw	ra,4(sp)
2002f728:	df000017 	ldw	fp,0(sp)
2002f72c:	dec00204 	addi	sp,sp,8
2002f730:	f800283a 	ret

2002f734 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
2002f734:	deffff04 	addi	sp,sp,-4
2002f738:	df000015 	stw	fp,0(sp)
2002f73c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
2002f740:	000170fa 	wrctl	ienable,zero
}
2002f744:	0001883a 	nop
2002f748:	e037883a 	mov	sp,fp
2002f74c:	df000017 	ldw	fp,0(sp)
2002f750:	dec00104 	addi	sp,sp,4
2002f754:	f800283a 	ret

2002f758 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
2002f758:	defffa04 	addi	sp,sp,-24
2002f75c:	dfc00515 	stw	ra,20(sp)
2002f760:	df000415 	stw	fp,16(sp)
2002f764:	df000404 	addi	fp,sp,16
2002f768:	e13ffe15 	stw	r4,-8(fp)
2002f76c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
2002f770:	e0bfff17 	ldw	r2,-4(fp)
2002f774:	10800017 	ldw	r2,0(r2)
2002f778:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
2002f77c:	e13ffe17 	ldw	r4,-8(fp)
2002f780:	0020e700 	call	20020e70 <strlen>
2002f784:	10800044 	addi	r2,r2,1
2002f788:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
2002f78c:	00000d06 	br	2002f7c4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
2002f790:	e0bffc17 	ldw	r2,-16(fp)
2002f794:	10800217 	ldw	r2,8(r2)
2002f798:	e0fffd17 	ldw	r3,-12(fp)
2002f79c:	180d883a 	mov	r6,r3
2002f7a0:	e17ffe17 	ldw	r5,-8(fp)
2002f7a4:	1009883a 	mov	r4,r2
2002f7a8:	002fa700 	call	2002fa70 <memcmp>
2002f7ac:	1000021e 	bne	r2,zero,2002f7b8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
2002f7b0:	e0bffc17 	ldw	r2,-16(fp)
2002f7b4:	00000706 	br	2002f7d4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
2002f7b8:	e0bffc17 	ldw	r2,-16(fp)
2002f7bc:	10800017 	ldw	r2,0(r2)
2002f7c0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
2002f7c4:	e0fffc17 	ldw	r3,-16(fp)
2002f7c8:	e0bfff17 	ldw	r2,-4(fp)
2002f7cc:	18bff01e 	bne	r3,r2,2002f790 <__alt_data_end+0xffff0390>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
2002f7d0:	0005883a 	mov	r2,zero
}
2002f7d4:	e037883a 	mov	sp,fp
2002f7d8:	dfc00117 	ldw	ra,4(sp)
2002f7dc:	df000017 	ldw	fp,0(sp)
2002f7e0:	dec00204 	addi	sp,sp,8
2002f7e4:	f800283a 	ret

2002f7e8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
2002f7e8:	defffb04 	addi	sp,sp,-20
2002f7ec:	dfc00415 	stw	ra,16(sp)
2002f7f0:	df000315 	stw	fp,12(sp)
2002f7f4:	df000304 	addi	fp,sp,12
2002f7f8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
2002f7fc:	d0a00617 	ldw	r2,-32744(gp)
2002f800:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
2002f804:	00003106 	br	2002f8cc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
2002f808:	e0bffd17 	ldw	r2,-12(fp)
2002f80c:	10800217 	ldw	r2,8(r2)
2002f810:	1009883a 	mov	r4,r2
2002f814:	0020e700 	call	20020e70 <strlen>
2002f818:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
2002f81c:	e0bffd17 	ldw	r2,-12(fp)
2002f820:	10c00217 	ldw	r3,8(r2)
2002f824:	e0bffe17 	ldw	r2,-8(fp)
2002f828:	10bfffc4 	addi	r2,r2,-1
2002f82c:	1885883a 	add	r2,r3,r2
2002f830:	10800003 	ldbu	r2,0(r2)
2002f834:	10803fcc 	andi	r2,r2,255
2002f838:	1080201c 	xori	r2,r2,128
2002f83c:	10bfe004 	addi	r2,r2,-128
2002f840:	10800bd8 	cmpnei	r2,r2,47
2002f844:	1000031e 	bne	r2,zero,2002f854 <alt_find_file+0x6c>
    {
      len -= 1;
2002f848:	e0bffe17 	ldw	r2,-8(fp)
2002f84c:	10bfffc4 	addi	r2,r2,-1
2002f850:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
2002f854:	e0bffe17 	ldw	r2,-8(fp)
2002f858:	e0ffff17 	ldw	r3,-4(fp)
2002f85c:	1885883a 	add	r2,r3,r2
2002f860:	10800003 	ldbu	r2,0(r2)
2002f864:	10803fcc 	andi	r2,r2,255
2002f868:	1080201c 	xori	r2,r2,128
2002f86c:	10bfe004 	addi	r2,r2,-128
2002f870:	10800be0 	cmpeqi	r2,r2,47
2002f874:	1000081e 	bne	r2,zero,2002f898 <alt_find_file+0xb0>
2002f878:	e0bffe17 	ldw	r2,-8(fp)
2002f87c:	e0ffff17 	ldw	r3,-4(fp)
2002f880:	1885883a 	add	r2,r3,r2
2002f884:	10800003 	ldbu	r2,0(r2)
2002f888:	10803fcc 	andi	r2,r2,255
2002f88c:	1080201c 	xori	r2,r2,128
2002f890:	10bfe004 	addi	r2,r2,-128
2002f894:	10000a1e 	bne	r2,zero,2002f8c0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
2002f898:	e0bffd17 	ldw	r2,-12(fp)
2002f89c:	10800217 	ldw	r2,8(r2)
2002f8a0:	e0fffe17 	ldw	r3,-8(fp)
2002f8a4:	180d883a 	mov	r6,r3
2002f8a8:	e17fff17 	ldw	r5,-4(fp)
2002f8ac:	1009883a 	mov	r4,r2
2002f8b0:	002fa700 	call	2002fa70 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
2002f8b4:	1000021e 	bne	r2,zero,2002f8c0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
2002f8b8:	e0bffd17 	ldw	r2,-12(fp)
2002f8bc:	00000706 	br	2002f8dc <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
2002f8c0:	e0bffd17 	ldw	r2,-12(fp)
2002f8c4:	10800017 	ldw	r2,0(r2)
2002f8c8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
2002f8cc:	e0fffd17 	ldw	r3,-12(fp)
2002f8d0:	d0a00604 	addi	r2,gp,-32744
2002f8d4:	18bfcc1e 	bne	r3,r2,2002f808 <__alt_data_end+0xffff0408>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
2002f8d8:	0005883a 	mov	r2,zero
}
2002f8dc:	e037883a 	mov	sp,fp
2002f8e0:	dfc00117 	ldw	ra,4(sp)
2002f8e4:	df000017 	ldw	fp,0(sp)
2002f8e8:	dec00204 	addi	sp,sp,8
2002f8ec:	f800283a 	ret

2002f8f0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
2002f8f0:	defffc04 	addi	sp,sp,-16
2002f8f4:	df000315 	stw	fp,12(sp)
2002f8f8:	df000304 	addi	fp,sp,12
2002f8fc:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
2002f900:	00bffa04 	movi	r2,-24
2002f904:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
2002f908:	e03ffd15 	stw	zero,-12(fp)
2002f90c:	00001906 	br	2002f974 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
2002f910:	008800f4 	movhi	r2,8195
2002f914:	10828104 	addi	r2,r2,2564
2002f918:	e0fffd17 	ldw	r3,-12(fp)
2002f91c:	18c00324 	muli	r3,r3,12
2002f920:	10c5883a 	add	r2,r2,r3
2002f924:	10800017 	ldw	r2,0(r2)
2002f928:	10000f1e 	bne	r2,zero,2002f968 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
2002f92c:	008800f4 	movhi	r2,8195
2002f930:	10828104 	addi	r2,r2,2564
2002f934:	e0fffd17 	ldw	r3,-12(fp)
2002f938:	18c00324 	muli	r3,r3,12
2002f93c:	10c5883a 	add	r2,r2,r3
2002f940:	e0ffff17 	ldw	r3,-4(fp)
2002f944:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
2002f948:	d0e00a17 	ldw	r3,-32728(gp)
2002f94c:	e0bffd17 	ldw	r2,-12(fp)
2002f950:	1880020e 	bge	r3,r2,2002f95c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
2002f954:	e0bffd17 	ldw	r2,-12(fp)
2002f958:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
2002f95c:	e0bffd17 	ldw	r2,-12(fp)
2002f960:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
2002f964:	00000606 	br	2002f980 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
2002f968:	e0bffd17 	ldw	r2,-12(fp)
2002f96c:	10800044 	addi	r2,r2,1
2002f970:	e0bffd15 	stw	r2,-12(fp)
2002f974:	e0bffd17 	ldw	r2,-12(fp)
2002f978:	10800810 	cmplti	r2,r2,32
2002f97c:	103fe41e 	bne	r2,zero,2002f910 <__alt_data_end+0xffff0510>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
2002f980:	e0bffe17 	ldw	r2,-8(fp)
}
2002f984:	e037883a 	mov	sp,fp
2002f988:	df000017 	ldw	fp,0(sp)
2002f98c:	dec00104 	addi	sp,sp,4
2002f990:	f800283a 	ret

2002f994 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
2002f994:	defffb04 	addi	sp,sp,-20
2002f998:	df000415 	stw	fp,16(sp)
2002f99c:	df000404 	addi	fp,sp,16
2002f9a0:	e13ffe15 	stw	r4,-8(fp)
2002f9a4:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
2002f9a8:	e0bfff17 	ldw	r2,-4(fp)
2002f9ac:	10840070 	cmpltui	r2,r2,4097
2002f9b0:	1000021e 	bne	r2,zero,2002f9bc <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
2002f9b4:	00840004 	movi	r2,4096
2002f9b8:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
2002f9bc:	e0fffe17 	ldw	r3,-8(fp)
2002f9c0:	e0bfff17 	ldw	r2,-4(fp)
2002f9c4:	1885883a 	add	r2,r3,r2
2002f9c8:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
2002f9cc:	e0bffe17 	ldw	r2,-8(fp)
2002f9d0:	e0bffc15 	stw	r2,-16(fp)
2002f9d4:	00000506 	br	2002f9ec <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
2002f9d8:	e0bffc17 	ldw	r2,-16(fp)
2002f9dc:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
2002f9e0:	e0bffc17 	ldw	r2,-16(fp)
2002f9e4:	10800804 	addi	r2,r2,32
2002f9e8:	e0bffc15 	stw	r2,-16(fp)
2002f9ec:	e0fffc17 	ldw	r3,-16(fp)
2002f9f0:	e0bffd17 	ldw	r2,-12(fp)
2002f9f4:	18bff836 	bltu	r3,r2,2002f9d8 <__alt_data_end+0xffff05d8>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
2002f9f8:	e0bffe17 	ldw	r2,-8(fp)
2002f9fc:	108007cc 	andi	r2,r2,31
2002fa00:	10000226 	beq	r2,zero,2002fa0c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
2002fa04:	e0bffc17 	ldw	r2,-16(fp)
2002fa08:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
2002fa0c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
2002fa10:	0001883a 	nop
2002fa14:	e037883a 	mov	sp,fp
2002fa18:	df000017 	ldw	fp,0(sp)
2002fa1c:	dec00104 	addi	sp,sp,4
2002fa20:	f800283a 	ret

2002fa24 <atexit>:
2002fa24:	200b883a 	mov	r5,r4
2002fa28:	000f883a 	mov	r7,zero
2002fa2c:	000d883a 	mov	r6,zero
2002fa30:	0009883a 	mov	r4,zero
2002fa34:	002faec1 	jmpi	2002faec <__register_exitproc>

2002fa38 <exit>:
2002fa38:	defffe04 	addi	sp,sp,-8
2002fa3c:	000b883a 	mov	r5,zero
2002fa40:	dc000015 	stw	r16,0(sp)
2002fa44:	dfc00115 	stw	ra,4(sp)
2002fa48:	2021883a 	mov	r16,r4
2002fa4c:	002fc040 	call	2002fc04 <__call_exitprocs>
2002fa50:	008800f4 	movhi	r2,8195
2002fa54:	1086f904 	addi	r2,r2,7140
2002fa58:	11000017 	ldw	r4,0(r2)
2002fa5c:	20800f17 	ldw	r2,60(r4)
2002fa60:	10000126 	beq	r2,zero,2002fa68 <exit+0x30>
2002fa64:	103ee83a 	callr	r2
2002fa68:	8009883a 	mov	r4,r16
2002fa6c:	002fd840 	call	2002fd84 <_exit>

2002fa70 <memcmp>:
2002fa70:	01c000c4 	movi	r7,3
2002fa74:	3980192e 	bgeu	r7,r6,2002fadc <memcmp+0x6c>
2002fa78:	2144b03a 	or	r2,r4,r5
2002fa7c:	11c4703a 	and	r2,r2,r7
2002fa80:	10000f26 	beq	r2,zero,2002fac0 <memcmp+0x50>
2002fa84:	20800003 	ldbu	r2,0(r4)
2002fa88:	28c00003 	ldbu	r3,0(r5)
2002fa8c:	10c0151e 	bne	r2,r3,2002fae4 <memcmp+0x74>
2002fa90:	31bfff84 	addi	r6,r6,-2
2002fa94:	01ffffc4 	movi	r7,-1
2002fa98:	00000406 	br	2002faac <memcmp+0x3c>
2002fa9c:	20800003 	ldbu	r2,0(r4)
2002faa0:	28c00003 	ldbu	r3,0(r5)
2002faa4:	31bfffc4 	addi	r6,r6,-1
2002faa8:	10c00e1e 	bne	r2,r3,2002fae4 <memcmp+0x74>
2002faac:	21000044 	addi	r4,r4,1
2002fab0:	29400044 	addi	r5,r5,1
2002fab4:	31fff91e 	bne	r6,r7,2002fa9c <__alt_data_end+0xffff069c>
2002fab8:	0005883a 	mov	r2,zero
2002fabc:	f800283a 	ret
2002fac0:	20c00017 	ldw	r3,0(r4)
2002fac4:	28800017 	ldw	r2,0(r5)
2002fac8:	18bfee1e 	bne	r3,r2,2002fa84 <__alt_data_end+0xffff0684>
2002facc:	31bfff04 	addi	r6,r6,-4
2002fad0:	21000104 	addi	r4,r4,4
2002fad4:	29400104 	addi	r5,r5,4
2002fad8:	39bff936 	bltu	r7,r6,2002fac0 <__alt_data_end+0xffff06c0>
2002fadc:	303fe91e 	bne	r6,zero,2002fa84 <__alt_data_end+0xffff0684>
2002fae0:	003ff506 	br	2002fab8 <__alt_data_end+0xffff06b8>
2002fae4:	10c5c83a 	sub	r2,r2,r3
2002fae8:	f800283a 	ret

2002faec <__register_exitproc>:
2002faec:	defffa04 	addi	sp,sp,-24
2002faf0:	dc000315 	stw	r16,12(sp)
2002faf4:	040800f4 	movhi	r16,8195
2002faf8:	8406f904 	addi	r16,r16,7140
2002fafc:	80c00017 	ldw	r3,0(r16)
2002fb00:	dc400415 	stw	r17,16(sp)
2002fb04:	dfc00515 	stw	ra,20(sp)
2002fb08:	18805217 	ldw	r2,328(r3)
2002fb0c:	2023883a 	mov	r17,r4
2002fb10:	10003726 	beq	r2,zero,2002fbf0 <__register_exitproc+0x104>
2002fb14:	10c00117 	ldw	r3,4(r2)
2002fb18:	010007c4 	movi	r4,31
2002fb1c:	20c00e16 	blt	r4,r3,2002fb58 <__register_exitproc+0x6c>
2002fb20:	1a000044 	addi	r8,r3,1
2002fb24:	8800221e 	bne	r17,zero,2002fbb0 <__register_exitproc+0xc4>
2002fb28:	18c00084 	addi	r3,r3,2
2002fb2c:	18c7883a 	add	r3,r3,r3
2002fb30:	18c7883a 	add	r3,r3,r3
2002fb34:	12000115 	stw	r8,4(r2)
2002fb38:	10c7883a 	add	r3,r2,r3
2002fb3c:	19400015 	stw	r5,0(r3)
2002fb40:	0005883a 	mov	r2,zero
2002fb44:	dfc00517 	ldw	ra,20(sp)
2002fb48:	dc400417 	ldw	r17,16(sp)
2002fb4c:	dc000317 	ldw	r16,12(sp)
2002fb50:	dec00604 	addi	sp,sp,24
2002fb54:	f800283a 	ret
2002fb58:	00800034 	movhi	r2,0
2002fb5c:	10800004 	addi	r2,r2,0
2002fb60:	10002626 	beq	r2,zero,2002fbfc <__register_exitproc+0x110>
2002fb64:	01006404 	movi	r4,400
2002fb68:	d9400015 	stw	r5,0(sp)
2002fb6c:	d9800115 	stw	r6,4(sp)
2002fb70:	d9c00215 	stw	r7,8(sp)
2002fb74:	00000000 	call	20000000 <__alt_mem_sdram+0x20000000>
2002fb78:	d9400017 	ldw	r5,0(sp)
2002fb7c:	d9800117 	ldw	r6,4(sp)
2002fb80:	d9c00217 	ldw	r7,8(sp)
2002fb84:	10001d26 	beq	r2,zero,2002fbfc <__register_exitproc+0x110>
2002fb88:	81000017 	ldw	r4,0(r16)
2002fb8c:	10000115 	stw	zero,4(r2)
2002fb90:	02000044 	movi	r8,1
2002fb94:	22405217 	ldw	r9,328(r4)
2002fb98:	0007883a 	mov	r3,zero
2002fb9c:	12400015 	stw	r9,0(r2)
2002fba0:	20805215 	stw	r2,328(r4)
2002fba4:	10006215 	stw	zero,392(r2)
2002fba8:	10006315 	stw	zero,396(r2)
2002fbac:	883fde26 	beq	r17,zero,2002fb28 <__alt_data_end+0xffff0728>
2002fbb0:	18c9883a 	add	r4,r3,r3
2002fbb4:	2109883a 	add	r4,r4,r4
2002fbb8:	1109883a 	add	r4,r2,r4
2002fbbc:	21802215 	stw	r6,136(r4)
2002fbc0:	01800044 	movi	r6,1
2002fbc4:	12406217 	ldw	r9,392(r2)
2002fbc8:	30cc983a 	sll	r6,r6,r3
2002fbcc:	4992b03a 	or	r9,r9,r6
2002fbd0:	12406215 	stw	r9,392(r2)
2002fbd4:	21c04215 	stw	r7,264(r4)
2002fbd8:	01000084 	movi	r4,2
2002fbdc:	893fd21e 	bne	r17,r4,2002fb28 <__alt_data_end+0xffff0728>
2002fbe0:	11006317 	ldw	r4,396(r2)
2002fbe4:	218cb03a 	or	r6,r4,r6
2002fbe8:	11806315 	stw	r6,396(r2)
2002fbec:	003fce06 	br	2002fb28 <__alt_data_end+0xffff0728>
2002fbf0:	18805304 	addi	r2,r3,332
2002fbf4:	18805215 	stw	r2,328(r3)
2002fbf8:	003fc606 	br	2002fb14 <__alt_data_end+0xffff0714>
2002fbfc:	00bfffc4 	movi	r2,-1
2002fc00:	003fd006 	br	2002fb44 <__alt_data_end+0xffff0744>

2002fc04 <__call_exitprocs>:
2002fc04:	defff504 	addi	sp,sp,-44
2002fc08:	df000915 	stw	fp,36(sp)
2002fc0c:	dd400615 	stw	r21,24(sp)
2002fc10:	dc800315 	stw	r18,12(sp)
2002fc14:	dfc00a15 	stw	ra,40(sp)
2002fc18:	ddc00815 	stw	r23,32(sp)
2002fc1c:	dd800715 	stw	r22,28(sp)
2002fc20:	dd000515 	stw	r20,20(sp)
2002fc24:	dcc00415 	stw	r19,16(sp)
2002fc28:	dc400215 	stw	r17,8(sp)
2002fc2c:	dc000115 	stw	r16,4(sp)
2002fc30:	d9000015 	stw	r4,0(sp)
2002fc34:	2839883a 	mov	fp,r5
2002fc38:	04800044 	movi	r18,1
2002fc3c:	057fffc4 	movi	r21,-1
2002fc40:	008800f4 	movhi	r2,8195
2002fc44:	1086f904 	addi	r2,r2,7140
2002fc48:	12000017 	ldw	r8,0(r2)
2002fc4c:	45005217 	ldw	r20,328(r8)
2002fc50:	44c05204 	addi	r19,r8,328
2002fc54:	a0001c26 	beq	r20,zero,2002fcc8 <__call_exitprocs+0xc4>
2002fc58:	a0800117 	ldw	r2,4(r20)
2002fc5c:	15ffffc4 	addi	r23,r2,-1
2002fc60:	b8000d16 	blt	r23,zero,2002fc98 <__call_exitprocs+0x94>
2002fc64:	14000044 	addi	r16,r2,1
2002fc68:	8421883a 	add	r16,r16,r16
2002fc6c:	8421883a 	add	r16,r16,r16
2002fc70:	84402004 	addi	r17,r16,128
2002fc74:	a463883a 	add	r17,r20,r17
2002fc78:	a421883a 	add	r16,r20,r16
2002fc7c:	e0001e26 	beq	fp,zero,2002fcf8 <__call_exitprocs+0xf4>
2002fc80:	80804017 	ldw	r2,256(r16)
2002fc84:	e0801c26 	beq	fp,r2,2002fcf8 <__call_exitprocs+0xf4>
2002fc88:	bdffffc4 	addi	r23,r23,-1
2002fc8c:	843fff04 	addi	r16,r16,-4
2002fc90:	8c7fff04 	addi	r17,r17,-4
2002fc94:	bd7ff91e 	bne	r23,r21,2002fc7c <__alt_data_end+0xffff087c>
2002fc98:	00800034 	movhi	r2,0
2002fc9c:	10800004 	addi	r2,r2,0
2002fca0:	10000926 	beq	r2,zero,2002fcc8 <__call_exitprocs+0xc4>
2002fca4:	a0800117 	ldw	r2,4(r20)
2002fca8:	1000301e 	bne	r2,zero,2002fd6c <__call_exitprocs+0x168>
2002fcac:	a0800017 	ldw	r2,0(r20)
2002fcb0:	10003226 	beq	r2,zero,2002fd7c <__call_exitprocs+0x178>
2002fcb4:	a009883a 	mov	r4,r20
2002fcb8:	98800015 	stw	r2,0(r19)
2002fcbc:	00000000 	call	20000000 <__alt_mem_sdram+0x20000000>
2002fcc0:	9d000017 	ldw	r20,0(r19)
2002fcc4:	a03fe41e 	bne	r20,zero,2002fc58 <__alt_data_end+0xffff0858>
2002fcc8:	dfc00a17 	ldw	ra,40(sp)
2002fccc:	df000917 	ldw	fp,36(sp)
2002fcd0:	ddc00817 	ldw	r23,32(sp)
2002fcd4:	dd800717 	ldw	r22,28(sp)
2002fcd8:	dd400617 	ldw	r21,24(sp)
2002fcdc:	dd000517 	ldw	r20,20(sp)
2002fce0:	dcc00417 	ldw	r19,16(sp)
2002fce4:	dc800317 	ldw	r18,12(sp)
2002fce8:	dc400217 	ldw	r17,8(sp)
2002fcec:	dc000117 	ldw	r16,4(sp)
2002fcf0:	dec00b04 	addi	sp,sp,44
2002fcf4:	f800283a 	ret
2002fcf8:	a0800117 	ldw	r2,4(r20)
2002fcfc:	80c00017 	ldw	r3,0(r16)
2002fd00:	10bfffc4 	addi	r2,r2,-1
2002fd04:	15c01426 	beq	r2,r23,2002fd58 <__call_exitprocs+0x154>
2002fd08:	80000015 	stw	zero,0(r16)
2002fd0c:	183fde26 	beq	r3,zero,2002fc88 <__alt_data_end+0xffff0888>
2002fd10:	95c8983a 	sll	r4,r18,r23
2002fd14:	a0806217 	ldw	r2,392(r20)
2002fd18:	a5800117 	ldw	r22,4(r20)
2002fd1c:	2084703a 	and	r2,r4,r2
2002fd20:	10000b26 	beq	r2,zero,2002fd50 <__call_exitprocs+0x14c>
2002fd24:	a0806317 	ldw	r2,396(r20)
2002fd28:	2088703a 	and	r4,r4,r2
2002fd2c:	20000c1e 	bne	r4,zero,2002fd60 <__call_exitprocs+0x15c>
2002fd30:	89400017 	ldw	r5,0(r17)
2002fd34:	d9000017 	ldw	r4,0(sp)
2002fd38:	183ee83a 	callr	r3
2002fd3c:	a0800117 	ldw	r2,4(r20)
2002fd40:	15bfbf1e 	bne	r2,r22,2002fc40 <__alt_data_end+0xffff0840>
2002fd44:	98800017 	ldw	r2,0(r19)
2002fd48:	153fcf26 	beq	r2,r20,2002fc88 <__alt_data_end+0xffff0888>
2002fd4c:	003fbc06 	br	2002fc40 <__alt_data_end+0xffff0840>
2002fd50:	183ee83a 	callr	r3
2002fd54:	003ff906 	br	2002fd3c <__alt_data_end+0xffff093c>
2002fd58:	a5c00115 	stw	r23,4(r20)
2002fd5c:	003feb06 	br	2002fd0c <__alt_data_end+0xffff090c>
2002fd60:	89000017 	ldw	r4,0(r17)
2002fd64:	183ee83a 	callr	r3
2002fd68:	003ff406 	br	2002fd3c <__alt_data_end+0xffff093c>
2002fd6c:	a0800017 	ldw	r2,0(r20)
2002fd70:	a027883a 	mov	r19,r20
2002fd74:	1029883a 	mov	r20,r2
2002fd78:	003fb606 	br	2002fc54 <__alt_data_end+0xffff0854>
2002fd7c:	0005883a 	mov	r2,zero
2002fd80:	003ffb06 	br	2002fd70 <__alt_data_end+0xffff0970>

2002fd84 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
2002fd84:	defffd04 	addi	sp,sp,-12
2002fd88:	df000215 	stw	fp,8(sp)
2002fd8c:	df000204 	addi	fp,sp,8
2002fd90:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
2002fd94:	0001883a 	nop
2002fd98:	e0bfff17 	ldw	r2,-4(fp)
2002fd9c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
2002fda0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
2002fda4:	10000226 	beq	r2,zero,2002fdb0 <_exit+0x2c>
    ALT_SIM_FAIL();
2002fda8:	002af070 	cmpltui	zero,zero,43969
2002fdac:	00000106 	br	2002fdb4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
2002fdb0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
2002fdb4:	003fff06 	br	2002fdb4 <__alt_data_end+0xffff09b4>
